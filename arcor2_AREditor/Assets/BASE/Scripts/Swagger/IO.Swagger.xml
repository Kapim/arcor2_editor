<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IO.Swagger</name>
    </assembly>
    <members>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Client.IReadableConfiguration">
             <summary>
             Represents a readable-only configuration contract.
             </summary>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.AccessToken">
             <summary>
             Gets the access token.
             </summary>
             <value>Access token.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.ApiKey">
             <summary>
             Gets the API key.
=======
        <member name="T:IO.Swagger.Model.RemoveConstantRequestAllOf">
             <summary>
             RemoveConstantRequestAllOf
>>>>>>> devel
             </summary>
             <value>API key.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.IReadableConfiguration.ApiKeyPrefix">
             <summary>
             Gets the API key prefix.
=======
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <value>API key prefix.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.IReadableConfiguration.BasePath">
             <summary>
             Gets the base path.
             </summary>
             <value>Base path.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.DateTimeFormat">
             <summary>
             Gets the date time format.
=======
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.#ctor(IO.Swagger.Model.RemoveConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantRequestAllOf.Args">
             <summary>
             Gets or Sets Args
>>>>>>> devel
             </summary>
             <value>Date time foramt.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.IReadableConfiguration.DefaultHeader">
             <summary>
             Gets the default header.
=======
        <member name="P:IO.Swagger.Model.RemoveConstantRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
>>>>>>> devel
             </summary>
             <value>Default header.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.IReadableConfiguration.TempFolderPath">
=======
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Gets the temp folder path.
             </summary>
             <value>Temp folder path.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Timeout">
=======
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Gets the HTTP connection timeout (in milliseconds)
             </summary>
             <value>HTTP connection timeout.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.IReadableConfiguration.UserAgent">
=======
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Gets the user agent.
             </summary>
             <value>User agent.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Username">
             <summary>
             Gets the username.
             </summary>
             <value>Username.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Password">
=======
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.Equals(IO.Swagger.Model.RemoveConstantRequestAllOf)">
             <summary>
             Returns true if RemoveConstantRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveConstantRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the password.
             </summary>
             <value>Password.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
=======
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Gets the API key with prefix.
             </summary>
             <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
             <returns>API key with prefix.</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Client.ApiResponse`1">
             <summary>
             API Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.StatusCode">
             <summary>
             Gets or sets the status code (HTTP status code)
=======
        <member name="T:IO.Swagger.Model.InverseKinematicsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2.data.common.Joint], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsResponse" /> class.
>>>>>>> devel
             </summary>
             <value>The status code.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.ApiResponse`1.Headers">
             <summary>
             Gets or sets the HTTP headers
             </summary>
             <value>HTTP headers</value>
            </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.Data">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.Joint})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsResponse.Id">
>>>>>>> devel
             <summary>
             Gets or sets the data (parsed HTTP body)
             </summary>
             <value>The data.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiResponse`1" /> class.
=======
        <member name="P:IO.Swagger.Model.InverseKinematicsResponse.Messages">
             <summary>
             Gets or Sets Messages
>>>>>>> devel
             </summary>
             <param name="statusCode">HTTP status code.</param>
             <param name="headers">HTTP headers.</param>
             <param name="data">Data (parsed HTTP body)</param>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Client.GlobalConfiguration">
=======
        <member name="P:IO.Swagger.Model.InverseKinematicsResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsResponse.Data">
>>>>>>> devel
             <summary>
             <see cref="T:IO.Swagger.Client.GlobalConfiguration" /> provides a compile-time extension point for globally configuring
             API Clients.
             </summary>
             <remarks>
             A customized implementation via partial class may reside in another file and may
             be excluded from automatic generation via a .openapi-generator-ignore file.
             </remarks>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Client.ApiException">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.ToString">
>>>>>>> devel
             <summary>
             API Exception
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.ApiException.ErrorCode">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.ToJson">
>>>>>>> devel
             <summary>
             Gets or sets the error code (HTTP status code)
             </summary>
             <value>The error code (HTTP status code).</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.ApiException.ErrorContent">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Gets or sets the error content (body json object)
             </summary>
             <value>The error content (Http response body).</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiException.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String)">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.Equals(IO.Swagger.Model.InverseKinematicsResponse)">
             <summary>
             Returns true if InverseKinematicsResponse instances are equal
             </summary>
             <param name="input">Instance of InverseKinematicsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException" /> class.
             </summary>
             <param name="errorCode">HTTP status code.</param>
             <param name="message">Error message.</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String,System.dynamic)">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException" /> class.
             </summary>
             <param name="errorCode">HTTP status code.</param>
             <param name="message">Error message.</param>
             <param name="errorContent">Error content.</param>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Client.Configuration">
             <summary>
             Represents a set of configuration settings
             </summary>
            </member>
        <member name="F:IO.Swagger.Client.Configuration.Version">
             <summary>
             Version of the package.
             </summary>
             <value>Version of the package.</value>
            </member>
        <member name="F:IO.Swagger.Client.Configuration.ISO8601_DATETIME_FORMAT">
=======
        <member name="T:IO.Swagger.Model.RenameActionPointJointsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsResponse.Id">
>>>>>>> devel
             <summary>
             Identifier for ISO 8601 DateTime Format
             </summary>
             <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Client.Configuration.DefaultExceptionFactory">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointJointsResponse.Messages">
>>>>>>> devel
             <summary>
             Default creation of exceptions for a given method name and response object
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.Configuration.Default">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointJointsResponse.Response">
>>>>>>> devel
             <summary>
             Gets or sets the default Configuration.
             </summary>
             <value>Configuration.</value>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Client.Configuration._apiKey">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointJointsResponse.Result">
>>>>>>> devel
             <summary>
             Gets or sets the API key based on the authentication name.
             </summary>
             <value>The API key.</value>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Client.Configuration._apiKeyPrefix">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointJointsResponse.Data">
>>>>>>> devel
             <summary>
             Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
             </summary>
             <value>The prefix of the API key.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.Configuration.#ctor">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.ToString">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration" /> class
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.ToJson">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration" /> class
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.Configuration.#ctor(IO.Swagger.Client.ApiClient,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Int32,System.String)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration" /> class with different settings
             </summary>
             <param name="apiClient">Api client</param>
             <param name="defaultHeader">Dictionary of default HTTP header</param>
             <param name="username">Username</param>
             <param name="password">Password</param>
             <param name="accessToken">accessToken</param>
             <param name="apiKey">Dictionary of API key</param>
             <param name="apiKeyPrefix">Dictionary of API key prefix</param>
             <param name="tempFolderPath">Temp folder path</param>
             <param name="dateTimeFormat">DateTime format string</param>
             <param name="timeout">HTTP connection timeout (in milliseconds)</param>
             <param name="userAgent">HTTP user agent</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.Configuration.#ctor(IO.Swagger.Client.ApiClient)">
             <summary>
             Initializes a new instance of the Configuration class.
             </summary>
             <param name="apiClient">Api client.</param>
            </member>
        <member name="P:IO.Swagger.Client.Configuration.ApiClient">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.Equals(IO.Swagger.Model.RenameActionPointJointsResponse)">
             <summary>
             Returns true if RenameActionPointJointsResponse instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointJointsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets an instance of an ApiClient for this configuration
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.Configuration.BasePath">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Gets or sets the base path for API access.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.Configuration.DefaultHeader">
             <summary>
             Gets or sets the default header.
             </summary>
            </member>
        <member name="P:IO.Swagger.Client.Configuration.Timeout">
             <summary>
             Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
             </summary>
            </member>
        <member name="P:IO.Swagger.Client.Configuration.UserAgent">
             <summary>
             Gets or sets the HTTP user agent.
             </summary>
             <value>Http user agent.</value>
            </member>
        <member name="P:IO.Swagger.Client.Configuration.Username">
             <summary>
             Gets or sets the username (HTTP basic authentication).
=======
        <member name="T:IO.Swagger.Model.PackageSummary">
             <summary>
             PackageSummary(id: str, package_meta: arcor2.data.execution.PackageMeta, project_meta: Union[arcor2_execution_data.common.ProjectMeta, NoneType] = None)
>>>>>>> devel
             </summary>
             <value>The username.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.Configuration.Password">
             <summary>
             Gets or sets the password (HTTP basic authentication).
=======
        <member name="M:IO.Swagger.Model.PackageSummary.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageSummary" /> class.
>>>>>>> devel
             </summary>
             <value>The password.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.Configuration.GetApiKeyWithPrefix(System.String)">
             <summary>
             Gets the API key with prefix.
             </summary>
             <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
             <returns>API key with prefix.</returns>
            </member>
        <member name="P:IO.Swagger.Client.Configuration.AccessToken">
             <summary>
             Gets or sets the access token for OAuth2 authentication.
=======
        <member name="M:IO.Swagger.Model.PackageSummary.#ctor(System.String,IO.Swagger.Model.PackageMeta,IO.Swagger.Model.ProjectMeta)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageSummary" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="packageMeta">packageMeta (required).</param>
             <param name="projectMeta">projectMeta.</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageSummary.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <value>The access token.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.Configuration.TempFolderPath">
             <summary>
             Gets or sets the temporary folder path to store the files downloaded from the server.
             </summary>
             <value>Folder path.</value>
            </member>
        <member name="P:IO.Swagger.Client.Configuration.DateTimeFormat">
             <summary>
             Gets or sets the date time format used when serializing in the ApiClient
             By default, it's set to ISO 8601 - "o", for others see:
             https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
             and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
             No validation is done to ensure that the string you're providing is valid
=======
        <member name="P:IO.Swagger.Model.PackageSummary.PackageMeta">
             <summary>
             Gets or Sets PackageMeta
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageSummary.ProjectMeta">
             <summary>
             Gets or Sets ProjectMeta
>>>>>>> devel
             </summary>
             <value>The DateTimeFormat string</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.Configuration.ApiKeyPrefix">
=======
        <member name="M:IO.Swagger.Model.PackageSummary.ToString">
>>>>>>> devel
             <summary>
             Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
             </summary>
             <value>The prefix of the API key.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.Configuration.ApiKey">
=======
        <member name="M:IO.Swagger.Model.PackageSummary.ToJson">
>>>>>>> devel
             <summary>
             Gets or sets the API key based on the authentication name.
             </summary>
             <value>The API key.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.Configuration.AddDefaultHeader(System.String,System.String)">
=======
        <member name="M:IO.Swagger.Model.PackageSummary.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.Configuration.CreateApiClient">
             <summary>
             Creates a new <see cref="T:IO.Swagger.Client.ApiClient" /> based on this <see cref="T:IO.Swagger.Client.Configuration" /> instance.
             </summary>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Client.Configuration.ToDebugReport">
=======
        <member name="M:IO.Swagger.Model.PackageSummary.Equals(IO.Swagger.Model.PackageSummary)">
             <summary>
             Returns true if PackageSummary instances are equal
             </summary>
             <param name="input">Instance of PackageSummary to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageSummary.GetHashCode">
>>>>>>> devel
             <summary>
             Returns a string with essential information for debugging.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.Configuration.AddApiKey(System.String,System.String)">
=======
        <member name="M:IO.Swagger.Model.PackageSummary.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Add Api Key Header.
             </summary>
             <param name="key">Api Key name.</param>
             <param name="value">Api Key value.</param>
             <returns></returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
             <summary>
             Sets the API key prefix.
             </summary>
             <param name="key">Api Key name.</param>
             <param name="value">Api Key value.</param>
            </member>
        <member name="T:IO.Swagger.Client.IApiAccessor">
             <summary>
             Represents configuration aspects required to interact with the API endpoints.
             </summary>
            </member>
        <member name="P:IO.Swagger.Client.IApiAccessor.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="M:IO.Swagger.Client.IApiAccessor.GetBasePath">
             <summary>
             Gets the base path of the API client.
=======
        <member name="T:IO.Swagger.Model.FocusObjectStartRequestAllOf">
             <summary>
             FocusObjectStartRequestAllOf
>>>>>>> devel
             </summary>
             <value>The base path</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.IApiAccessor.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="T:IO.Swagger.Client.OpenAPIDateConverter">
             <summary>
             Formatter for 'date' openapi formats ss defined by full-date - RFC3339
             see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#data-types
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.#ctor(IO.Swagger.Model.FocusObjectStartRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.OpenAPIDateConverter.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.OpenAPIDateConverter" /> class.
             </summary>
            </member>
        <member name="T:IO.Swagger.Client.ExceptionFactory">
=======
        <member name="P:IO.Swagger.Model.FocusObjectStartRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             A delegate to ExceptionFactory method
             </summary>
             <param name="methodName">Method name</param>
             <param name="response">Response</param>
             <returns>Exceptions</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Client.ApiClient">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             API client is mainly responsible for making the HTTP call to the API backend.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.InterceptRequest(RestSharp.IRestRequest)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Allows for extending request processing for <see cref="T:IO.Swagger.Client.ApiClient" /> generated code.
             </summary>
             <param name="request">The RestSharp request object</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.InterceptResponse(RestSharp.IRestRequest,RestSharp.IRestResponse)">
             <summary>
             Allows for extending response processing for <see cref="T:IO.Swagger.Client.ApiClient" /> generated code.
             </summary>
             <param name="request">The RestSharp request object</param>
             <param name="response">The RestSharp response object</param>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.#ctor">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.Equals(IO.Swagger.Model.FocusObjectStartRequestAllOf)">
             <summary>
             Returns true if FocusObjectStartRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of FocusObjectStartRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient" /> class
             with default configuration.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.#ctor(IO.Swagger.Client.Configuration)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient" /> class
             with default base path (http://localhost).
             </summary>
             <param name="config">An instance of Configuration.</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient" /> class
             with default configuration.
=======
        <member name="T:IO.Swagger.Model.ActionExecution">
             <summary>
             Used to notify beginning of the action execution triggered while editing     a project.
>>>>>>> devel
             </summary>
             <param name="basePath">The base path.</param>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Client.ApiClient.Default">
             <summary>
             Gets or sets the default API client for making HTTP calls.
=======
        <member name="T:IO.Swagger.Model.ActionExecution.ChangeTypeEnum">
             <summary>
             Defines ChangeType
>>>>>>> devel
             </summary>
             <value>The default API client.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Client.ApiClient.Configuration">
             <summary>
             Gets or sets an instance of the IReadableConfiguration.
             </summary>
             <value>An instance of the IReadableConfiguration.</value>
             <remarks>
             <see cref="T:IO.Swagger.Client.IReadableConfiguration" /> helps us to avoid modifying possibly global
             configuration values from within a given client. It does not guarantee thread-safety
             of the <see cref="T:IO.Swagger.Client.Configuration" /> instance in any way.
             </remarks>
            </member>
        <member name="P:IO.Swagger.Client.ApiClient.RestClient">
             <summary>
             Gets or sets the RestClient.
=======
        <member name="F:IO.Swagger.Model.ActionExecution.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionExecution.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionExecution.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionExecution.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionExecution.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecution.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionExecution" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecution.#ctor(System.Nullable{IO.Swagger.Model.ActionExecution.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ActionExecutionData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionExecution" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionExecution.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionExecution.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionExecution.Data">
             <summary>
             Gets or Sets Data
>>>>>>> devel
             </summary>
             <value>An instance of the RestClient</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
=======
        <member name="M:IO.Swagger.Model.ActionExecution.ToString">
>>>>>>> devel
             <summary>
             Makes the HTTP request (Sync).
             </summary>
             <param name="path">URL path.</param>
             <param name="method">HTTP method.</param>
             <param name="queryParams">Query parameters.</param>
             <param name="postBody">HTTP body (POST request).</param>
             <param name="headerParams">Header parameters.</param>
             <param name="formParams">Form parameters.</param>
             <param name="fileParams">File parameters.</param>
             <param name="pathParams">Path parameters.</param>
             <param name="contentType">Content Type of the request</param>
             <returns>Object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
=======
        <member name="M:IO.Swagger.Model.ActionExecution.ToJson">
>>>>>>> devel
             <summary>
             Makes the asynchronous HTTP request.
             </summary>
             <param name="path">URL path.</param>
             <param name="method">HTTP method.</param>
             <param name="queryParams">Query parameters.</param>
             <param name="postBody">HTTP body (POST request).</param>
             <param name="headerParams">Header parameters.</param>
             <param name="formParams">Form parameters.</param>
             <param name="fileParams">File parameters.</param>
             <param name="pathParams">Path parameters.</param>
             <param name="contentType">Content type.</param>
             <param name="cancellationToken">Cancellation Token.</param>
             <returns>The Task instance.</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.EscapeString(System.String)">
=======
        <member name="M:IO.Swagger.Model.ActionExecution.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Escape string (url-encoded).
             </summary>
             <param name="str">String to be escaped.</param>
             <returns>Escaped string.</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
             <summary>
             Create FileParameter based on Stream.
             </summary>
             <param name="name">Parameter name.</param>
             <param name="stream">Input stream.</param>
             <returns>FileParameter.</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToString(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionExecution.Equals(IO.Swagger.Model.ActionExecution)">
             <summary>
             Returns true if ActionExecution instances are equal
             </summary>
             <param name="input">Instance of ActionExecution to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecution.GetHashCode">
>>>>>>> devel
             <summary>
             If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
             If parameter is a list, join the list with ",".
             Otherwise just return the string.
             </summary>
             <param name="obj">The parameter (header, path, query, form).</param>
             <returns>Formatted string.</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
=======
        <member name="M:IO.Swagger.Model.ActionExecution.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Deserialize the JSON string into a proper object.
             </summary>
             <param name="response">The HTTP response.</param>
             <param name="type">Object type.</param>
             <returns>Object representation of the JSON string.</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.Serialize(System.Object)">
             <summary>
             Serialize an input (model) into JSON string
=======
        <member name="T:IO.Swagger.Model.SystemInfoResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2_arserver_data.rpc.common.SystemInfo.Response.Data, NoneType] = None)
>>>>>>> devel
             </summary>
             <param name="obj">Object.</param>
             <returns>JSON string.</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.IsJsonMime(System.String)">
             <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
                application/json
                application/json; charset=UTF8
                APPLICATION/JSON
                application/vnd.company+json
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="mime">MIME</param>
             <returns>Returns True if MIME type is json.</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.SelectHeaderContentType(System.String[])">
             <summary>
             Select the Content-Type header's value from the given content-type array:
             if JSON type exists in the given array, use it;
             otherwise use the first one defined in 'consumes'
             </summary>
             <param name="contentTypes">The Content-Type array to select from.</param>
             <returns>The Content-Type header to use.</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.SelectHeaderAccept(System.String[])">
             <summary>
             Select the Accept header's value from the given accepts array:
             if JSON exists in the given array, use it;
             otherwise use all of them (joining into a string)
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.SystemInfoResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponse.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="accepts">The accepts array to select from.</param>
             <returns>The Accept header to use.</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.Base64Encode(System.String)">
             <summary>
             Encode string in base64 format.
=======
        <member name="P:IO.Swagger.Model.SystemInfoResponse.Messages">
             <summary>
             Gets or Sets Messages
>>>>>>> devel
             </summary>
             <param name="text">String to be encoded.</param>
             <returns>Encoded string.</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Client.ApiClient.ConvertType(System.dynamic,System.Type)">
             <summary>
             Dynamically cast the object into target type.
             </summary>
             <param name="fromObject">Object to be casted</param>
             <param name="toObject">Target type</param>
             <returns>Casted object</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
             <summary>
             Convert stream to byte array
             </summary>
             <param name="inputStream">Input stream to be converted</param>
             <returns>Byte array</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.UrlEncode(System.String)">
             <summary>
             URL encode a string
             Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
             </summary>
             <param name="input">String to be URL encoded</param>
             <returns>Byte array</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.SanitizeFilename(System.String)">
             <summary>
             Sanitize filename by removing the path
             </summary>
             <param name="filename">Filename</param>
             <returns>Filename</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToKeyValuePairs(System.String,System.String,System.Object)">
             <summary>
             Convert params to key/value pairs. 
             Use collectionFormat to properly format lists and collections.
             </summary>
             <param name="collectionFormat">Collection format.</param>
             <param name="name">Key name.</param>
             <param name="value">Value object.</param>
             <returns>A list of KeyValuePairs</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.IsCollection(System.Object)">
             <summary>
             Check if generic object is a collection.
             </summary>
             <param name="value"></param>
             <returns>True if object is a collection type</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf">
             <summary>
             UpdateProjectHasLogicRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.#ctor(IO.Swagger.Model.UpdateProjectHasLogicRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.SystemInfoResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.Equals(IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf)">
             <summary>
             Returns true if UpdateProjectHasLogicRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectHasLogicRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponse.Equals(IO.Swagger.Model.SystemInfoResponse)">
             <summary>
             Returns true if SystemInfoResponse instances are equal
             </summary>
             <param name="input">Instance of SystemInfoResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationResponse.Id">
=======
        <member name="T:IO.Swagger.Model.AddObjectToSceneRequestArgs">
             <summary>
             Args(name: str, type: str, pose: Union[arcor2.data.common.Pose, NoneType] = None, parameters: List[arcor2.data.common.Parameter] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Parameter},IO.Swagger.Model.Pose,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequestArgs" /> class.
             </summary>
             <param name="name">name (required).</param>
             <param name="parameters">parameters.</param>
             <param name="pose">pose.</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestArgs.Name">
>>>>>>> devel
             <summary>
             Gets or Sets Name
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestArgs.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestArgs.Pose">
             <summary>
             Gets or Sets Pose
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestArgs.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.Equals(IO.Swagger.Model.UpdateActionPointOrientationResponse)">
             <summary>
             Returns true if UpdateActionPointOrientationResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.Equals(IO.Swagger.Model.AddObjectToSceneRequestArgs)">
             <summary>
             Returns true if AddObjectToSceneRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddObjectToSceneRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.LogicItemChanged">
             <summary>
             LogicItemChanged(data: arcor2.data.common.LogicItem)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum">
=======
        <member name="T:IO.Swagger.Model.ShowMainScreen">
             <summary>
             ShowMainScreen(data: arcor2_arserver_data.events.common.ShowMainScreen.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum.Add">
=======
        <member name="F:IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum.Add">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum.Update">
=======
        <member name="F:IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum.Remove">
=======
        <member name="F:IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum.Remove">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum.Updatebase">
=======
        <member name="F:IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum.Updatebase">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.LogicItemChanged.ChangeType">
=======
        <member name="P:IO.Swagger.Model.ShowMainScreen.ChangeType">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItemChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItemChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChanged.#ctor(System.Nullable{IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.LogicItem)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItemChanged" /> class.
=======
        <member name="M:IO.Swagger.Model.ShowMainScreen.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreen" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreen.#ctor(System.Nullable{IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ShowMainScreenData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreen" /> class.
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.LogicItemChanged.Event">
=======
        <member name="P:IO.Swagger.Model.ShowMainScreen.Event">
>>>>>>> devel
             <summary>
             Gets or Sets Event
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.LogicItemChanged.ParentId">
=======
        <member name="P:IO.Swagger.Model.ShowMainScreen.ParentId">
>>>>>>> devel
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.LogicItemChanged.Data">
=======
        <member name="P:IO.Swagger.Model.ShowMainScreen.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItemChanged.ToString">
=======
        <member name="M:IO.Swagger.Model.ShowMainScreen.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItemChanged.ToJson">
=======
        <member name="M:IO.Swagger.Model.ShowMainScreen.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItemChanged.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ShowMainScreen.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItemChanged.Equals(IO.Swagger.Model.LogicItemChanged)">
             <summary>
             Returns true if LogicItemChanged instances are equal
             </summary>
             <param name="input">Instance of LogicItemChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChanged.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ShowMainScreen.Equals(IO.Swagger.Model.ShowMainScreen)">
             <summary>
             Returns true if ShowMainScreen instances are equal
             </summary>
             <param name="input">Instance of ShowMainScreen to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreen.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItemChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ShowMainScreen.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PositionAllOf">
             <summary>
             PositionAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PositionAllOf.#ctor(System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PositionAllOf" /> class.
             </summary>
             <param name="x">x (default to 0.0M).</param>
             <param name="y">y (default to 0.0M).</param>
             <param name="z">z (default to 0.0M).</param>
            </member>
        <member name="P:IO.Swagger.Model.PositionAllOf.X">
             <summary>
             Gets or Sets X
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PositionAllOf.Y">
             <summary>
             Gets or Sets Y
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PositionAllOf.Z">
             <summary>
             Gets or Sets Z
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PositionAllOf.ToString">
             <summary>
             Returns the string presentation of the object
=======
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientation">
             <summary>
             RobotMoveToActionPointOrientation(data: arcor2_arserver_data.events.robot.RobotMoveToActionPointOrientation.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PositionAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
=======
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PositionAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
=======
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
>>>>>>> devel
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PositionAllOf.Equals(IO.Swagger.Model.PositionAllOf)">
             <summary>
             Returns true if PositionAllOf instances are equal
=======
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeType">
             <summary>
             Gets or Sets ChangeType
>>>>>>> devel
             </summary>
             <param name="input">Instance of PositionAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PositionAllOf.GetHashCode">
             <summary>
             Gets the hash code
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientation" /> class.
>>>>>>> devel
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PositionAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RemoveConstantRequestArgs">
             <summary>
             Args(constant_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequestArgs" /> class.
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.#ctor(System.Nullable{IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotMoveToActionPointOrientationData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientation" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientation.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientation.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientation.Data">
             <summary>
             Gets or Sets Data
>>>>>>> devel
             </summary>
             <param name="constantId">constantId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveConstantRequestArgs.ConstantId">
             <summary>
             Gets or Sets ConstantId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.Equals(IO.Swagger.Model.RemoveConstantRequestArgs)">
             <summary>
             Returns true if RemoveConstantRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RemoveConstantRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.Equals(IO.Swagger.Model.RobotMoveToActionPointOrientation)">
             <summary>
             Returns true if RobotMoveToActionPointOrientation instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointOrientation to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.FocusObjectStartRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.FocusObjectStart.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.FocusObjectStartRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.JointsChangedAllOf">
             <summary>
             JointsChangedAllOf
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FocusObjectStartRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectStartRequest.Request">
             <summary>
             Gets or Sets Request
=======
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.JointsChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.#ctor(IO.Swagger.Model.ProjectRobotJoints)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.JointsChangedAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FocusObjectStartRequest.Args">
=======
        <member name="P:IO.Swagger.Model.JointsChangedAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.Equals(IO.Swagger.Model.FocusObjectStartRequest)">
             <summary>
             Returns true if FocusObjectStartRequest instances are equal
             </summary>
             <param name="input">Instance of FocusObjectStartRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.Equals(IO.Swagger.Model.JointsChangedAllOf)">
             <summary>
             Returns true if JointsChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of JointsChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NamedOrientation">
             <summary>
             NamedOrientation(id: str, name: str, orientation: arcor2.data.common.Orientation)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NamedOrientation.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NamedOrientation" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NamedOrientation.#ctor(System.String,System.String,IO.Swagger.Model.Orientation)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NamedOrientation" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="orientation">orientation (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.NamedOrientation.Id">
=======
        <member name="T:IO.Swagger.Model.CopyActionPointRequestArgs">
>>>>>>> devel
             <summary>
             Args(id: str, position: Union[arcor2.data.common.Position, NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NamedOrientation.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NamedOrientation.Orientation">
             <summary>
             Gets or Sets Orientation
=======
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.#ctor(System.String,IO.Swagger.Model.Position)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="position">position.</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NamedOrientation.ToString">
             <summary>
             Returns the string presentation of the object
=======
        <member name="P:IO.Swagger.Model.CopyActionPointRequestArgs.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NamedOrientation.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.NamedOrientation.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
=======
        <member name="P:IO.Swagger.Model.CopyActionPointRequestArgs.Position">
             <summary>
             Gets or Sets Position
>>>>>>> devel
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NamedOrientation.Equals(IO.Swagger.Model.NamedOrientation)">
             <summary>
             Returns true if NamedOrientation instances are equal
             </summary>
             <param name="input">Instance of NamedOrientation to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NamedOrientation.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.NamedOrientation.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf">
             <summary>
             RemoveFromSceneRequestArgsAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.#ctor(System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf" /> class.
             </summary>
             <param name="force">force (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.Force">
             <summary>
             Gets or Sets Force
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.Equals(IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf)">
             <summary>
             Returns true if RemoveFromSceneRequestArgsAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveFromSceneRequestArgsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.Equals(IO.Swagger.Model.CopyActionPointRequestArgs)">
             <summary>
             Returns true if CopyActionPointRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CopyActionPointRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ListProjectsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_arserver_data.rpc.project.ListProjects.Response.Data], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.ListProjectsResponseData})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponse.Id">
=======
        <member name="T:IO.Swagger.Model.OverrideUpdatedAllOf">
             <summary>
             OverrideUpdatedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OverrideUpdatedAllOf" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsResponse.Messages">
             <summary>
             Gets or Sets Messages
=======
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.#ctor(IO.Swagger.Model.Parameter)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OverrideUpdatedAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.OverrideUpdatedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsResponse.Equals(IO.Swagger.Model.ListProjectsResponse)">
             <summary>
             Returns true if ListProjectsResponse instances are equal
             </summary>
             <param name="input">Instance of ListProjectsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.Equals(IO.Swagger.Model.OverrideUpdatedAllOf)">
             <summary>
             Returns true if OverrideUpdatedAllOf instances are equal
             </summary>
             <param name="input">Instance of OverrideUpdatedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotEefAllOf">
             <summary>
             RobotEefAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefAllOf.#ctor(IO.Swagger.Model.RobotEefData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotEefAllOf.Data">
             <summary>
             Gets or Sets Data
=======
        <member name="T:IO.Swagger.Model.UploadPackageRequestArgs">
             <summary>
             Args(id: str, data: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequestArgs" /> class.
             </summary>
             <param name="data">Base64 encoded content of the zip file. (required).</param>
             <param name="id">Id of the execution package. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageRequestArgs.Data">
             <summary>
             Base64 encoded content of the zip file.
             </summary>
             <value>Base64 encoded content of the zip file.</value>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageRequestArgs.Id">
             <summary>
             Id of the execution package.
>>>>>>> devel
             </summary>
             <value>Id of the execution package.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefAllOf.Equals(IO.Swagger.Model.RobotEefAllOf)">
             <summary>
             Returns true if RobotEefAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotEefAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.Equals(IO.Swagger.Model.UploadPackageRequestArgs)">
             <summary>
             Returns true if UploadPackageRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UploadPackageRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeletePackageRequestAllOf">
             <summary>
             DeletePackageRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.#ctor(IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.MarkersCornersResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_calibration_data.MarkerCorners], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.MarkerCorners})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersResponse.Messages">
             <summary>
             Gets or Sets Messages
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeletePackageRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.MarkersCornersResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.Equals(IO.Swagger.Model.DeletePackageRequestAllOf)">
             <summary>
             Returns true if DeletePackageRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of DeletePackageRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.Equals(IO.Swagger.Model.MarkersCornersResponse)">
             <summary>
             Returns true if MarkersCornersResponse instances are equal
             </summary>
             <param name="input">Instance of MarkersCornersResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneState">
             <summary>
             SceneState(data: arcor2_arserver_data.events.scene.SceneState.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneState.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneState.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneState.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneState.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneState.ChangeTypeEnum.Updatebase">
=======
        <member name="T:IO.Swagger.Model.RunPackageRequest">
>>>>>>> devel
             <summary>
             Request(id: int, args: arcor2_execution_data.rpc.RunPackage.Request.Args)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneState.ChangeType">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequest.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneState.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneState" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneState.#ctor(System.Nullable{IO.Swagger.Model.SceneState.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.SceneStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneState" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneState.Event">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RunPackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneState.ParentId">
=======
        <member name="P:IO.Swagger.Model.RunPackageRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneState.Data">
=======
        <member name="P:IO.Swagger.Model.RunPackageRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneState.ToString">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneState.ToJson">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneState.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneState.Equals(IO.Swagger.Model.SceneState)">
             <summary>
             Returns true if SceneState instances are equal
             </summary>
             <param name="input">Instance of SceneState to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneState.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequest.Equals(IO.Swagger.Model.RunPackageRequest)">
             <summary>
             Returns true if RunPackageRequest instances are equal
             </summary>
             <param name="input">Instance of RunPackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneState.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveActionPointJointsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RemoveActionPointJoints.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RemoveActionPointJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsRequest.Id">
=======
        <member name="T:IO.Swagger.Model.RenamePackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.RenamePackageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenamePackageResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenamePackageResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.Equals(IO.Swagger.Model.RemoveActionPointJointsRequest)">
             <summary>
             Returns true if RemoveActionPointJointsRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointJointsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenamePackageResponse.Equals(IO.Swagger.Model.RenamePackageResponse)">
             <summary>
             Returns true if RenamePackageResponse instances are equal
             </summary>
             <param name="input">Instance of RenamePackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenamePackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectClosed">
=======
        <member name="T:IO.Swagger.Model.ProjectLogicIf">
             <summary>
             ProjectLogicIf(what: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectLogicIf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectLogicIf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectLogicIf.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectLogicIf" /> class.
             </summary>
             <param name="value">value (required).</param>
             <param name="what">what (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectLogicIf.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectLogicIf.What">
             <summary>
             Gets or Sets What
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectLogicIf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectLogicIf.ToJson">
>>>>>>> devel
             <summary>
             ProjectClosed()
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectClosed.ChangeTypeEnum">
=======
        <member name="M:IO.Swagger.Model.ProjectLogicIf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectClosed.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectClosed.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.ProjectLogicIf.Equals(IO.Swagger.Model.ProjectLogicIf)">
             <summary>
             Returns true if ProjectLogicIf instances are equal
             </summary>
             <param name="input">Instance of ProjectLogicIf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectLogicIf.GetHashCode">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectClosed.ChangeTypeEnum.Remove">
=======
        <member name="M:IO.Swagger.Model.ProjectLogicIf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectClosed.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectClosed.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectClosed.#ctor">
=======
        <member name="T:IO.Swagger.Model.BareProject">
             <summary>
             BareProject(id: str, name: str, scene_id: str, desc: str = &lt;factory&gt;, has_logic: bool = True, modified: Union[datetime.datetime, NoneType] = None, int_modified: Union[datetime.datetime, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareProject.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareProject" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareProject.#ctor(System.String,System.Boolean,System.String,System.DateTime,System.DateTime,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareProject" /> class.
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="hasLogic">hasLogic (default to true).</param>
             <param name="id">id (required).</param>
             <param name="intModified">intModified.</param>
             <param name="modified">modified.</param>
             <param name="name">name (required).</param>
             <param name="sceneId">sceneId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BareProject.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareProject.HasLogic">
             <summary>
             Gets or Sets HasLogic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareProject.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectClosed" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectClosed.#ctor(System.Nullable{IO.Swagger.Model.ProjectClosed.ChangeTypeEnum},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectClosed" /> class.
=======
        <member name="P:IO.Swagger.Model.BareProject.IntModified">
             <summary>
             Gets or Sets IntModified
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectClosed.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectClosed.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectClosed.Data">
=======
        <member name="P:IO.Swagger.Model.BareProject.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareProject.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareProject.SceneId">
>>>>>>> devel
             <summary>
             Gets or Sets SceneId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectClosed.ToString">
=======
        <member name="M:IO.Swagger.Model.BareProject.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectClosed.ToJson">
=======
        <member name="M:IO.Swagger.Model.BareProject.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectClosed.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.BareProject.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectClosed.Equals(IO.Swagger.Model.ProjectClosed)">
             <summary>
             Returns true if ProjectClosed instances are equal
             </summary>
             <param name="input">Instance of ProjectClosed to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectClosed.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.BareProject.Equals(IO.Swagger.Model.BareProject)">
             <summary>
             Returns true if BareProject instances are equal
             </summary>
             <param name="input">Instance of BareProject to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareProject.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectClosed.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.BareProject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs">
             <summary>
             Args(project_id: str, new_description: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs" /> class.
             </summary>
             <param name="newDescription">newDescription (required).</param>
             <param name="projectId">projectId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.NewDescription">
=======
        <member name="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf">
             <summary>
             AddActionPointJointsUsingRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.ProjectId">
             <summary>
             Gets or Sets ProjectId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.Equals(IO.Swagger.Model.UpdateProjectDescriptionRequestArgs)">
             <summary>
             Returns true if UpdateProjectDescriptionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectDescriptionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.Equals(IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf)">
             <summary>
             Returns true if AddActionPointJointsUsingRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddActionPointJointsUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ListPackagesResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: List[arcor2_execution_data.common.PackageSummary] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListPackagesResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.PackageSummary})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListPackagesResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesResponse.Id">
=======
        <member name="T:IO.Swagger.Model.GetSuctionsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.GetSuctions.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetSuctionsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetSuctionsRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListPackagesResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.GetSuctionsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetSuctionsRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListPackagesResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListPackagesResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListPackagesResponse.Equals(IO.Swagger.Model.ListPackagesResponse)">
             <summary>
             Returns true if ListPackagesResponse instances are equal
             </summary>
             <param name="input">Instance of ListPackagesResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.Equals(IO.Swagger.Model.GetSuctionsRequest)">
             <summary>
             Returns true if GetSuctionsRequest instances are equal
             </summary>
             <param name="input">Instance of GetSuctionsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListPackagesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.BuildProjectResponseData">
             <summary>
             Data(package_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectResponseData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectResponseData" /> class.
=======
        <member name="T:IO.Swagger.Model.GetRobotJointsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2.data.common.Joint], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.Joint})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsResponse.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="packageId">packageId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BuildProjectResponseData.PackageId">
             <summary>
             Gets or Sets PackageId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.ToString">
=======
        <member name="P:IO.Swagger.Model.GetRobotJointsResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.Equals(IO.Swagger.Model.BuildProjectResponseData)">
             <summary>
             Returns true if BuildProjectResponseData instances are equal
             </summary>
             <param name="input">Instance of BuildProjectResponseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.Equals(IO.Swagger.Model.GetRobotJointsResponse)">
             <summary>
             Returns true if GetRobotJointsResponse instances are equal
             </summary>
             <param name="input">Instance of GetRobotJointsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MoveToJointsRequestArgs">
             <summary>
             Args(robot_id: str, speed: float, joints: List[arcor2.data.common.Joint], safe: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Joint},System.String,System.Boolean,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequestArgs" /> class.
             </summary>
             <param name="joints">joints (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="safe">safe (default to true).</param>
             <param name="speed">speed (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequestArgs.Joints">
             <summary>
             Gets or Sets Joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequestArgs.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequestArgs.Speed">
             <summary>
             Gets or Sets Speed
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.UpdateOverrideRequestAllOf">
             <summary>
             UpdateOverrideRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.#ctor(IO.Swagger.Model.UpdateOverrideRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.Equals(IO.Swagger.Model.MoveToJointsRequestArgs)">
             <summary>
             Returns true if MoveToJointsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of MoveToJointsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.Equals(IO.Swagger.Model.UpdateOverrideRequestAllOf)">
             <summary>
             Returns true if UpdateOverrideRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateOverrideRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.StopSceneRequest">
             <summary>
             Request(id: int, dry_run: bool = False)
=======
        <member name="T:IO.Swagger.Model.AddObjectToSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneRequest.#ctor(System.Int32,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopSceneRequest" /> class.
=======
        <member name="P:IO.Swagger.Model.AddObjectToSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopSceneRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.AddObjectToSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopSceneRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopSceneRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopSceneRequest.Equals(IO.Swagger.Model.StopSceneRequest)">
             <summary>
             Returns true if StopSceneRequest instances are equal
             </summary>
             <param name="input">Instance of StopSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.Equals(IO.Swagger.Model.AddObjectToSceneResponse)">
             <summary>
             Returns true if AddObjectToSceneResponse instances are equal
             </summary>
             <param name="input">Instance of AddObjectToSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointParentRequestAllOf">
             <summary>
             UpdateActionPointParentRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointParentRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.GetEndEffectorsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.GetEndEffectors.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetEndEffectorsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorsRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorsRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointParentRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointParentRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointParentRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.Equals(IO.Swagger.Model.GetEndEffectorsRequest)">
             <summary>
             Returns true if GetEndEffectorsRequest instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotEefData">
             <summary>
             Data(robot_id: str, end_effectors: List[arcor2_arserver_data.events.robot.RobotEef.Data.EefPose] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefData" /> class.
=======
        <member name="T:IO.Swagger.Model.NotificationAllOf">
             <summary>
             NotificationAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NotificationAllOf.#ctor(IO.Swagger.Model.NotificationData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefData.#ctor(System.Collections.Generic.List{IO.Swagger.Model.RobotEefDataEefPose},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefData" /> class.
             </summary>
             <param name="endEffectors">endEffectors.</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotEefData.EndEffectors">
             <summary>
             Gets or Sets EndEffectors
=======
        <member name="P:IO.Swagger.Model.NotificationAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NotificationAllOf.ToString">
             <summary>
             Returns the string presentation of the object
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotEefData.RobotId">
             <summary>
             Gets or Sets RobotId
=======
        <member name="M:IO.Swagger.Model.NotificationAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefData.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefData.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefData.Equals(System.Object)">
             <summary>
=======
        <member name="M:IO.Swagger.Model.NotificationAllOf.Equals(System.Object)">
             <summary>
>>>>>>> devel
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefData.Equals(IO.Swagger.Model.RobotEefData)">
             <summary>
             Returns true if RobotEefData instances are equal
             </summary>
             <param name="input">Instance of RobotEefData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NotificationAllOf.Equals(IO.Swagger.Model.NotificationAllOf)">
             <summary>
             Returns true if NotificationAllOf instances are equal
             </summary>
             <param name="input">Instance of NotificationAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NotificationAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NotificationAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectLogicIf">
             <summary>
             ProjectLogicIf(what: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectLogicIf.#ctor">
=======
        <member name="T:IO.Swagger.Model.GetActionsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_arserver_data.objects.ObjectAction], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.ObjectAction})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsResponse.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectLogicIf" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectLogicIf.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectLogicIf" /> class.
             </summary>
             <param name="value">value (required).</param>
             <param name="what">what (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectLogicIf.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectLogicIf.What">
             <summary>
             Gets or Sets What
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectLogicIf.ToString">
=======
        <member name="P:IO.Swagger.Model.GetActionsResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectLogicIf.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetActionsResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectLogicIf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetActionsResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectLogicIf.Equals(IO.Swagger.Model.ProjectLogicIf)">
             <summary>
             Returns true if ProjectLogicIf instances are equal
             </summary>
             <param name="input">Instance of ProjectLogicIf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectLogicIf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetActionsResponse.Equals(IO.Swagger.Model.GetActionsResponse)">
             <summary>
             Returns true if GetActionsResponse instances are equal
             </summary>
             <param name="input">Instance of GetActionsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectLogicIf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetActionsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RunPackageRequestArgsAllOf">
             <summary>
             RunPackageRequestArgsAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.#ctor(System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequestArgsAllOf" /> class.
             </summary>
             <param name="cleanupAfterRun">cleanupAfterRun (default to true).</param>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageRequestArgsAllOf.CleanupAfterRun">
=======
        <member name="T:IO.Swagger.Model.RobotEefAllOf">
             <summary>
             RobotEefAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefAllOf.#ctor(IO.Swagger.Model.RobotEefData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotEefAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets CleanupAfterRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.RobotEefAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotEefAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotEefAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.Equals(IO.Swagger.Model.RunPackageRequestArgsAllOf)">
             <summary>
             Returns true if RunPackageRequestArgsAllOf instances are equal
             </summary>
             <param name="input">Instance of RunPackageRequestArgsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotEefAllOf.Equals(IO.Swagger.Model.RobotEefAllOf)">
             <summary>
             Returns true if RobotEefAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotEefAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotEefAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RegisterForRobotEventRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.RegisterForRobotEvent.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RegisterForRobotEventRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.GetEndEffectorsRequestAllOf">
             <summary>
             GetEndEffectorsRequestAllOf
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequest.Request">
             <summary>
             Gets or Sets Request
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.#ctor(IO.Swagger.Model.GetEndEffectorsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequest.Args">
=======
        <member name="P:IO.Swagger.Model.GetEndEffectorsRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.Equals(IO.Swagger.Model.RegisterForRobotEventRequest)">
             <summary>
             Returns true if RegisterForRobotEventRequest instances are equal
             </summary>
             <param name="input">Instance of RegisterForRobotEventRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.Equals(IO.Swagger.Model.GetEndEffectorsRequestAllOf)">
             <summary>
             Returns true if GetEndEffectorsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs">
             <summary>
             Args(joints_id: str = 'default')
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.JointsChanged">
             <summary>
             JointsChanged(data: arcor2.data.common.ProjectRobotJoints)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.JointsChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
>>>>>>> devel
             </summary>
             <param name="jointsId">jointsId (default to "default").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.JointsId">
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
=======
        <member name="F:IO.Swagger.Model.JointsChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.JointsChanged.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
=======
        <member name="F:IO.Swagger.Model.JointsChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
=======
        <member name="F:IO.Swagger.Model.JointsChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
>>>>>>> devel
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs)">
             <summary>
             Returns true if UpdateActionPointJointsUsingRobotRequestArgs instances are equal
=======
        <member name="P:IO.Swagger.Model.JointsChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
>>>>>>> devel
             </summary>
             <param name="input">Instance of UpdateActionPointJointsUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.JointsChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.JointsChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.JointsChanged.#ctor(System.Nullable{IO.Swagger.Model.JointsChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ProjectRobotJoints)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.JointsChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.JointsChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.JointsChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.JointsChanged.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.JointsChanged.ToString">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.JointsChanged.ToJson">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OrientationChanged">
=======
        <member name="M:IO.Swagger.Model.JointsChanged.Equals(System.Object)">
>>>>>>> devel
             <summary>
             OrientationChanged(data: arcor2.data.common.NamedOrientation)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OrientationChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OrientationChanged.ChangeTypeEnum.Add">
=======
        <member name="M:IO.Swagger.Model.JointsChanged.Equals(IO.Swagger.Model.JointsChanged)">
             <summary>
             Returns true if JointsChanged instances are equal
             </summary>
             <param name="input">Instance of JointsChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.JointsChanged.GetHashCode">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.OrientationChanged.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.JointsChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.OrientationChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OrientationChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OrientationChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OrientationChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChanged.#ctor(System.Nullable{IO.Swagger.Model.OrientationChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.NamedOrientation)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OrientationChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OrientationChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OrientationChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OrientationChanged.Data">
=======
        <member name="T:IO.Swagger.Model.RenamePackageRequestArgs">
             <summary>
             Args(package_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequestArgs" /> class.
             </summary>
             <param name="newName">newName (required).</param>
             <param name="packageId">packageId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageRequestArgs.PackageId">
>>>>>>> devel
             <summary>
             Gets or Sets PackageId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OrientationChanged.ToString">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OrientationChanged.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OrientationChanged.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OrientationChanged.Equals(IO.Swagger.Model.OrientationChanged)">
             <summary>
             Returns true if OrientationChanged instances are equal
             </summary>
             <param name="input">Instance of OrientationChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChanged.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.Equals(IO.Swagger.Model.RenamePackageRequestArgs)">
             <summary>
             Returns true if RenamePackageRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenamePackageRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OrientationChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ListScenesResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_arserver_data.rpc.scene.ListScenes.Response.Data], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.ListScenesResponseData})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponse.Id">
=======
        <member name="T:IO.Swagger.Model.PackageInfoAllOf">
             <summary>
             PackageInfoAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfoAllOf" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListScenesResponse.Messages">
             <summary>
             Gets or Sets Messages
=======
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.#ctor(IO.Swagger.Model.PackageInfoData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfoAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListScenesResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.PackageInfoAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponse.Equals(IO.Swagger.Model.ListScenesResponse)">
             <summary>
             Returns true if ListScenesResponse instances are equal
             </summary>
             <param name="input">Instance of ListScenesResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.Equals(IO.Swagger.Model.PackageInfoAllOf)">
             <summary>
             Returns true if PackageInfoAllOf instances are equal
             </summary>
             <param name="input">Instance of PackageInfoAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointUsingRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.Id">
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.Equals(IO.Swagger.Model.UpdateActionPointUsingRobotRequest)">
             <summary>
             Returns true if UpdateActionPointUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.Equals(IO.Swagger.Model.UpdateActionPointOrientationResponse)">
             <summary>
             Returns true if UpdateActionPointOrientationResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.StopRobotResponse">
=======
        <member name="T:IO.Swagger.Model.CopyActionPointResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopRobotResponse.Id">
=======
        <member name="P:IO.Swagger.Model.CopyActionPointResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopRobotResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.CopyActionPointResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopRobotResponse.Response">
=======
        <member name="P:IO.Swagger.Model.CopyActionPointResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopRobotResponse.Result">
=======
        <member name="P:IO.Swagger.Model.CopyActionPointResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopRobotResponse.Data">
=======
        <member name="P:IO.Swagger.Model.CopyActionPointResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotResponse.Equals(IO.Swagger.Model.StopRobotResponse)">
             <summary>
             Returns true if StopRobotResponse instances are equal
             </summary>
             <param name="input">Instance of StopRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.Equals(IO.Swagger.Model.CopyActionPointResponse)">
             <summary>
             Returns true if CopyActionPointResponse instances are equal
             </summary>
             <param name="input">Instance of CopyActionPointResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RunPackageRequest">
             <summary>
             Request(id: int, args: arcor2_execution_data.rpc.RunPackage.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RunPackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequest.ToString">
=======
        <member name="T:IO.Swagger.Model.RenameActionPointJointsRequestAllOf">
             <summary>
             RenameActionPointJointsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.#ctor(IO.Swagger.Model.RenameActionPointJointsRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequest.Equals(IO.Swagger.Model.RunPackageRequest)">
             <summary>
             Returns true if RunPackageRequest instances are equal
             </summary>
             <param name="input">Instance of RunPackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.Equals(IO.Swagger.Model.RenameActionPointJointsRequestAllOf)">
             <summary>
             Returns true if RenameActionPointJointsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointJointsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.FocusObjectRequestArgs">
             <summary>
             Args(object_id: str, point_idx: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.#ctor(System.String,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequestArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.ProjectSaved">
             <summary>
             ProjectSaved()
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ProjectSaved.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectSaved.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectSaved.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectSaved.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectSaved.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectSaved.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectSaved.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectSaved" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectSaved.#ctor(System.Nullable{IO.Swagger.Model.ProjectSaved.ChangeTypeEnum},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectSaved" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectSaved.Event">
             <summary>
             Gets or Sets Event
>>>>>>> devel
             </summary>
             <param name="objectId">objectId (required).</param>
             <param name="pointIdx">pointIdx (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FocusObjectRequestArgs.ObjectId">
             <summary>
             Gets or Sets ObjectId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectRequestArgs.PointIdx">
=======
        <member name="P:IO.Swagger.Model.ProjectSaved.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectSaved.Data">
>>>>>>> devel
             <summary>
             Gets or Sets PointIdx
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.ProjectSaved.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectSaved.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectSaved.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.Equals(IO.Swagger.Model.FocusObjectRequestArgs)">
             <summary>
             Returns true if FocusObjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of FocusObjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectSaved.Equals(IO.Swagger.Model.ProjectSaved)">
             <summary>
             Returns true if ProjectSaved instances are equal
             </summary>
             <param name="input">Instance of ProjectSaved to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectSaved.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectSaved.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionResult">
             <summary>
             Used to notify result of the action execution triggered while editing a     project.
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ActionResult.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionResult.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionResult.ChangeTypeEnum.Update">
=======
        <member name="T:IO.Swagger.Model.RegisterForRobotEventRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.RegisterForRobotEvent.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RegisterForRobotEventRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequest.Id">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ActionResult.ChangeTypeEnum.Remove">
=======
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequest.Request">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ActionResult.ChangeTypeEnum.Updatebase">
=======
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequest.Args">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionResult.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResult.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResult" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResult.#ctor(System.Nullable{IO.Swagger.Model.ActionResult.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ActionResultData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResult" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionResult.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionResult.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionResult.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResult.ToString">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionResult.ToJson">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionResult.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionResult.Equals(IO.Swagger.Model.ActionResult)">
             <summary>
             Returns true if ActionResult instances are equal
             </summary>
             <param name="input">Instance of ActionResult to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionResult.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.Equals(IO.Swagger.Model.RegisterForRobotEventRequest)">
             <summary>
             Returns true if RegisterForRobotEventRequest instances are equal
             </summary>
             <param name="input">Instance of RegisterForRobotEventRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionResult.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateConstantRequestArgs">
             <summary>
             Args(constant_id: str, name: Union[str, NoneType] = None, value: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequestArgs" /> class.
             </summary>
             <param name="constantId">constantId (required).</param>
             <param name="name">name.</param>
             <param name="value">value.</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequestArgs.ConstantId">
             <summary>
             Gets or Sets ConstantId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequestArgs.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.SceneObjectChanged">
             <summary>
             SceneObjectChanged(data: arcor2.data.common.SceneObject)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum.Updatebase">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChanged.#ctor(System.Nullable{IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.SceneObject)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectChanged.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChanged.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneObjectChanged.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneObjectChanged.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.Equals(IO.Swagger.Model.UpdateConstantRequestArgs)">
             <summary>
             Returns true if UpdateConstantRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateConstantRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneObjectChanged.Equals(IO.Swagger.Model.SceneObjectChanged)">
             <summary>
             Returns true if SceneObjectChanged instances are equal
             </summary>
             <param name="input">Instance of SceneObjectChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChanged.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneObjectChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateOverrideRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.UpdateOverride.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateOverrideRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideRequest.Id">
=======
        <member name="T:IO.Swagger.Model.CloseProjectRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.CloseProject.Request.Args = &lt;factory&gt;, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CloseProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args.</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateOverrideRequest.Request">
=======
        <member name="P:IO.Swagger.Model.CloseProjectRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateOverrideRequest.Args">
=======
        <member name="P:IO.Swagger.Model.CloseProjectRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateOverrideRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.CloseProjectRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.Equals(IO.Swagger.Model.UpdateOverrideRequest)">
             <summary>
             Returns true if UpdateOverrideRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateOverrideRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequest.Equals(IO.Swagger.Model.CloseProjectRequest)">
             <summary>
             Returns true if CloseProjectRequest instances are equal
             </summary>
             <param name="input">Instance of CloseProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotFeatures">
             <summary>
             Names of the robot features must match names of the methods.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotFeatures.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotFeatures" /> class.
=======
        <member name="T:IO.Swagger.Model.CameraColorImageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="forwardKinematics">forwardKinematics (default to false).</param>
             <param name="handTeaching">handTeaching (default to false).</param>
             <param name="inverseKinematics">inverseKinematics (default to false).</param>
             <param name="moveToJoints">moveToJoints (default to false).</param>
             <param name="moveToPose">moveToPose (default to false).</param>
             <param name="stop">stop (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotFeatures.ForwardKinematics">
             <summary>
             Gets or Sets ForwardKinematics
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotFeatures.HandTeaching">
             <summary>
             Gets or Sets HandTeaching
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotFeatures.InverseKinematics">
             <summary>
             Gets or Sets InverseKinematics
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotFeatures.MoveToJoints">
             <summary>
             Gets or Sets MoveToJoints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotFeatures.MoveToPose">
             <summary>
             Gets or Sets MoveToPose
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotFeatures.Stop">
             <summary>
             Gets or Sets Stop
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotFeatures.ToString">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotFeatures.ToJson">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotFeatures.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotFeatures.Equals(IO.Swagger.Model.RobotFeatures)">
             <summary>
             Returns true if RobotFeatures instances are equal
             </summary>
             <param name="input">Instance of RobotFeatures to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotFeatures.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.Equals(IO.Swagger.Model.CameraColorImageResponse)">
             <summary>
             Returns true if CameraColorImageResponse instances are equal
             </summary>
             <param name="input">Instance of CameraColorImageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotFeatures.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Joint">
             <summary>
             Joint(name: str, value: float)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Joint.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Joint" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Joint.#ctor(System.String,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Joint" /> class.
             </summary>
             <param name="name">name (required).</param>
             <param name="value">value (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.Joint.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Joint.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Joint.ToString">
=======
        <member name="T:IO.Swagger.Model.ActionParamValuesResponseAllOf">
             <summary>
             ActionParamValuesResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.#ctor(System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Joint.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Joint.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Joint.Equals(IO.Swagger.Model.Joint)">
             <summary>
             Returns true if Joint instances are equal
             </summary>
             <param name="input">Instance of Joint to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Joint.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.Equals(IO.Swagger.Model.ActionParamValuesResponseAllOf)">
             <summary>
             Returns true if ActionParamValuesResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionParamValuesResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Joint.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ListScenesRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesRequest.Id">
=======
        <member name="T:IO.Swagger.Model.FocusObjectStartResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectStartResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListScenesRequest.Request">
=======
        <member name="P:IO.Swagger.Model.FocusObjectStartResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListScenesRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.FocusObjectStartResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectStartResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectStartResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesRequest.Equals(IO.Swagger.Model.ListScenesRequest)">
             <summary>
             Returns true if ListScenesRequest instances are equal
             </summary>
             <param name="input">Instance of ListScenesRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.Equals(IO.Swagger.Model.FocusObjectStartResponse)">
             <summary>
             Returns true if FocusObjectStartResponse instances are equal
             </summary>
             <param name="input">Instance of FocusObjectStartResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CameraColorImageResponseAllOf">
             <summary>
             CameraColorImageResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponseAllOf.Data">
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.Equals(IO.Swagger.Model.CameraColorImageResponseAllOf)">
             <summary>
             Returns true if CameraColorImageResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of CameraColorImageResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Equals(IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse)">
             <summary>
             Returns true if UpdateActionPointJointsUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Box">
             <summary>
             Box(id: str, size_x: float, size_y: float, size_z: float)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Box.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Box" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Box.#ctor(System.String,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Box" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="sizeX">sizeX (required).</param>
             <param name="sizeY">sizeY (required).</param>
             <param name="sizeZ">sizeZ (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.Box.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf">
             <summary>
             AddActionPointOrientationUsingRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Box.SizeX">
             <summary>
             Gets or Sets SizeX
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Box.SizeY">
             <summary>
             Gets or Sets SizeY
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Box.SizeZ">
             <summary>
             Gets or Sets SizeZ
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Box.ToString">
=======
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Box.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Box.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Box.Equals(IO.Swagger.Model.Box)">
             <summary>
             Returns true if Box instances are equal
             </summary>
             <param name="input">Instance of Box to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Box.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.Equals(IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf)">
             <summary>
             Returns true if AddActionPointOrientationUsingRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Box.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf">
             <summary>
             UpdateActionPointJointsUsingRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.GetRobotMetaResponseAllOf">
             <summary>
             GetRobotMetaResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.RobotMeta})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotMetaResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotMetaResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointJointsUsingRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.Equals(IO.Swagger.Model.GetRobotMetaResponseAllOf)">
             <summary>
             Returns true if GetRobotMetaResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of GetRobotMetaResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.FocusObjectDoneResponseAllOf">
             <summary>
             FocusObjectDoneResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.#ctor(IO.Swagger.Model.FocusObjectResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectDoneResponseAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.HandTeachingMode">
             <summary>
             HandTeachingMode(data: arcor2_arserver_data.events.robot.HandTeachingMode.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
>>>>>>> devel
             </summary>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.ToString">
=======
        <member name="F:IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingMode.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingMode.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingMode" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingMode.#ctor(System.Nullable{IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.HandTeachingModeData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingMode" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingMode.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingMode.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingMode.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingMode.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.HandTeachingMode.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingMode.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.Equals(IO.Swagger.Model.FocusObjectDoneResponseAllOf)">
             <summary>
             Returns true if FocusObjectDoneResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of FocusObjectDoneResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.HandTeachingMode.Equals(IO.Swagger.Model.HandTeachingMode)">
             <summary>
             Returns true if HandTeachingMode instances are equal
             </summary>
             <param name="input">Instance of HandTeachingMode to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingMode.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingMode.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CopyProjectRequestAllOf">
             <summary>
             CopyProjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.#ctor(IO.Swagger.Model.CopyProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf">
             <summary>
             UpdateProjectDescriptionRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.#ctor(IO.Swagger.Model.UpdateProjectDescriptionRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.Equals(IO.Swagger.Model.CopyProjectRequestAllOf)">
             <summary>
             Returns true if CopyProjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CopyProjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.Equals(IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf)">
             <summary>
             Returns true if UpdateProjectDescriptionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectDescriptionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ExecuteActionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.ExecuteAction.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.ExecuteActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionRequest.Args">
=======
        <member name="T:IO.Swagger.Model.RenameActionRequestArgs">
             <summary>
             Args(action_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequestArgs" /> class.
             </summary>
             <param name="actionId">actionId (required).</param>
             <param name="newName">newName (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionRequestArgs.ActionId">
>>>>>>> devel
             <summary>
             Gets or Sets ActionId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ExecuteActionRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.RenameActionRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.Equals(IO.Swagger.Model.ExecuteActionRequest)">
             <summary>
             Returns true if ExecuteActionRequest instances are equal
             </summary>
             <param name="input">Instance of ExecuteActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.Equals(IO.Swagger.Model.RenameActionRequestArgs)">
             <summary>
             Returns true if RenameActionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenameActionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProcessStateData">
             <summary>
             Data(id: str, state: arcor2_arserver_data.events.common.ProcessState.Data.StateEnum, message: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ProcessStateData.StateEnum">
             <summary>
             Defines State
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProcessStateData.StateEnum.Started">
             <summary>
             Enum Started for value: started
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProcessStateData.StateEnum.Finished">
             <summary>
             Enum Finished for value: finished
=======
        <member name="T:IO.Swagger.Model.PackageStateAllOf">
             <summary>
             PackageStateAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageStateAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateAllOf.#ctor(IO.Swagger.Model.PackageStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageStateAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProcessStateData.StateEnum.Failed">
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProcessStateData.State">
             <summary>
             Gets or Sets State
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessStateData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateData.#ctor(System.String,System.String,IO.Swagger.Model.ProcessStateData.StateEnum)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessStateData" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="message">message.</param>
             <param name="state">state (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProcessStateData.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProcessStateData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateData.ToString">
=======
        <member name="P:IO.Swagger.Model.PackageStateAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessStateData.ToJson">
=======
        <member name="M:IO.Swagger.Model.PackageStateAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessStateData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PackageStateAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessStateData.Equals(IO.Swagger.Model.ProcessStateData)">
             <summary>
             Returns true if ProcessStateData instances are equal
             </summary>
             <param name="input">Instance of ProcessStateData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PackageStateAllOf.Equals(IO.Swagger.Model.PackageStateAllOf)">
             <summary>
             Returns true if PackageStateAllOf instances are equal
             </summary>
             <param name="input">Instance of PackageStateAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessStateData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PackageStateAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionPointChangedAllOf">
             <summary>
             ActionPointChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPointChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.#ctor(IO.Swagger.Model.BareActionPoint)">
=======
        <member name="T:IO.Swagger.Model.RenameActionPointRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RenameActionPoint.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointRequest.Args">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPointChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionPointChangedAllOf.Data">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.Equals(IO.Swagger.Model.ActionPointChangedAllOf)">
             <summary>
             Returns true if ActionPointChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionPointChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.Equals(IO.Swagger.Model.RenameActionPointRequest)">
             <summary>
             Returns true if RenameActionPointRequest instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveLogicItemResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveLogicItemResponse.Id">
=======
        <member name="T:IO.Swagger.Model.StopRobotRequestAllOf">
             <summary>
             StopRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.#ctor(IO.Swagger.Model.StopRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.StopRobotRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveLogicItemResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveLogicItemResponse.Response">
             <summary>
             Gets or Sets Response
=======
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.Equals(IO.Swagger.Model.StopRobotRequestAllOf)">
             <summary>
             Returns true if StopRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of StopRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf">
             <summary>
             UpdateActionPointOrientationUsingRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveLogicItemResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveLogicItemResponse.Data">
             <summary>
             Gets or Sets Data
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointOrientationUsingRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.FocusObjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2_arserver_data.rpc.objects.FocusObject.Response.Data, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.FocusObjectResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.FocusObjectResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.Equals(IO.Swagger.Model.RemoveLogicItemResponse)">
             <summary>
             Returns true if RemoveLogicItemResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveLogicItemResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FocusObjectResponse.Equals(IO.Swagger.Model.FocusObjectResponse)">
             <summary>
             Returns true if FocusObjectResponse instances are equal
             </summary>
             <param name="input">Instance of FocusObjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OverrideUpdated">
             <summary>
             OverrideUpdated(data: arcor2.data.common.Parameter)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum.Remove">
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs">
             <summary>
             Args(orientation_id: str, robot: arcor2.data.rpc.common.RobotArg)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.#ctor(System.String,IO.Swagger.Model.RobotArg)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs" /> class.
             </summary>
             <param name="orientationId">orientationId (required).</param>
             <param name="robot">robot (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.Robot">
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OverrideUpdated.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdated.#ctor">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs)">
             <summary>
             Returns true if UpdateActionPointOrientationUsingRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateConstantResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantResponse.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OverrideUpdated" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OverrideUpdated.#ctor(System.Nullable{IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.Parameter)">
=======
        <member name="P:IO.Swagger.Model.UpdateConstantResponse.Messages">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OverrideUpdated" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OverrideUpdated.Event">
=======
        <member name="P:IO.Swagger.Model.UpdateConstantResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Event
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OverrideUpdated.ParentId">
=======
        <member name="P:IO.Swagger.Model.UpdateConstantResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OverrideUpdated.Data">
=======
        <member name="P:IO.Swagger.Model.UpdateConstantResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OverrideUpdated.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OverrideUpdated.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OverrideUpdated.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OverrideUpdated.Equals(IO.Swagger.Model.OverrideUpdated)">
             <summary>
             Returns true if OverrideUpdated instances are equal
             </summary>
             <param name="input">Instance of OverrideUpdated to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdated.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.Equals(IO.Swagger.Model.UpdateConstantResponse)">
             <summary>
             Returns true if UpdateConstantResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateConstantResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OverrideUpdated.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameActionPointRequestArgs">
             <summary>
             Args(action_point_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequestArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.GetEndEffectorPoseRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.GetEndEffectorPose.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetEndEffectorPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequestArgs" /> class.
=======
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequest.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="newName">newName (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionPointRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.Equals(IO.Swagger.Model.RenameActionPointRequestArgs)">
             <summary>
             Returns true if RenameActionPointRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.Equals(IO.Swagger.Model.GetEndEffectorPoseRequest)">
             <summary>
             Returns true if GetEndEffectorPoseRequest instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorPoseRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CancelActionRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CancelActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CancelActionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CancelActionRequest.Id">
=======
        <member name="T:IO.Swagger.Model.AddLogicItemResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CancelActionRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CancelActionRequest.Data">
=======
        <member name="P:IO.Swagger.Model.AddLogicItemResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CancelActionRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CancelActionRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CancelActionRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CancelActionRequest.Equals(IO.Swagger.Model.CancelActionRequest)">
             <summary>
             Returns true if CancelActionRequest instances are equal
             </summary>
             <param name="input">Instance of CancelActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.Equals(IO.Swagger.Model.AddLogicItemResponse)">
             <summary>
             Returns true if AddLogicItemResponse instances are equal
             </summary>
             <param name="input">Instance of AddLogicItemResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CancelActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.JointsChangedAllOf">
             <summary>
             JointsChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.JointsChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.#ctor(IO.Swagger.Model.ProjectRobotJoints)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.JointsChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.JointsChangedAllOf.Data">
=======
        <member name="T:IO.Swagger.Model.SceneObjectUsageRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectUsageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectUsageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectUsageRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectUsageRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectUsageRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.Equals(IO.Swagger.Model.JointsChangedAllOf)">
             <summary>
             Returns true if JointsChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of JointsChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.Equals(IO.Swagger.Model.SceneObjectUsageRequest)">
             <summary>
             Returns true if SceneObjectUsageRequest instances are equal
             </summary>
             <param name="input">Instance of SceneObjectUsageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.JointsChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateOverrideRequestArgs">
             <summary>
<<<<<<< HEAD
             Args(id: str, override: arcor2.data.common.Parameter)
=======
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointJoints.Request.Args)
>>>>>>> devel
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.#ctor(System.String,IO.Swagger.Model.Parameter)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="_override">_override (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideRequestArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideRequestArgs.Override">
             <summary>
             Gets or Sets Override
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.Equals(IO.Swagger.Model.UpdateOverrideRequestArgs)">
             <summary>
             Returns true if UpdateOverrideRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateOverrideRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Position">
             <summary>
             Position(x: float = 0.0, y: float = 0.0, z: float = 0.0)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Position.#ctor(System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Position" /> class.
             </summary>
             <param name="x">x (default to 0.0M).</param>
             <param name="y">y (default to 0.0M).</param>
             <param name="z">z (default to 0.0M).</param>
            </member>
        <member name="P:IO.Swagger.Model.Position.X">
             <summary>
             Gets or Sets X
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Position.Y">
=======
        <member name="T:IO.Swagger.Model.NamedOrientation">
             <summary>
             NamedOrientation(id: str, name: str, orientation: arcor2.data.common.Orientation)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NamedOrientation.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NamedOrientation" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NamedOrientation.#ctor(System.String,System.String,IO.Swagger.Model.Orientation)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NamedOrientation" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="orientation">orientation (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.NamedOrientation.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NamedOrientation.Name">
>>>>>>> devel
             <summary>
             Gets or Sets Y
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Position.Z">
             <summary>
             Gets or Sets Z
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Position.ToString">
=======
        <member name="P:IO.Swagger.Model.NamedOrientation.Orientation">
             <summary>
             Gets or Sets Orientation
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NamedOrientation.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Position.ToJson">
=======
        <member name="M:IO.Swagger.Model.NamedOrientation.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Position.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NamedOrientation.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Position.Equals(IO.Swagger.Model.Position)">
             <summary>
             Returns true if Position instances are equal
             </summary>
             <param name="input">Instance of Position to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Position.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NamedOrientation.Equals(IO.Swagger.Model.NamedOrientation)">
             <summary>
             Returns true if NamedOrientation instances are equal
             </summary>
             <param name="input">Instance of NamedOrientation to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NamedOrientation.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Position.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NamedOrientation.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectParametersRequestAllOf">
             <summary>
             UpdateObjectParametersRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.#ctor(IO.Swagger.Model.UpdateObjectParametersRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.ExecuteActionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.ExecuteAction.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.ExecuteActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.ExecuteActionRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.DryRun">
=======
        <member name="P:IO.Swagger.Model.ExecuteActionRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.Equals(IO.Swagger.Model.UpdateObjectParametersRequestAllOf)">
             <summary>
             Returns true if UpdateObjectParametersRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectParametersRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.Equals(IO.Swagger.Model.ExecuteActionRequest)">
             <summary>
             Returns true if ExecuteActionRequest instances are equal
             </summary>
             <param name="input">Instance of ExecuteActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.IdValue">
             <summary>
             IdValue(id: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdValue.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdValue" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdValue.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdValue" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="value">value (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.IdValue.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="T:IO.Swagger.Model.GetCameraPoseRequestAllOf">
             <summary>
             GetCameraPoseRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.#ctor(IO.Swagger.Model.GetCameraPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.IdValue.Value">
=======
        <member name="P:IO.Swagger.Model.GetCameraPoseRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdValue.ToString">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdValue.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdValue.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdValue.Equals(IO.Swagger.Model.IdValue)">
             <summary>
             Returns true if IdValue instances are equal
             </summary>
             <param name="input">Instance of IdValue to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.IdValue.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.Equals(IO.Swagger.Model.GetCameraPoseRequestAllOf)">
             <summary>
             Returns true if GetCameraPoseRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetCameraPoseRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdValue.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.JointsChanged">
             <summary>
             JointsChanged(data: arcor2.data.common.ProjectRobotJoints)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.JointsChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.JointsChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.JointsChanged.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.JointsChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
=======
        <member name="T:IO.Swagger.Model.ExecuteActionRequestAllOf">
             <summary>
             ExecuteActionRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.#ctor(IO.Swagger.Model.ExecuteActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.JointsChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.JointsChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.JointsChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.JointsChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.JointsChanged.#ctor(System.Nullable{IO.Swagger.Model.JointsChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ProjectRobotJoints)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.JointsChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.JointsChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.JointsChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.JointsChanged.Data">
=======
        <member name="P:IO.Swagger.Model.ExecuteActionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.JointsChanged.ToString">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.JointsChanged.ToJson">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.JointsChanged.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.JointsChanged.Equals(IO.Swagger.Model.JointsChanged)">
             <summary>
             Returns true if JointsChanged instances are equal
             </summary>
             <param name="input">Instance of JointsChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.JointsChanged.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.Equals(IO.Swagger.Model.ExecuteActionRequestAllOf)">
             <summary>
             Returns true if ExecuteActionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of ExecuteActionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.JointsChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToJointsDataAllOf">
             <summary>
             RobotMoveToJointsDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsDataAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.#ctor(System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.Joint})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsDataAllOf" /> class.
             </summary>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
             <param name="targetJoints">targetJoints (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsDataAllOf.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsDataAllOf.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsDataAllOf.TargetJoints">
             <summary>
             Gets or Sets TargetJoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.PackageStateData">
             <summary>
             Data(state: arcor2.data.events.PackageState.Data.StateEnum = &lt;StateEnum.UNDEFINED: 'undefined'&gt;, package_id: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.PackageStateData.StateEnum">
             <summary>
             Defines State
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageStateData.StateEnum.Running">
             <summary>
             Enum Running for value: running
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageStateData.StateEnum.Stopped">
             <summary>
             Enum Stopped for value: stopped
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageStateData.StateEnum.Paused">
             <summary>
             Enum Paused for value: paused
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageStateData.StateEnum.Undefined">
             <summary>
             Enum Undefined for value: undefined
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageStateData.State">
             <summary>
             Gets or Sets State
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateData.#ctor(System.String,System.Nullable{IO.Swagger.Model.PackageStateData.StateEnum})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageStateData" /> class.
             </summary>
             <param name="packageId">packageId.</param>
             <param name="state">state (default to StateEnum.Undefined).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageStateData.PackageId">
             <summary>
             Gets or Sets PackageId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.PackageStateData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PackageStateData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.Equals(IO.Swagger.Model.RobotMoveToJointsDataAllOf)">
             <summary>
             Returns true if RobotMoveToJointsDataAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToJointsDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PackageStateData.Equals(IO.Swagger.Model.PackageStateData)">
             <summary>
             Returns true if PackageStateData instances are equal
             </summary>
             <param name="input">Instance of PackageStateData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PackageStateData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs">
             <summary>
             Args(action_point_id: str, robot: arcor2.data.rpc.common.RobotArg)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.#ctor(System.String,IO.Swagger.Model.RobotArg)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="robot">robot (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.Robot">
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.ListProjectsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_arserver_data.rpc.project.ListProjects.Response.Data], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.ListProjectsResponseData})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs)">
             <summary>
             Returns true if UpdateActionPointUsingRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponse.Equals(IO.Swagger.Model.ListProjectsResponse)">
             <summary>
             Returns true if ListProjectsResponse instances are equal
             </summary>
             <param name="input">Instance of ListProjectsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CopySceneRequestAllOf">
             <summary>
             CopySceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.#ctor(IO.Swagger.Model.CopySceneRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopySceneRequestAllOf.Args">
=======
        <member name="T:IO.Swagger.Model.UpdateObjectPoseRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.UpdateObjectPose.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateObjectPoseRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.Equals(IO.Swagger.Model.CopySceneRequestAllOf)">
             <summary>
             Returns true if CopySceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CopySceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.Equals(IO.Swagger.Model.UpdateObjectPoseRequest)">
             <summary>
             Returns true if UpdateObjectPoseRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveActionPointResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointResponse.Id">
=======
        <member name="T:IO.Swagger.Model.FocusObjectStartRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.FocusObjectStart.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointResponse.Messages">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.FocusObjectStartRequestArgs)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointResponse.Response">
=======
        <member name="P:IO.Swagger.Model.FocusObjectStartRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointResponse.Result">
=======
        <member name="P:IO.Swagger.Model.FocusObjectStartRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointResponse.Data">
=======
        <member name="P:IO.Swagger.Model.FocusObjectStartRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.Equals(IO.Swagger.Model.RemoveActionPointResponse)">
             <summary>
             Returns true if RemoveActionPointResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.Equals(IO.Swagger.Model.FocusObjectStartRequest)">
             <summary>
             Returns true if FocusObjectStartRequest instances are equal
             </summary>
             <param name="input">Instance of FocusObjectStartRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ListScenesResponseData">
             <summary>
             Data(id: str, name: str, desc: Union[str, NoneType], modified: Union[datetime.datetime, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponseData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseData.#ctor(System.String,System.String,System.String,System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponseData" /> class.
             </summary>
             <param name="desc">desc.</param>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="modified">modified.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponseData.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponseData.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponseData.Name">
             <summary>
             Gets or Sets Name
=======
        <member name="T:IO.Swagger.Model.SceneStateAllOf">
             <summary>
             SceneStateAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneStateAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateAllOf.#ctor(IO.Swagger.Model.SceneStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneStateAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListScenesResponseData.Modified">
=======
        <member name="P:IO.Swagger.Model.SceneStateAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseData.ToString">
=======
        <member name="M:IO.Swagger.Model.SceneStateAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseData.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneStateAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneStateAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseData.Equals(IO.Swagger.Model.ListScenesResponseData)">
             <summary>
             Returns true if ListScenesResponseData instances are equal
             </summary>
             <param name="input">Instance of ListScenesResponseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneStateAllOf.Equals(IO.Swagger.Model.SceneStateAllOf)">
             <summary>
             Returns true if SceneStateAllOf instances are equal
             </summary>
             <param name="input">Instance of SceneStateAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneStateAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.StopPackageResponse">
=======
        <member name="T:IO.Swagger.Model.AddActionResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopPackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopPackageResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.AddActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopPackageResponse.Id">
=======
        <member name="P:IO.Swagger.Model.AddActionResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopPackageResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.AddActionResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopPackageResponse.Response">
=======
        <member name="P:IO.Swagger.Model.AddActionResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopPackageResponse.Result">
=======
        <member name="P:IO.Swagger.Model.AddActionResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopPackageResponse.Data">
=======
        <member name="P:IO.Swagger.Model.AddActionResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.AddActionResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageResponse.Equals(IO.Swagger.Model.StopPackageResponse)">
             <summary>
             Returns true if StopPackageResponse instances are equal
             </summary>
             <param name="input">Instance of StopPackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionResponse.Equals(IO.Swagger.Model.AddActionResponse)">
             <summary>
             Returns true if AddActionResponse instances are equal
             </summary>
             <param name="input">Instance of AddActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetEndEffectorsRequestArgs">
=======
        <member name="T:IO.Swagger.Model.RemoveFromSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneResponse.Messages">
>>>>>>> devel
             <summary>
             Args(robot_id: str)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.#ctor">
=======
        <member name="P:IO.Swagger.Model.RemoveFromSceneResponse.Response">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequestArgs" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.#ctor(System.String)">
=======
        <member name="P:IO.Swagger.Model.RemoveFromSceneResponse.Result">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequestArgs" /> class.
             </summary>
             <param name="robotId">robotId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetEndEffectorsRequestArgs.RobotId">
=======
        <member name="P:IO.Swagger.Model.RemoveFromSceneResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.Equals(IO.Swagger.Model.GetEndEffectorsRequestArgs)">
             <summary>
             Returns true if GetEndEffectorsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.Equals(IO.Swagger.Model.RemoveFromSceneResponse)">
             <summary>
             Returns true if RemoveFromSceneResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveFromSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CopyActionPointResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointResponse.Data">
=======
        <member name="T:IO.Swagger.Model.ProjectFunction">
             <summary>
             ProjectFunction(id: str, name: str, actions: List[arcor2.data.common.Action] = &lt;factory&gt;, logic: List[arcor2.data.common.LogicItem] = &lt;factory&gt;, parameters: List[arcor2.data.common.ActionParameter] = &lt;factory&gt;, returns: List[arcor2.data.common.FunctionReturns] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectFunction.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectFunction" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectFunction.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Action},System.String,System.Collections.Generic.List{IO.Swagger.Model.LogicItem},System.String,System.Collections.Generic.List{IO.Swagger.Model.ActionParameter},System.Collections.Generic.List{IO.Swagger.Model.FunctionReturns})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectFunction" /> class.
             </summary>
             <param name="actions">actions.</param>
             <param name="id">id (required).</param>
             <param name="logic">logic.</param>
             <param name="name">name (required).</param>
             <param name="parameters">parameters.</param>
             <param name="returns">returns.</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectFunction.Actions">
             <summary>
             Gets or Sets Actions
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectFunction.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectFunction.Logic">
             <summary>
             Gets or Sets Logic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectFunction.Name">
>>>>>>> devel
             <summary>
             Gets or Sets Name
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.ProjectFunction.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectFunction.Returns">
             <summary>
             Gets or Sets Returns
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectFunction.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectFunction.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectFunction.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.Equals(IO.Swagger.Model.CopyActionPointResponse)">
             <summary>
             Returns true if CopyActionPointResponse instances are equal
             </summary>
             <param name="input">Instance of CopyActionPointResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectFunction.Equals(IO.Swagger.Model.ProjectFunction)">
             <summary>
             Returns true if ProjectFunction instances are equal
             </summary>
             <param name="input">Instance of ProjectFunction to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectFunction.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectFunction.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CloseProjectRequestAllOf">
             <summary>
             CloseProjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.#ctor(IO.Swagger.Model.CloseProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectRequestAllOf" /> class.
             </summary>
             <param name="args">args.</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectRequestAllOf.Args">
=======
        <member name="T:IO.Swagger.Model.AddOverrideRequestAllOf">
             <summary>
             AddOverrideRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.#ctor(IO.Swagger.Model.AddOverrideRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddOverrideRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CloseProjectRequestAllOf.DryRun">
=======
        <member name="P:IO.Swagger.Model.AddOverrideRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.Equals(IO.Swagger.Model.CloseProjectRequestAllOf)">
             <summary>
             Returns true if CloseProjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CloseProjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.Equals(IO.Swagger.Model.AddOverrideRequestAllOf)">
             <summary>
             Returns true if AddOverrideRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddOverrideRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MarkersCornersResponseAllOf">
=======
        <member name="T:IO.Swagger.Model.OpenProjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenProjectResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenProjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenProjectResponse.Response">
>>>>>>> devel
             <summary>
             MarkersCornersResponseAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.MarkerCorners})">
=======
        <member name="P:IO.Swagger.Model.OpenProjectResponse.Result">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MarkersCornersResponseAllOf.Data">
=======
        <member name="P:IO.Swagger.Model.OpenProjectResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.OpenProjectResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.OpenProjectResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.OpenProjectResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.Equals(IO.Swagger.Model.MarkersCornersResponseAllOf)">
             <summary>
             Returns true if MarkersCornersResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of MarkersCornersResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.OpenProjectResponse.Equals(IO.Swagger.Model.OpenProjectResponse)">
             <summary>
             Returns true if OpenProjectResponse instances are equal
             </summary>
             <param name="input">Instance of OpenProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OpenProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveLogicItemRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RemoveLogicItem.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RemoveLogicItemRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf">
             <summary>
             UpdateActionPointUsingRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveLogicItemRequest.Id">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveLogicItemRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveLogicItemRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.Equals(IO.Swagger.Model.RemoveLogicItemRequest)">
             <summary>
             Returns true if RemoveLogicItemRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveLogicItemRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointUsingRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.FocusObjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2_arserver_data.rpc.objects.FocusObject.Response.Data, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.FocusObjectResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectResponse.Id">
=======
        <member name="T:IO.Swagger.Model.GetGrippersRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.GetGrippers.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetGrippersRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetGrippersRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FocusObjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.GetGrippersRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetGrippersRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectResponse.Equals(IO.Swagger.Model.FocusObjectResponse)">
             <summary>
             Returns true if FocusObjectResponse instances are equal
             </summary>
             <param name="input">Instance of FocusObjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequest.Equals(IO.Swagger.Model.GetGrippersRequest)">
             <summary>
             Returns true if GetGrippersRequest instances are equal
             </summary>
             <param name="input">Instance of GetGrippersRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveActionPointJointsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateOverrideRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.UpdateOverride.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateOverrideRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideRequest.Args">
             <summary>
             Gets or Sets Args
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsResponse.Id">
=======
        <member name="P:IO.Swagger.Model.UpdateOverrideRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.ToString">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsResponse.Messages">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.ToJson">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsResponse.Response">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsResponse.Data">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.Equals(IO.Swagger.Model.UpdateOverrideRequest)">
             <summary>
             Returns true if UpdateOverrideRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateOverrideRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointOrientation.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequest" /> class.
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.Equals(IO.Swagger.Model.RemoveActionPointJointsResponse)">
             <summary>
             Returns true if RemoveActionPointJointsResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointJointsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.GetHashCode">
             <summary>
             Gets the hash code
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointOrientationRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequest.Request">
             <summary>
             Gets or Sets Request
>>>>>>> devel
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequest.Args">
             <summary>
             Gets or Sets Args
>>>>>>> devel
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.BareProject">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.ToString">
>>>>>>> devel
             <summary>
             BareProject(id: str, name: str, scene_id: str, desc: str = &lt;factory&gt;, has_logic: bool = True, modified: Union[datetime.datetime, NoneType] = None, int_modified: Union[datetime.datetime, NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BareProject.#ctor">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.ToJson">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareProject" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BareProject.#ctor(System.String,System.Boolean,System.String,System.DateTime,System.DateTime,System.String,System.String)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareProject" /> class.
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="hasLogic">hasLogic (default to true).</param>
             <param name="id">id (required).</param>
             <param name="intModified">intModified.</param>
             <param name="modified">modified.</param>
             <param name="name">name (required).</param>
             <param name="sceneId">sceneId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BareProject.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareProject.HasLogic">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.Equals(IO.Swagger.Model.UpdateActionPointOrientationRequest)">
             <summary>
             Returns true if UpdateActionPointOrientationRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets HasLogic
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BareProject.Id">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BareProject.IntModified">
             <summary>
             Gets or Sets IntModified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareProject.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareProject.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareProject.SceneId">
             <summary>
             Gets or Sets SceneId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareProject.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareProject.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareProject.Equals(System.Object)">
=======
        <member name="T:IO.Swagger.Model.RemoveActionPointOrientationResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BareProject.Equals(IO.Swagger.Model.BareProject)">
             <summary>
             Returns true if BareProject instances are equal
             </summary>
             <param name="input">Instance of BareProject to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareProject.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BareProject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionRequestArgs">
             <summary>
             Args(action_point_id: str, name: str, type: str, parameters: List[arcor2.data.common.ActionParameter] = &lt;factory&gt;, flows: List[arcor2.data.common.Flow] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Flow},System.String,System.Collections.Generic.List{IO.Swagger.Model.ActionParameter},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="flows">flows.</param>
             <param name="name">name (required).</param>
             <param name="parameters">parameters.</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestArgs.Flows">
             <summary>
             Gets or Sets Flows
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestArgs.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestArgs.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.Equals(IO.Swagger.Model.AddActionRequestArgs)">
             <summary>
             Returns true if AddActionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddActionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.Equals(IO.Swagger.Model.RemoveActionPointOrientationResponse)">
             <summary>
             Returns true if RemoveActionPointOrientationResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointOrientationResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse">
=======
        <member name="T:IO.Swagger.Model.UpdateProjectDescriptionResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Id">
=======
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Response">
=======
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Result">
=======
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Data">
=======
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.Equals(IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse)">
             <summary>
             Returns true if UpdateActionPointJointsUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.Equals(IO.Swagger.Model.UpdateProjectDescriptionResponse)">
             <summary>
             Returns true if UpdateProjectDescriptionResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectDescriptionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionAllOf">
             <summary>
             ActionAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Flow},System.Collections.Generic.List{IO.Swagger.Model.ActionParameter})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.UploadPackageRequestAllOf">
             <summary>
             UploadPackageRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="flows">flows.</param>
             <param name="parameters">parameters.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionAllOf.Flows">
             <summary>
             Gets or Sets Flows
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.#ctor(IO.Swagger.Model.UploadPackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionAllOf.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.UploadPackageRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionAllOf.Equals(IO.Swagger.Model.ActionAllOf)">
             <summary>
             Returns true if ActionAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.Equals(IO.Swagger.Model.UploadPackageRequestAllOf)">
             <summary>
             Returns true if UploadPackageRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UploadPackageRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CloseSceneRequestArgs">
             <summary>
             Args(force: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.#ctor(System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneRequestArgs" /> class.
             </summary>
             <param name="force">force (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneRequestArgs.Force">
=======
        <member name="T:IO.Swagger.Model.BuildProjectResponseAllOf">
             <summary>
             BuildProjectResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.#ctor(IO.Swagger.Model.BuildProjectResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectResponseAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Force
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.Equals(IO.Swagger.Model.CloseSceneRequestArgs)">
             <summary>
             Returns true if CloseSceneRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CloseSceneRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.Equals(IO.Swagger.Model.BuildProjectResponseAllOf)">
             <summary>
             Returns true if BuildProjectResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of BuildProjectResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetRobotJointsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2.data.common.Joint], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.Joint})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsResponse.Messages">
             <summary>
             Gets or Sets Messages
=======
        <member name="T:IO.Swagger.Model.ActionStateBeforeAllOf">
             <summary>
             ActionStateBeforeAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBeforeAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.#ctor(IO.Swagger.Model.ActionStateBeforeData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBeforeAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetRobotJointsResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.ActionStateBeforeAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.Equals(IO.Swagger.Model.GetRobotJointsResponse)">
             <summary>
             Returns true if GetRobotJointsResponse instances are equal
             </summary>
             <param name="input">Instance of GetRobotJointsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.Equals(IO.Swagger.Model.ActionStateBeforeAllOf)">
             <summary>
             Returns true if ActionStateBeforeAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionStateBeforeAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OrientationAllOf">
             <summary>
             OrientationAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OrientationAllOf.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OrientationAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.CopyProjectRequestArgs">
             <summary>
             Args(source_id: str, target_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="w">w (default to 1.0M).</param>
             <param name="x">x (default to 0.0M).</param>
             <param name="y">y (default to 0.0M).</param>
             <param name="z">z (default to 0.0M).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OrientationAllOf.W">
             <summary>
             Gets or Sets W
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OrientationAllOf.X">
             <summary>
             Gets or Sets X
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OrientationAllOf.Y">
             <summary>
             Gets or Sets Y
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OrientationAllOf.Z">
             <summary>
             Gets or Sets Z
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OrientationAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequestArgs" /> class.
             </summary>
             <param name="sourceId">sourceId (required).</param>
             <param name="targetName">targetName (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequestArgs.SourceId">
             <summary>
             Gets or Sets SourceId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequestArgs.TargetName">
             <summary>
             Gets or Sets TargetName
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OrientationAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OrientationAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OrientationAllOf.Equals(IO.Swagger.Model.OrientationAllOf)">
             <summary>
             Returns true if OrientationAllOf instances are equal
             </summary>
             <param name="input">Instance of OrientationAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.Equals(IO.Swagger.Model.CopyProjectRequestArgs)">
             <summary>
             Returns true if CopyProjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CopyProjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OrientationAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateProjectDescriptionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateProjectDescription.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateProjectDescriptionRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.ToString">
=======
        <member name="T:IO.Swagger.Model.PackageMeta">
             <summary>
             PackageMeta(name: str, built: datetime.datetime, executed: Union[datetime.datetime, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageMeta" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.#ctor(System.DateTime,System.DateTime,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageMeta" /> class.
             </summary>
             <param name="built">built (required).</param>
             <param name="executed">executed.</param>
             <param name="name">name (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageMeta.Built">
             <summary>
             Gets or Sets Built
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageMeta.Executed">
             <summary>
             Gets or Sets Executed
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageMeta.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.PackageMeta.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PackageMeta.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.Equals(IO.Swagger.Model.UpdateProjectDescriptionRequest)">
             <summary>
             Returns true if UpdateProjectDescriptionRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectDescriptionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PackageMeta.Equals(IO.Swagger.Model.PackageMeta)">
             <summary>
             Returns true if PackageMeta instances are equal
             </summary>
             <param name="input">Instance of PackageMeta to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PackageMeta.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectException">
             <summary>
             ProjectException(data: arcor2.data.events.ProjectException.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ProjectException.ChangeTypeEnum">
             <summary>
             Defines ChangeType
=======
        <member name="T:IO.Swagger.Model.ProcessStateAllOf">
             <summary>
             ProcessStateAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessStateAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.#ctor(IO.Swagger.Model.ProcessStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessStateAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectException.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectException.ChangeTypeEnum.Update">
=======
        <member name="P:IO.Swagger.Model.ProcessStateAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.ToString">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectException.ChangeTypeEnum.Remove">
=======
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.ToJson">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectException.ChangeTypeEnum.Updatebase">
=======
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectException.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectException.#ctor">
=======
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.Equals(IO.Swagger.Model.ProcessStateAllOf)">
             <summary>
             Returns true if ProcessStateAllOf instances are equal
             </summary>
             <param name="input">Instance of ProcessStateAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectException" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectException.#ctor(System.Nullable{IO.Swagger.Model.ProjectException.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ProjectExceptionData)">
=======
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectException" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectException.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectException.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectException.Data">
             <summary>
             Gets or Sets Data
=======
        <member name="T:IO.Swagger.Model.RemoveActionRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectException.ToString">
=======
        <member name="P:IO.Swagger.Model.RemoveActionRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectException.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectException.Equals(System.Object)">
=======
        <member name="P:IO.Swagger.Model.RemoveActionRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectException.Equals(IO.Swagger.Model.ProjectException)">
             <summary>
             Returns true if ProjectException instances are equal
             </summary>
             <param name="input">Instance of ProjectException to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectException.GetHashCode">
=======
        <member name="P:IO.Swagger.Model.RemoveActionRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectException.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OpenSceneRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
=======
        <member name="M:IO.Swagger.Model.RemoveActionRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneRequest" /> class.
=======
        <member name="M:IO.Swagger.Model.RemoveActionRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
>>>>>>> devel
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenSceneRequest.Id">
=======
        <member name="M:IO.Swagger.Model.RemoveActionRequest.Equals(IO.Swagger.Model.RemoveActionRequest)">
             <summary>
             Returns true if RemoveActionRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenSceneRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.RemoveActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RobotJointsData">
             <summary>
             Data(robot_id: str, joints: List[arcor2.data.common.Joint])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJointsData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsData.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Joint},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJointsData" /> class.
             </summary>
             <param name="joints">joints (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotJointsData.Joints">
             <summary>
             Gets or Sets Joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotJointsData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotJointsData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotJointsData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneRequest.Equals(IO.Swagger.Model.OpenSceneRequest)">
             <summary>
             Returns true if OpenSceneRequest instances are equal
             </summary>
             <param name="input">Instance of OpenSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotJointsData.Equals(IO.Swagger.Model.RobotJointsData)">
             <summary>
             Returns true if RobotJointsData instances are equal
             </summary>
             <param name="input">Instance of RobotJointsData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotJointsData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectPoseRequestArgs">
             <summary>
             Args(object_id: str, pose: arcor2.data.common.Pose)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.#ctor(System.String,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequestArgs" /> class.
             </summary>
             <param name="objectId">objectId (required).</param>
             <param name="pose">pose (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequestArgs.ObjectId">
             <summary>
             Gets or Sets ObjectId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequestArgs.Pose">
             <summary>
             Gets or Sets Pose
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.ListScenesResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_arserver_data.rpc.scene.ListScenes.Response.Data], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.ListScenesResponseData})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.ListScenesResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ListScenesResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.Equals(IO.Swagger.Model.UpdateObjectPoseRequestArgs)">
             <summary>
             Returns true if UpdateObjectPoseRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ListScenesResponse.Equals(IO.Swagger.Model.ListScenesResponse)">
             <summary>
             Returns true if ListScenesResponse instances are equal
             </summary>
             <param name="input">Instance of ListScenesResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ListScenesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddObjectToSceneRequestAllOf">
             <summary>
             AddObjectToSceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.#ctor(IO.Swagger.Model.AddObjectToSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.ActionStateAfter">
             <summary>
             ActionStateAfter(data: arcor2.data.events.ActionStateAfter.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.ToJson">
=======
        <member name="F:IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum.Add">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.Equals(System.Object)">
=======
        <member name="F:IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.Equals(IO.Swagger.Model.AddObjectToSceneRequestAllOf)">
             <summary>
             Returns true if AddObjectToSceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddObjectToSceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.GetHashCode">
=======
        <member name="F:IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum.Updatebase">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="P:IO.Swagger.Model.ActionStateAfter.ChangeType">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddActionPointJointsUsingRobot.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest" /> class.
=======
        <member name="M:IO.Swagger.Model.ActionStateAfter.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfter" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfter.#ctor(System.Nullable{IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ActionStateAfterData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfter" /> class.
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.ActionStateAfter.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateAfter.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateAfter.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfter.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfter.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfter.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.Equals(IO.Swagger.Model.AddActionPointJointsUsingRobotRequest)">
             <summary>
             Returns true if AddActionPointJointsUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of AddActionPointJointsUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfter.Equals(IO.Swagger.Model.ActionStateAfter)">
             <summary>
             Returns true if ActionStateAfter instances are equal
             </summary>
             <param name="input">Instance of ActionStateAfter to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfter.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfter.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.ToString">
=======
        <member name="T:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf">
             <summary>
             RemoveFromSceneRequestArgsAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.#ctor(System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf" /> class.
             </summary>
             <param name="force">force (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.Force">
             <summary>
             Gets or Sets Force
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionResponse.Equals(IO.Swagger.Model.UpdateActionResponse)">
             <summary>
             Returns true if UpdateActionResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.Equals(IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf)">
             <summary>
             Returns true if RemoveFromSceneRequestArgsAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveFromSceneRequestArgsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameActionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RenameAction.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionRequest.Request">
=======
        <member name="T:IO.Swagger.Model.ActionStateBefore">
>>>>>>> devel
             <summary>
             ActionStateBefore(data: arcor2.data.events.ActionStateBefore.Data)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionRequest.Args">
=======
        <member name="T:IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequest.ToString">
=======
        <member name="F:IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum.Add">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionRequest.ToJson">
=======
        <member name="F:IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionRequest.Equals(System.Object)">
=======
        <member name="F:IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum.Remove">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionRequest.Equals(IO.Swagger.Model.RenameActionRequest)">
             <summary>
             Returns true if RenameActionRequest instances are equal
             </summary>
             <param name="input">Instance of RenameActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequest.GetHashCode">
=======
        <member name="F:IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateBefore.ChangeType">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionStateBefore.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBefore" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Request">
             <summary>
             Request(id: int)
=======
        <member name="M:IO.Swagger.Model.ActionStateBefore.#ctor(System.Nullable{IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ActionStateBeforeData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBefore" /> class.
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Request.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Request" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Request.#ctor(System.Int32,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Request" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.Request.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Request._Request">
             <summary>
             Gets or Sets _Request
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Request.ToString">
=======
        <member name="P:IO.Swagger.Model.ActionStateBefore.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateBefore.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateBefore.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBefore.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Request.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionStateBefore.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Request.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionStateBefore.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Request.Equals(IO.Swagger.Model.Request)">
             <summary>
             Returns true if Request instances are equal
             </summary>
             <param name="input">Instance of Request to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Request.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionStateBefore.Equals(IO.Swagger.Model.ActionStateBefore)">
             <summary>
             Returns true if ActionStateBefore instances are equal
             </summary>
             <param name="input">Instance of ActionStateBefore to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBefore.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Request.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionStateBefore.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetCameraPoseResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2.data.common.Pose, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetCameraPoseResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetCameraPoseResponse.Messages">
             <summary>
             Gets or Sets Messages
=======
        <member name="T:IO.Swagger.Model.TypeArgs">
             <summary>
             TypeArgs(type: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TypeArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TypeArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TypeArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TypeArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="type">type (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetCameraPoseResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetCameraPoseResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetCameraPoseResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.TypeArgs.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TypeArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.TypeArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.TypeArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.Equals(IO.Swagger.Model.GetCameraPoseResponse)">
             <summary>
             Returns true if GetCameraPoseResponse instances are equal
             </summary>
             <param name="input">Instance of GetCameraPoseResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.TypeArgs.Equals(IO.Swagger.Model.TypeArgs)">
             <summary>
             Returns true if TypeArgs instances are equal
             </summary>
             <param name="input">Instance of TypeArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.TypeArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.TypeArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneObjectUsageRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectUsageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectUsageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectUsageRequest.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="T:IO.Swagger.Model.SystemInfoResponseAllOf">
             <summary>
             SystemInfoResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.#ctor(IO.Swagger.Model.SystemInfoResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoResponseAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneObjectUsageRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectUsageRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.SystemInfoResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.Equals(IO.Swagger.Model.SceneObjectUsageRequest)">
             <summary>
             Returns true if SceneObjectUsageRequest instances are equal
             </summary>
             <param name="input">Instance of SceneObjectUsageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.Equals(IO.Swagger.Model.SystemInfoResponseAllOf)">
             <summary>
             Returns true if SystemInfoResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of SystemInfoResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectUsageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.StopPackageRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageRequest.#ctor">
=======
        <member name="T:IO.Swagger.Model.GetEndEffectorsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorsResponse.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopPackageRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageRequest.#ctor(System.Int32,System.String,System.String)">
=======
        <member name="P:IO.Swagger.Model.GetEndEffectorsResponse.Messages">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopPackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopPackageRequest.Id">
=======
        <member name="P:IO.Swagger.Model.GetEndEffectorsResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopPackageRequest.Request">
=======
        <member name="P:IO.Swagger.Model.GetEndEffectorsResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopPackageRequest.Data">
=======
        <member name="P:IO.Swagger.Model.GetEndEffectorsResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageRequest.Equals(IO.Swagger.Model.StopPackageRequest)">
             <summary>
             Returns true if StopPackageRequest instances are equal
             </summary>
             <param name="input">Instance of StopPackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.Equals(IO.Swagger.Model.GetEndEffectorsResponse)">
             <summary>
             Returns true if GetEndEffectorsResponse instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopPackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CopyActionPointRequestAllOf">
             <summary>
             CopyActionPointRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.#ctor(IO.Swagger.Model.CopyActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.RemoveActionPointJointsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RemoveActionPointJoints.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RemoveActionPointJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopyActionPointRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopyActionPointRequestAllOf.DryRun">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.Equals(IO.Swagger.Model.CopyActionPointRequestAllOf)">
             <summary>
             Returns true if CopyActionPointRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CopyActionPointRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.Equals(IO.Swagger.Model.RemoveActionPointJointsRequest)">
             <summary>
             Returns true if RemoveActionPointJointsRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointJointsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OpenProjectRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.GetRobotJointsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.GetRobotJoints.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetRobotJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenProjectRequest.Id">
=======
        <member name="P:IO.Swagger.Model.GetRobotJointsRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenProjectRequest.Request">
=======
        <member name="P:IO.Swagger.Model.GetRobotJointsRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenProjectRequest.Args">
=======
        <member name="P:IO.Swagger.Model.GetRobotJointsRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectRequest.Equals(IO.Swagger.Model.OpenProjectRequest)">
             <summary>
             Returns true if OpenProjectRequest instances are equal
             </summary>
             <param name="input">Instance of OpenProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.Equals(IO.Swagger.Model.GetRobotJointsRequest)">
             <summary>
             Returns true if GetRobotJointsRequest instances are equal
             </summary>
             <param name="input">Instance of GetRobotJointsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetRobotJointsResponseAllOf">
             <summary>
             GetRobotJointsResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Joint})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameObjectRequestAllOf">
             <summary>
             RenameObjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.#ctor(IO.Swagger.Model.RenameArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.Equals(IO.Swagger.Model.GetRobotJointsResponseAllOf)">
             <summary>
             Returns true if GetRobotJointsResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of GetRobotJointsResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.Equals(IO.Swagger.Model.RenameObjectRequestAllOf)">
             <summary>
             Returns true if RenameObjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameObjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CalibrateCameraRequestArgs">
             <summary>
             Args(id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequestArgs" /> class.
             </summary>
             <param name="id">Camera id. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraRequestArgs.Id">
             <summary>
             Camera id.
=======
        <member name="T:IO.Swagger.Model.RenamePackageRequestAllOf">
             <summary>
             RenamePackageRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.#ctor(IO.Swagger.Model.RenamePackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageRequestAllOf.Args">
             <summary>
             Gets or Sets Args
>>>>>>> devel
             </summary>
             <value>Camera id.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.Equals(IO.Swagger.Model.CalibrateCameraRequestArgs)">
             <summary>
             Returns true if CalibrateCameraRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CalibrateCameraRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.Equals(IO.Swagger.Model.RenamePackageRequestAllOf)">
             <summary>
             Returns true if RenamePackageRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenamePackageRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.StartSceneRequest">
             <summary>
             Request(id: int, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StartSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneRequest.#ctor(System.Int32,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StartSceneRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.NewSceneRequestAllOf">
             <summary>
             NewSceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StartSceneRequest.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.#ctor(IO.Swagger.Model.NewSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StartSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.NewSceneRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StartSceneRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StartSceneRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StartSceneRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StartSceneRequest.Equals(IO.Swagger.Model.StartSceneRequest)">
             <summary>
             Returns true if StartSceneRequest instances are equal
             </summary>
             <param name="input">Instance of StartSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.Equals(IO.Swagger.Model.NewSceneRequestAllOf)">
             <summary>
             Returns true if NewSceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of NewSceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StartSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs">
             <summary>
             Args(orientation_id: str, orientation: arcor2.data.common.Orientation)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.#ctor(IO.Swagger.Model.Orientation,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs" /> class.
             </summary>
             <param name="orientation">orientation (required).</param>
             <param name="orientationId">orientationId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.Orientation">
             <summary>
             Gets or Sets Orientation
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.ChangedObjectTypesAllOf">
             <summary>
             ChangedObjectTypesAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ChangedObjectTypesAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ObjectTypeMeta})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ChangedObjectTypesAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ChangedObjectTypesAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointOrientationRequestArgs)">
             <summary>
             Returns true if UpdateActionPointOrientationRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.Equals(IO.Swagger.Model.ChangedObjectTypesAllOf)">
             <summary>
             Returns true if ChangedObjectTypesAllOf instances are equal
             </summary>
             <param name="input">Instance of ChangedObjectTypesAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointPositionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointPosition.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointPositionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequest.Id">
=======
        <member name="T:IO.Swagger.Model.FocusObjectDoneResponseAllOf">
>>>>>>> devel
             <summary>
             FocusObjectDoneResponseAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequest.Request">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.#ctor(IO.Swagger.Model.FocusObjectResponseData)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectDoneResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequest.Args">
=======
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponseAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.Equals(IO.Swagger.Model.UpdateActionPointPositionRequest)">
             <summary>
             Returns true if UpdateActionPointPositionRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointPositionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.Equals(IO.Swagger.Model.FocusObjectDoneResponseAllOf)">
             <summary>
             Returns true if FocusObjectDoneResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of FocusObjectDoneResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJoints">
             <summary>
             RobotMoveToActionPointJoints(data: arcor2_arserver_data.events.robot.RobotMoveToActionPointJoints.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJoints" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.#ctor(System.Nullable{IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotMoveToActionPointJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJoints" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJoints.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJoints.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJoints.Data">
=======
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs">
             <summary>
             Args(id: str, robot: arcor2.data.rpc.common.RobotArg, pivot: arcor2_arserver_data.rpc.objects.UpdateObjectPoseUsingRobot.Request.Args.PivotEnum = &lt;PivotEnum.MIDDLE: 'middle'&gt;)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.PivotEnum">
             <summary>
             Defines Pivot
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.PivotEnum.Top">
             <summary>
             Enum Top for value: top
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.PivotEnum.Middle">
             <summary>
             Enum Middle for value: middle
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.PivotEnum.Bottom">
             <summary>
             Enum Bottom for value: bottom
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.Pivot">
             <summary>
             Gets or Sets Pivot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.#ctor(System.String,System.Nullable{IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.PivotEnum},IO.Swagger.Model.RobotArg)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="pivot">pivot (default to PivotEnum.Middle).</param>
             <param name="robot">robot (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.Robot">
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.Equals(IO.Swagger.Model.RobotMoveToActionPointJoints)">
             <summary>
             Returns true if RobotMoveToActionPointJoints instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointJoints to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.Equals(IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs)">
             <summary>
             Returns true if UpdateObjectPoseUsingRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ForwardKinematicsRequestAllOf">
             <summary>
             ForwardKinematicsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.#ctor(IO.Swagger.Model.ForwardKinematicsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.ProjectExceptionData">
             <summary>
             Data(message: str, type: str, handled: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectExceptionData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.#ctor(System.Boolean,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectExceptionData" /> class.
             </summary>
             <param name="handled">handled (default to false).</param>
             <param name="message">message (required).</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectExceptionData.Handled">
             <summary>
             Gets or Sets Handled
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.ProjectExceptionData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectExceptionData.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectExceptionData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectExceptionData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.Equals(IO.Swagger.Model.ForwardKinematicsRequestAllOf)">
             <summary>
             Returns true if ForwardKinematicsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of ForwardKinematicsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectExceptionData.Equals(IO.Swagger.Model.ProjectExceptionData)">
             <summary>
             Returns true if ProjectExceptionData instances are equal
             </summary>
             <param name="input">Instance of ProjectExceptionData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectExceptionData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotJoints">
             <summary>
             RobotJoints(data: arcor2_arserver_data.events.robot.RobotJoints.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotJoints.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotJoints.ChangeTypeEnum.Add">
=======
        <member name="T:IO.Swagger.Model.AddConstantResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantResponse.ToString">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotJoints.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.AddConstantResponse.ToJson">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotJoints.ChangeTypeEnum.Remove">
=======
        <member name="M:IO.Swagger.Model.AddConstantResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotJoints.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotJoints.ChangeType">
=======
        <member name="M:IO.Swagger.Model.AddConstantResponse.Equals(IO.Swagger.Model.AddConstantResponse)">
             <summary>
             Returns true if AddConstantResponse instances are equal
             </summary>
             <param name="input">Instance of AddConstantResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJoints.#ctor">
=======
        <member name="M:IO.Swagger.Model.AddConstantResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJoints" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJoints.#ctor(System.Nullable{IO.Swagger.Model.RobotJoints.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJoints" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateObjectPoseRequestArgs">
             <summary>
             Args(object_id: str, pose: arcor2.data.common.Pose)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotJoints.Event">
             <summary>
             Gets or Sets Event
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.#ctor(System.String,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="objectId">objectId (required).</param>
             <param name="pose">pose (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotJoints.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotJoints.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJoints.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequestArgs.ObjectId">
             <summary>
             Gets or Sets ObjectId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequestArgs.Pose">
             <summary>
             Gets or Sets Pose
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJoints.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJoints.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJoints.Equals(IO.Swagger.Model.RobotJoints)">
             <summary>
             Returns true if RobotJoints instances are equal
             </summary>
             <param name="input">Instance of RobotJoints to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotJoints.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.Equals(IO.Swagger.Model.UpdateObjectPoseRequestArgs)">
             <summary>
             Returns true if UpdateObjectPoseRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJoints.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ListPackagesResponseAllOf">
             <summary>
             ListPackagesResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.PackageSummary})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListPackagesResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.RemoveLogicItemRequestAllOf">
             <summary>
             RemoveLogicItemRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.#ctor(IO.Swagger.Model.RemoveLogicItemRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveLogicItemRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.Equals(IO.Swagger.Model.ListPackagesResponseAllOf)">
             <summary>
             Returns true if ListPackagesResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of ListPackagesResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.Equals(IO.Swagger.Model.RemoveLogicItemRequestAllOf)">
             <summary>
             Returns true if RemoveLogicItemRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveLogicItemRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetSuctionsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointParentResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
<<<<<<< HEAD
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetSuctionsResponse.Id">
=======
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetSuctionsResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointParentResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetSuctionsResponse.Response">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointParentResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetSuctionsResponse.Result">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointParentResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetSuctionsResponse.Data">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointParentResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.Equals(IO.Swagger.Model.GetSuctionsResponse)">
             <summary>
             Returns true if GetSuctionsResponse instances are equal
             </summary>
             <param name="input">Instance of GetSuctionsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.Equals(IO.Swagger.Model.UpdateActionPointParentResponse)">
             <summary>
             Returns true if UpdateActionPointParentResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointParentResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.BuildProjectResponseAllOf">
             <summary>
             BuildProjectResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.#ctor(IO.Swagger.Model.BuildProjectResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectResponseAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.AddConstantRequestArgs">
             <summary>
             Args(name: str, type: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequestArgs" /> class.
             </summary>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
             <param name="value">value (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantRequestArgs.Type">
             <summary>
             Gets or Sets Type
>>>>>>> devel
             </summary>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BuildProjectResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.AddConstantRequestArgs.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.Equals(IO.Swagger.Model.BuildProjectResponseAllOf)">
             <summary>
             Returns true if BuildProjectResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of BuildProjectResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.Equals(IO.Swagger.Model.AddConstantRequestArgs)">
             <summary>
             Returns true if AddConstantRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddConstantRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Corner">
             <summary>
             Corner(x: float, y: float)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Corner.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Corner" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Corner.#ctor(System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Corner" /> class.
             </summary>
             <param name="x">x (required).</param>
             <param name="y">y (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.Corner.X">
             <summary>
             Gets or Sets X
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Corner.Y">
             <summary>
             Gets or Sets Y
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Corner.ToString">
=======
        <member name="T:IO.Swagger.Model.CloseSceneRequestAllOf">
             <summary>
             CloseSceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.#ctor(IO.Swagger.Model.CloseSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneRequestAllOf" /> class.
             </summary>
             <param name="args">args.</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Corner.ToJson">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Corner.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Corner.Equals(IO.Swagger.Model.Corner)">
             <summary>
             Returns true if Corner instances are equal
             </summary>
             <param name="input">Instance of Corner to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Corner.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.Equals(IO.Swagger.Model.CloseSceneRequestAllOf)">
             <summary>
             Returns true if CloseSceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CloseSceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Corner.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.FocusObjectStartResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectStartResponse.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="T:IO.Swagger.Model.UpdateObjectParametersRequestAllOf">
             <summary>
             UpdateObjectParametersRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.#ctor(IO.Swagger.Model.UpdateObjectParametersRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FocusObjectStartResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectStartResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectStartResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectStartResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.Equals(IO.Swagger.Model.FocusObjectStartResponse)">
             <summary>
             Returns true if FocusObjectStartResponse instances are equal
             </summary>
             <param name="input">Instance of FocusObjectStartResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.Equals(IO.Swagger.Model.UpdateObjectParametersRequestAllOf)">
             <summary>
             Returns true if UpdateObjectParametersRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectParametersRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs">
             <summary>
             Args(id: str, robot: arcor2.data.rpc.common.RobotArg, pivot: arcor2_arserver_data.rpc.objects.UpdateObjectPoseUsingRobot.Request.Args.PivotEnum = &lt;PivotEnum.MIDDLE: 'middle'&gt;)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.PivotEnum">
             <summary>
             Defines Pivot
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.PivotEnum.Top">
             <summary>
             Enum Top for value: top
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.PivotEnum.Middle">
             <summary>
             Enum Middle for value: middle
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.PivotEnum.Bottom">
             <summary>
             Enum Bottom for value: bottom
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.Pivot">
             <summary>
             Gets or Sets Pivot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.#ctor(System.String,System.Nullable{IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.PivotEnum},IO.Swagger.Model.RobotArg)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="pivot">pivot (default to PivotEnum.Middle).</param>
             <param name="robot">robot (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.Robot">
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.Equals(IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs)">
             <summary>
             Returns true if UpdateObjectPoseUsingRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ActionParamValuesResponseAllOf">
             <summary>
             ActionParamValuesResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.#ctor(System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesResponseAllOf.Data">
=======
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.UpdateObjectPoseUsingRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.Equals(IO.Swagger.Model.ActionParamValuesResponseAllOf)">
             <summary>
             Returns true if ActionParamValuesResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionParamValuesResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.Equals(IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest)">
             <summary>
             Returns true if UpdateObjectPoseUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionStateAfterAllOf">
=======
        <member name="T:IO.Swagger.Model.UpdateObjectParametersRequestArgs">
             <summary>
             Args(id: str, parameters: List[arcor2.data.common.Parameter] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Parameter})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="parameters">parameters.</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequestArgs.Id">
>>>>>>> devel
             <summary>
             ActionStateAfterAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfterAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.#ctor(IO.Swagger.Model.ActionStateAfterData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfterAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateAfterAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequestArgs.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.Equals(IO.Swagger.Model.ActionStateAfterAllOf)">
             <summary>
             Returns true if ActionStateAfterAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionStateAfterAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.Equals(IO.Swagger.Model.UpdateObjectParametersRequestArgs)">
             <summary>
             Returns true if UpdateObjectParametersRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectParametersRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddOverrideResponse">
=======
        <member name="T:IO.Swagger.Model.CalibrateCameraResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddOverrideResponse.Id">
=======
        <member name="P:IO.Swagger.Model.CalibrateCameraResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddOverrideResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.CalibrateCameraResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddOverrideResponse.Response">
=======
        <member name="P:IO.Swagger.Model.CalibrateCameraResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddOverrideResponse.Result">
=======
        <member name="P:IO.Swagger.Model.CalibrateCameraResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddOverrideResponse.Data">
=======
        <member name="P:IO.Swagger.Model.CalibrateCameraResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideResponse.Equals(IO.Swagger.Model.AddOverrideResponse)">
             <summary>
             Returns true if AddOverrideResponse instances are equal
             </summary>
             <param name="input">Instance of AddOverrideResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.Equals(IO.Swagger.Model.CalibrateCameraResponse)">
             <summary>
             Returns true if CalibrateCameraResponse instances are equal
             </summary>
             <param name="input">Instance of CalibrateCameraResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddConstantRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddConstant.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsRequestArgs">
             <summary>
             Args(joints_id: str, joints: List[arcor2.data.common.Joint])
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddConstantRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantRequest.Request">
             <summary>
             Gets or Sets Request
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Joint},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="joints">joints (required).</param>
             <param name="jointsId">jointsId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddConstantRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.Joints">
             <summary>
             Gets or Sets Joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.JointsId">
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantRequest.Equals(IO.Swagger.Model.AddConstantRequest)">
             <summary>
             Returns true if AddConstantRequest instances are equal
             </summary>
             <param name="input">Instance of AddConstantRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointJointsRequestArgs)">
             <summary>
             Returns true if UpdateActionPointJointsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToData">
             <summary>
             RobotMoveToData(move_event_type: arcor2_arserver_data.events.robot.RobotMoveToData.MoveEventType, robot_id: str)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToData.MoveEventTypeEnum">
             <summary>
             Defines MoveEventType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToData.MoveEventTypeEnum.Start">
             <summary>
             Enum Start for value: start
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToData.MoveEventTypeEnum.End">
             <summary>
             Enum End for value: end
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToData.MoveEventTypeEnum.Failed">
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToData.MoveEventType">
             <summary>
             Gets or Sets MoveEventType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToData.#ctor(IO.Swagger.Model.RobotMoveToData.MoveEventTypeEnum,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToData" /> class.
             </summary>
             <param name="moveEventType">moveEventType (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToData.ToString">
=======
        <member name="T:IO.Swagger.Model.OrientationChanged">
             <summary>
             OrientationChanged(data: arcor2.data.common.NamedOrientation)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.OrientationChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OrientationChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OrientationChanged.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToData.ToJson">
=======
        <member name="F:IO.Swagger.Model.OrientationChanged.ChangeTypeEnum.Remove">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToData.Equals(System.Object)">
=======
        <member name="F:IO.Swagger.Model.OrientationChanged.ChangeTypeEnum.Updatebase">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToData.Equals(IO.Swagger.Model.RobotMoveToData)">
             <summary>
             Returns true if RobotMoveToData instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToData.GetHashCode">
=======
        <member name="P:IO.Swagger.Model.OrientationChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChanged.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OrientationChanged" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OrientationChanged.#ctor(System.Nullable{IO.Swagger.Model.OrientationChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.NamedOrientation)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OrientationChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameActionRequestArgs">
             <summary>
             Args(action_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequestArgs" /> class.
=======
        <member name="P:IO.Swagger.Model.OrientationChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OrientationChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OrientationChanged.Data">
             <summary>
             Gets or Sets Data
>>>>>>> devel
             </summary>
             <param name="actionId">actionId (required).</param>
             <param name="newName">newName (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionRequestArgs.ActionId">
             <summary>
             Gets or Sets ActionId
=======
        <member name="M:IO.Swagger.Model.OrientationChanged.ToString">
             <summary>
             Returns the string presentation of the object
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
=======
        <member name="M:IO.Swagger.Model.OrientationChanged.ToJson">
             <summary>
             Returns the JSON string presentation of the object
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.Equals(IO.Swagger.Model.RenameActionRequestArgs)">
             <summary>
             Returns true if RenameActionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenameActionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
=======
        <member name="M:IO.Swagger.Model.OrientationChanged.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChanged.Equals(IO.Swagger.Model.OrientationChanged)">
             <summary>
             Returns true if OrientationChanged instances are equal
             </summary>
             <param name="input">Instance of OrientationChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChanged.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.Request">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Request.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Request" /> class.
>>>>>>> devel
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.InverseKinematicsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.InverseKinematics.Request.Args)
=======
        <member name="M:IO.Swagger.Model.Request.#ctor(System.Int32,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Request" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.InverseKinematicsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.Request.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Request._Request">
             <summary>
             Gets or Sets _Request
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Request.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.Request.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Request.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.Equals(IO.Swagger.Model.InverseKinematicsRequest)">
             <summary>
             Returns true if InverseKinematicsRequest instances are equal
             </summary>
             <param name="input">Instance of InverseKinematicsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Request.Equals(IO.Swagger.Model.Request)">
             <summary>
             Returns true if Request instances are equal
             </summary>
             <param name="input">Instance of Request to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Request.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Request.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MeshAllOf">
             <summary>
             MeshAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MeshAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Pose},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MeshAllOf" /> class.
             </summary>
             <param name="focusPoints">focusPoints.</param>
             <param name="uri">uri (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MeshAllOf.FocusPoints">
             <summary>
             Gets or Sets FocusPoints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MeshAllOf.Uri">
             <summary>
             Gets or Sets Uri
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
=======
        <member name="T:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs">
             <summary>
             Args(scene_id: str, new_description: str)
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MeshAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.Equals(IO.Swagger.Model.MeshAllOf)">
             <summary>
             Returns true if MeshAllOf instances are equal
             </summary>
             <param name="input">Instance of MeshAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.GetHashCode">
             <summary>
             Gets the hash code
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs" /> class.
             </summary>
             <param name="newDescription">newDescription (required).</param>
             <param name="sceneId">sceneId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.NewDescription">
             <summary>
             Gets or Sets NewDescription
>>>>>>> devel
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MeshAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
=======
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.SceneId">
             <summary>
             Gets or Sets SceneId
>>>>>>> devel
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.HandTeachingMode">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.ToString">
>>>>>>> devel
             <summary>
             HandTeachingMode(data: arcor2_arserver_data.events.robot.HandTeachingMode.Data)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum.Add">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum.Remove">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.Equals(IO.Swagger.Model.UpdateSceneDescriptionRequestArgs)">
             <summary>
             Returns true if UpdateSceneDescriptionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateSceneDescriptionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum.Updatebase">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.HandTeachingMode.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingMode.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingMode" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingMode.#ctor(System.Nullable{IO.Swagger.Model.HandTeachingMode.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.HandTeachingModeData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingMode" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingMode.Event">
             <summary>
             Gets or Sets Event
=======
        <member name="T:IO.Swagger.Model.NewProjectRequestAllOf">
             <summary>
             NewProjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.#ctor(IO.Swagger.Model.NewProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.HandTeachingMode.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingMode.Data">
=======
        <member name="P:IO.Swagger.Model.NewProjectRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingMode.ToString">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingMode.ToJson">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingMode.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingMode.Equals(IO.Swagger.Model.HandTeachingMode)">
             <summary>
             Returns true if HandTeachingMode instances are equal
             </summary>
             <param name="input">Instance of HandTeachingMode to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingMode.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.Equals(IO.Swagger.Model.NewProjectRequestAllOf)">
             <summary>
             Returns true if NewProjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of NewProjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingMode.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CalibrateRobotRequestAllOf">
             <summary>
             CalibrateRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.#ctor(IO.Swagger.Model.CalibrateRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.ResumePackageRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResumePackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResumePackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ResumePackageRequest.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CalibrateRobotRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.ResumePackageRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.ResumePackageRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ResumePackageRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ResumePackageRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.Equals(IO.Swagger.Model.CalibrateRobotRequestAllOf)">
             <summary>
             Returns true if CalibrateRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CalibrateRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ResumePackageRequest.Equals(IO.Swagger.Model.ResumePackageRequest)">
             <summary>
             Returns true if ResumePackageRequest instances are equal
             </summary>
             <param name="input">Instance of ResumePackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ResumePackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddLogicItemResponse">
=======
        <member name="T:IO.Swagger.Model.RenameActionResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.RenameActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddLogicItemResponse.Id">
=======
        <member name="P:IO.Swagger.Model.RenameActionResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddLogicItemResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.RenameActionResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddLogicItemResponse.Response">
=======
        <member name="P:IO.Swagger.Model.RenameActionResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddLogicItemResponse.Result">
=======
        <member name="P:IO.Swagger.Model.RenameActionResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddLogicItemResponse.Data">
=======
        <member name="P:IO.Swagger.Model.RenameActionResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.RenameActionResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameActionResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameActionResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.Equals(IO.Swagger.Model.AddLogicItemResponse)">
             <summary>
             Returns true if AddLogicItemResponse instances are equal
             </summary>
             <param name="input">Instance of AddLogicItemResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionResponse.Equals(IO.Swagger.Model.RenameActionResponse)">
             <summary>
             Returns true if RenameActionResponse instances are equal
             </summary>
             <param name="input">Instance of RenameActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CollisionModels">
             <summary>
             CollisionModels(boxes: List[arcor2.data.object_type.Box] = &lt;factory&gt;, spheres: List[arcor2.data.object_type.Sphere] = &lt;factory&gt;, cylinders: List[arcor2.data.object_type.Cylinder] = &lt;factory&gt;, meshes: List[arcor2.data.object_type.Mesh] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CollisionModels.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Box},System.Collections.Generic.List{IO.Swagger.Model.Cylinder},System.Collections.Generic.List{IO.Swagger.Model.Mesh},System.Collections.Generic.List{IO.Swagger.Model.Sphere})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CollisionModels" /> class.
=======
        <member name="T:IO.Swagger.Model.RenameActionPointOrientationRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RenameActionPointOrientation.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="boxes">boxes.</param>
             <param name="cylinders">cylinders.</param>
             <param name="meshes">meshes.</param>
             <param name="spheres">spheres.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CollisionModels.Boxes">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Boxes
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CollisionModels.Cylinders">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Cylinders
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CollisionModels.Meshes">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Meshes
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CollisionModels.Spheres">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets Spheres
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CollisionModels.ToString">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CollisionModels.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CollisionModels.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CollisionModels.Equals(IO.Swagger.Model.CollisionModels)">
             <summary>
             Returns true if CollisionModels instances are equal
             </summary>
             <param name="input">Instance of CollisionModels to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CollisionModels.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.Equals(IO.Swagger.Model.RenameActionPointOrientationRequest)">
             <summary>
             Returns true if RenameActionPointOrientationRequest instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointOrientationRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CollisionModels.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveLogicItemRequestAllOf">
             <summary>
             RemoveLogicItemRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.#ctor(IO.Swagger.Model.RemoveLogicItemRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveLogicItemRequestAllOf.Args">
=======
        <member name="T:IO.Swagger.Model.AddObjectToSceneRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.AddObjectToScene.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddObjectToSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.Equals(IO.Swagger.Model.RemoveLogicItemRequestAllOf)">
             <summary>
             Returns true if RemoveLogicItemRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveLogicItemRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.Equals(IO.Swagger.Model.AddObjectToSceneRequest)">
             <summary>
             Returns true if AddObjectToSceneRequest instances are equal
             </summary>
             <param name="input">Instance of AddObjectToSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MarkersCornersRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.common.MarkersCorners.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.MarkersCornersRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersRequest.Id">
=======
        <member name="T:IO.Swagger.Model.DeleteOverrideResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MarkersCornersRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.DeleteOverrideResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.Equals(IO.Swagger.Model.MarkersCornersRequest)">
             <summary>
             Returns true if MarkersCornersRequest instances are equal
             </summary>
             <param name="input">Instance of MarkersCornersRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.Equals(IO.Swagger.Model.DeleteOverrideResponse)">
             <summary>
             Returns true if DeleteOverrideResponse instances are equal
             </summary>
             <param name="input">Instance of DeleteOverrideResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CameraColorImageRequestArgs">
             <summary>
             Args(id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequestArgs" /> class.
             </summary>
             <param name="id">Camera id. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageRequestArgs.Id">
             <summary>
             Camera id.
=======
        <member name="T:IO.Swagger.Model.GetRobotMetaRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotMetaRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotMetaRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotMetaRequest.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <value>Camera id.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.GetRobotMetaRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotMetaRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.Equals(IO.Swagger.Model.CameraColorImageRequestArgs)">
             <summary>
             Returns true if CameraColorImageRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CameraColorImageRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.Equals(IO.Swagger.Model.GetRobotMetaRequest)">
             <summary>
             Returns true if GetRobotMetaRequest instances are equal
             </summary>
             <param name="input">Instance of GetRobotMetaRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.LogicItem">
             <summary>
             LogicItem(id: str, start: str, end: str, condition: Union[arcor2.data.common.ProjectLogicIf, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItem.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItem" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItem.#ctor(IO.Swagger.Model.ProjectLogicIf,System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItem" /> class.
=======
        <member name="T:IO.Swagger.Model.CameraColorImageRequestAllOf">
             <summary>
             CameraColorImageRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.#ctor(IO.Swagger.Model.CameraColorImageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="condition">condition.</param>
             <param name="end">end (required).</param>
             <param name="id">id (required).</param>
             <param name="start">start (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.LogicItem.Condition">
=======
        <member name="P:IO.Swagger.Model.CameraColorImageRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Condition
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.LogicItem.End">
             <summary>
             Gets or Sets End
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.LogicItem.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.LogicItem.Start">
             <summary>
             Gets or Sets Start
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItem.ToString">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItem.ToJson">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItem.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItem.Equals(IO.Swagger.Model.LogicItem)">
             <summary>
             Returns true if LogicItem instances are equal
             </summary>
             <param name="input">Instance of LogicItem to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.LogicItem.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.Equals(IO.Swagger.Model.CameraColorImageRequestAllOf)">
             <summary>
             Returns true if CameraColorImageRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CameraColorImageRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItem.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsResponse">
=======
        <member name="T:IO.Swagger.Model.RemoveActionPointResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsResponse.Id">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsResponse.Response">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsResponse.Result">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsResponse.Data">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.Equals(IO.Swagger.Model.UpdateActionPointJointsResponse)">
             <summary>
             Returns true if UpdateActionPointJointsResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.Equals(IO.Swagger.Model.RemoveActionPointResponse)">
             <summary>
             Returns true if RemoveActionPointResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddOverrideRequestArgs">
             <summary>
             Args(id: str, override: arcor2.data.common.Parameter)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.#ctor(System.String,IO.Swagger.Model.Parameter)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequestArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.RenameActionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RenameAction.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionRequest.Request">
             <summary>
             Gets or Sets Request
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="_override">_override (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddOverrideRequestArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddOverrideRequestArgs.Override">
             <summary>
             Gets or Sets Override
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.RenameActionRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.Equals(IO.Swagger.Model.AddOverrideRequestArgs)">
             <summary>
             Returns true if AddOverrideRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddOverrideRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequest.Equals(IO.Swagger.Model.RenameActionRequest)">
             <summary>
             Returns true if RenameActionRequest instances are equal
             </summary>
             <param name="input">Instance of RenameActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OpenProject">
=======
        <member name="T:IO.Swagger.Model.UpdateOverrideRequestArgs">
             <summary>
             Args(id: str, override: arcor2.data.common.Parameter)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.#ctor(System.String,IO.Swagger.Model.Parameter)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="_override">_override (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideRequestArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideRequestArgs.Override">
             <summary>
             Gets or Sets Override
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             OpenProject(data: arcor2_arserver_data.events.project.OpenProject.Data)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OpenProject.ChangeTypeEnum">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.OpenProject.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OpenProject.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.Equals(IO.Swagger.Model.UpdateOverrideRequestArgs)">
             <summary>
             Returns true if UpdateOverrideRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateOverrideRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.OpenProject.ChangeTypeEnum.Remove">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.OpenProject.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenProject.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProject.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProject" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProject.#ctor(System.Nullable{IO.Swagger.Model.OpenProject.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.OpenProjectData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProject" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenProject.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenProject.ParentId">
             <summary>
             Gets or Sets ParentId
=======
        <member name="T:IO.Swagger.Model.SceneAllOf">
             <summary>
             SceneAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.SceneObject})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="objects">objects.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenProject.Data">
=======
        <member name="P:IO.Swagger.Model.SceneAllOf.Objects">
>>>>>>> devel
             <summary>
             Gets or Sets Objects
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProject.ToString">
=======
        <member name="M:IO.Swagger.Model.SceneAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProject.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProject.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProject.Equals(IO.Swagger.Model.OpenProject)">
             <summary>
             Returns true if OpenProject instances are equal
             </summary>
             <param name="input">Instance of OpenProject to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProject.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneAllOf.Equals(IO.Swagger.Model.SceneAllOf)">
             <summary>
             Returns true if SceneAllOf instances are equal
             </summary>
             <param name="input">Instance of SceneAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MarkersCornersRequestAllOf">
             <summary>
             MarkersCornersRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.#ctor(IO.Swagger.Model.MarkersCornersRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.Scene">
             <summary>
             Scene(id: str, name: str, desc: str = &lt;factory&gt;, modified: Union[datetime.datetime, NoneType] = None, int_modified: Union[datetime.datetime, NoneType] = None, objects: List[arcor2.data.common.SceneObject] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Scene.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Scene" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Scene.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String,System.Collections.Generic.List{IO.Swagger.Model.SceneObject})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Scene" /> class.
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="id">id (required).</param>
             <param name="intModified">intModified.</param>
             <param name="modified">modified.</param>
             <param name="name">name (required).</param>
             <param name="objects">objects.</param>
            </member>
        <member name="P:IO.Swagger.Model.Scene.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Scene.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Scene.IntModified">
             <summary>
             Gets or Sets IntModified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Scene.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Scene.Name">
             <summary>
             Gets or Sets Name
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MarkersCornersRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.Scene.Objects">
             <summary>
             Gets or Sets Objects
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Scene.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.Scene.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Scene.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.Equals(IO.Swagger.Model.MarkersCornersRequestAllOf)">
             <summary>
             Returns true if MarkersCornersRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of MarkersCornersRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Scene.Equals(IO.Swagger.Model.Scene)">
             <summary>
             Returns true if Scene instances are equal
             </summary>
             <param name="input">Instance of Scene to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Scene.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Scene.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameArgs">
             <summary>
             RenameArgs(id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.IdArgs">
             <summary>
             IdArgs(id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="newName">newName (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameArgs.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="M:IO.Swagger.Model.IdArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameArgs.NewName">
             <summary>
             Gets or Sets NewName
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.IdArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.IdArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.IdArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameArgs.Equals(IO.Swagger.Model.RenameArgs)">
             <summary>
             Returns true if RenameArgs instances are equal
             </summary>
             <param name="input">Instance of RenameArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.IdArgs.Equals(IO.Swagger.Model.IdArgs)">
             <summary>
             Returns true if IdArgs instances are equal
             </summary>
             <param name="input">Instance of IdArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.IdArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.IdArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenamePackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageResponse.Response">
=======
        <member name="T:IO.Swagger.Model.FocusObjectRequestAllOf">
             <summary>
             FocusObjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.#ctor(IO.Swagger.Model.FocusObjectRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenamePackageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageResponse.Equals(IO.Swagger.Model.RenamePackageResponse)">
             <summary>
             Returns true if RenamePackageResponse instances are equal
             </summary>
             <param name="input">Instance of RenamePackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.Equals(IO.Swagger.Model.FocusObjectRequestAllOf)">
             <summary>
             Returns true if FocusObjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of FocusObjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CopySceneRequestArgs">
             <summary>
             Args(source_id: str, target_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequestArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.NewSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneResponse.Response">
             <summary>
             Gets or Sets Response
>>>>>>> devel
             </summary>
             <param name="sourceId">sourceId (required).</param>
             <param name="targetName">targetName (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopySceneRequestArgs.SourceId">
             <summary>
             Gets or Sets SourceId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopySceneRequestArgs.TargetName">
=======
        <member name="P:IO.Swagger.Model.NewSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets TargetName
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.NewSceneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.NewSceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NewSceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.Equals(IO.Swagger.Model.CopySceneRequestArgs)">
             <summary>
             Returns true if CopySceneRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CopySceneRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewSceneResponse.Equals(IO.Swagger.Model.NewSceneResponse)">
             <summary>
             Returns true if NewSceneResponse instances are equal
             </summary>
             <param name="input">Instance of NewSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NewSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetObjectTypesRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetObjectTypesRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetObjectTypesRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.GetObjectTypesRequest.Id">
=======
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetObjectTypesRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetObjectTypesRequest.Data">
=======
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.Equals(IO.Swagger.Model.GetObjectTypesRequest)">
             <summary>
             Returns true if GetObjectTypesRequest instances are equal
             </summary>
             <param name="input">Instance of GetObjectTypesRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Equals(IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse)">
             <summary>
             Returns true if UpdateObjectPoseUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Id">
=======
        <member name="T:IO.Swagger.Model.RenameActionRequestAllOf">
>>>>>>> devel
             <summary>
             RenameActionRequestAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Messages">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequestAllOf" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Response">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.#ctor(IO.Swagger.Model.RenameActionRequestArgs,System.Boolean)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Result">
=======
        <member name="P:IO.Swagger.Model.RenameActionRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Data">
=======
        <member name="P:IO.Swagger.Model.RenameActionRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Equals(IO.Swagger.Model.AddActionPointJointsUsingRobotResponse)">
             <summary>
             Returns true if AddActionPointJointsUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of AddActionPointJointsUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.Equals(IO.Swagger.Model.RenameActionRequestAllOf)">
             <summary>
             Returns true if RenameActionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameActionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionParamValuesRequestAllOf">
             <summary>
             ActionParamValuesRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.RemoveFromSceneRequestAllOf">
             <summary>
             RemoveFromSceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.#ctor(IO.Swagger.Model.RemoveFromSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.#ctor(IO.Swagger.Model.ActionParamValuesRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequestAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequestAllOf.Args">
             <summary>
             Gets or Sets Args
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionParamValuesRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.Equals(IO.Swagger.Model.ActionParamValuesRequestAllOf)">
             <summary>
             Returns true if ActionParamValuesRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionParamValuesRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.Equals(IO.Swagger.Model.RemoveFromSceneRequestAllOf)">
             <summary>
             Returns true if RemoveFromSceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveFromSceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectPoseResponse">
=======
        <member name="T:IO.Swagger.Model.MoveToActionPointResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectPoseResponse.Id">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectPoseResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectPoseResponse.Response">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectPoseResponse.Result">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectPoseResponse.Data">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.Equals(IO.Swagger.Model.UpdateObjectPoseResponse)">
             <summary>
             Returns true if UpdateObjectPoseResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.Equals(IO.Swagger.Model.MoveToActionPointResponse)">
             <summary>
             Returns true if MoveToActionPointResponse instances are equal
             </summary>
             <param name="input">Instance of MoveToActionPointResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotJointsData">
             <summary>
             Data(robot_id: str, joints: List[arcor2.data.common.Joint])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJointsData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsData.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Joint},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJointsData" /> class.
             </summary>
             <param name="joints">joints (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotJointsData.Joints">
             <summary>
             Gets or Sets Joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotJointsData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsData.ToString">
=======
        <member name="T:IO.Swagger.Model.PackageChanged">
             <summary>
             PackageChanged(data: arcor2_execution_data.common.PackageSummary)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.PackageChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageChanged.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.#ctor(System.Nullable{IO.Swagger.Model.PackageChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.PackageSummary)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageChanged.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJointsData.ToJson">
=======
        <member name="M:IO.Swagger.Model.PackageChanged.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJointsData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PackageChanged.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJointsData.Equals(IO.Swagger.Model.RobotJointsData)">
             <summary>
             Returns true if RobotJointsData instances are equal
             </summary>
             <param name="input">Instance of RobotJointsData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PackageChanged.Equals(IO.Swagger.Model.PackageChanged)">
             <summary>
             Returns true if PackageChanged instances are equal
             </summary>
             <param name="input">Instance of PackageChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJointsData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PackageChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Pose">
             <summary>
             Pose(position: arcor2.data.common.Position = &lt;factory&gt;, orientation: arcor2.data.common.Orientation = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Pose.#ctor(IO.Swagger.Model.Orientation,IO.Swagger.Model.Position)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Pose" /> class.
=======
        <member name="T:IO.Swagger.Model.CloseSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
>>>>>>> devel
             </summary>
             <param name="orientation">orientation.</param>
             <param name="position">position.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Pose.Orientation">
             <summary>
             Gets or Sets Orientation
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Pose.Position">
             <summary>
             Gets or Sets Position
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Pose.ToString">
=======
        <member name="P:IO.Swagger.Model.CloseSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Pose.ToJson">
=======
        <member name="M:IO.Swagger.Model.CloseSceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Pose.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CloseSceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Pose.Equals(IO.Swagger.Model.Pose)">
             <summary>
             Returns true if Pose instances are equal
             </summary>
             <param name="input">Instance of Pose to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Pose.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CloseSceneResponse.Equals(IO.Swagger.Model.CloseSceneResponse)">
             <summary>
             Returns true if CloseSceneResponse instances are equal
             </summary>
             <param name="input">Instance of CloseSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Pose.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CloseSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Flow">
             <summary>
             Flow(type: arcor2.data.common.FlowTypes = &lt;FlowTypes.DEFAULT: 'default'&gt;, outputs: List[str] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.Flow.TypeEnum">
             <summary>
             Defines Type
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Flow.TypeEnum.Default">
             <summary>
             Enum Default for value: default
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Flow.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Flow.#ctor(System.Collections.Generic.List{System.String},System.Nullable{IO.Swagger.Model.Flow.TypeEnum})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Flow" /> class.
=======
        <member name="T:IO.Swagger.Model.RegisterForRobotEventRequestArgs">
             <summary>
             Args(robot_id: str, what: arcor2_arserver_data.rpc.robot.RegisterForRobotEvent.Request.Args.RegisterEnum, send: bool)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RegisterForRobotEventRequestArgs.WhatEnum">
             <summary>
             Defines What
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RegisterForRobotEventRequestArgs.WhatEnum.Eefpose">
             <summary>
             Enum Eefpose for value: eef_pose
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RegisterForRobotEventRequestArgs.WhatEnum.Joints">
             <summary>
             Enum Joints for value: joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequestArgs.What">
             <summary>
             Gets or Sets What
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="outputs">outputs.</param>
             <param name="type">type (default to TypeEnum.Default).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Flow.Outputs">
             <summary>
             Gets or Sets Outputs
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Flow.ToString">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.#ctor(System.String,System.Boolean,IO.Swagger.Model.RegisterForRobotEventRequestArgs.WhatEnum)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequestArgs" /> class.
             </summary>
             <param name="robotId">robotId (required).</param>
             <param name="send">send (required).</param>
             <param name="what">what (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequestArgs.Send">
             <summary>
             Gets or Sets Send
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Flow.ToJson">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Flow.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Flow.Equals(IO.Swagger.Model.Flow)">
             <summary>
             Returns true if Flow instances are equal
             </summary>
             <param name="input">Instance of Flow to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Flow.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.Equals(IO.Swagger.Model.RegisterForRobotEventRequestArgs)">
             <summary>
             Returns true if RegisterForRobotEventRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RegisterForRobotEventRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Flow.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointRequestAllOf">
             <summary>
             AddActionPointRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.#ctor(IO.Swagger.Model.AddActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointParentRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointParent.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointParentRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointRequestAllOf.DryRun">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.Equals(IO.Swagger.Model.AddActionPointRequestAllOf)">
             <summary>
             Returns true if AddActionPointRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddActionPointRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.Equals(IO.Swagger.Model.UpdateActionPointParentRequest)">
             <summary>
             Returns true if UpdateActionPointParentRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointParentRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OpenProjectData">
             <summary>
             Data(scene: arcor2.data.common.Scene, project: arcor2.data.common.Project)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectData.#ctor(IO.Swagger.Model.Project,IO.Swagger.Model.Scene)">
=======
        <member name="T:IO.Swagger.Model.AddActionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddAction.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequest.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectData" /> class.
             </summary>
             <param name="project">project (required).</param>
             <param name="scene">scene (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenProjectData.Project">
=======
        <member name="P:IO.Swagger.Model.AddActionRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Project
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenProjectData.Scene">
             <summary>
             Gets or Sets Scene
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectData.ToString">
=======
        <member name="P:IO.Swagger.Model.AddActionRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectData.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectData.Equals(IO.Swagger.Model.OpenProjectData)">
             <summary>
             Returns true if OpenProjectData instances are equal
             </summary>
             <param name="input">Instance of OpenProjectData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionRequest.Equals(IO.Swagger.Model.AddActionRequest)">
             <summary>
             Returns true if AddActionRequest instances are equal
             </summary>
             <param name="input">Instance of AddActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddOverrideRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.AddOverride.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddOverrideRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddOverrideRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddOverrideRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddOverrideRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddOverrideRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequest.ToString">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf">
             <summary>
             RobotMoveToActionPointOrientationDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.#ctor(System.String,System.String,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="message">message.</param>
             <param name="orientationId">orientationId (required).</param>
             <param name="safe">safe (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequest.Equals(IO.Swagger.Model.AddOverrideRequest)">
             <summary>
             Returns true if AddOverrideRequest instances are equal
             </summary>
             <param name="input">Instance of AddOverrideRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.Equals(IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf)">
             <summary>
             Returns true if RobotMoveToActionPointOrientationDataAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointOrientationDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MoveToPoseRequestArgs">
             <summary>
             Args(robot_id: str, end_effector_id: str, speed: float, position: Union[arcor2.data.common.Position, NoneType], orientation: Union[arcor2.data.common.Orientation, NoneType], safe: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.#ctor(System.String,IO.Swagger.Model.Orientation,IO.Swagger.Model.Position,System.String,System.Boolean,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequestArgs" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="orientation">orientation.</param>
             <param name="position">position.</param>
             <param name="robotId">robotId (required).</param>
             <param name="safe">safe (default to true).</param>
             <param name="speed">speed (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.Orientation">
             <summary>
             Gets or Sets Orientation
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.Position">
             <summary>
             Gets or Sets Position
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.Speed">
             <summary>
             Gets or Sets Speed
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.RenameActionPointRequestArgs">
             <summary>
             Args(action_point_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="newName">newName (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.Equals(IO.Swagger.Model.MoveToPoseRequestArgs)">
             <summary>
             Returns true if MoveToPoseRequestArgs instances are equal
             </summary>
             <param name="input">Instance of MoveToPoseRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.Equals(IO.Swagger.Model.RenameActionPointRequestArgs)">
             <summary>
             Returns true if RenameActionPointRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MoveToPoseResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseResponse.Id">
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointPositionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointPosition.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointPositionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MoveToPoseResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.Equals(IO.Swagger.Model.MoveToPoseResponse)">
             <summary>
             Returns true if MoveToPoseResponse instances are equal
             </summary>
             <param name="input">Instance of MoveToPoseResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.Equals(IO.Swagger.Model.UpdateActionPointPositionRequest)">
             <summary>
             Returns true if UpdateActionPointPositionRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointPositionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeleteObjectTypeResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.ToString">
=======
        <member name="T:IO.Swagger.Model.GetSuctionsRequestArgs">
             <summary>
             Args(robot_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequestArgs" /> class.
             </summary>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetSuctionsRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.Equals(IO.Swagger.Model.DeleteObjectTypeResponse)">
             <summary>
             Returns true if DeleteObjectTypeResponse instances are equal
             </summary>
             <param name="input">Instance of DeleteObjectTypeResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.Equals(IO.Swagger.Model.GetSuctionsRequestArgs)">
             <summary>
             Returns true if GetSuctionsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetSuctionsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointOrientationRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddActionPointOrientation.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequest.Id">
=======
        <member name="T:IO.Swagger.Model.StartSceneRequest">
             <summary>
             Request(id: int, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StartSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneRequest.#ctor(System.Int32,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StartSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequest.Request">
=======
        <member name="P:IO.Swagger.Model.StartSceneRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.StartSceneRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.StartSceneRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.StartSceneRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.StartSceneRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.Equals(IO.Swagger.Model.AddActionPointOrientationRequest)">
             <summary>
             Returns true if AddActionPointOrientationRequest instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.StartSceneRequest.Equals(IO.Swagger.Model.StartSceneRequest)">
             <summary>
             Returns true if StartSceneRequest instances are equal
             </summary>
             <param name="input">Instance of StartSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.StartSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OpenSceneAllOf">
             <summary>
             OpenSceneAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.#ctor(IO.Swagger.Model.OpenSceneData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenSceneAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs">
             <summary>
             Args(project_id: str, new_has_logic: bool)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.#ctor(System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs" /> class.
             </summary>
             <param name="newHasLogic">newHasLogic (required).</param>
             <param name="projectId">projectId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.NewHasLogic">
             <summary>
             Gets or Sets NewHasLogic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.ProjectId">
             <summary>
             Gets or Sets ProjectId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.Equals(IO.Swagger.Model.OpenSceneAllOf)">
             <summary>
             Returns true if OpenSceneAllOf instances are equal
             </summary>
             <param name="input">Instance of OpenSceneAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.Equals(IO.Swagger.Model.UpdateProjectHasLogicRequestArgs)">
             <summary>
             Returns true if UpdateProjectHasLogicRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectHasLogicRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.BuildProjectRequest">
             <summary>
             Calls Build service to generate execution package and uploads it to         the Execution service.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.BuildProjectRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectRequest.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="T:IO.Swagger.Model.GetEndEffectorsRequestArgs">
             <summary>
             Args(robot_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="robotId">robotId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BuildProjectRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.GetEndEffectorsRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequest.Equals(IO.Swagger.Model.BuildProjectRequest)">
             <summary>
             Returns true if BuildProjectRequest instances are equal
             </summary>
             <param name="input">Instance of BuildProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.Equals(IO.Swagger.Model.GetEndEffectorsRequestArgs)">
             <summary>
             Returns true if GetEndEffectorsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CameraColorImageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
=======
        <member name="T:IO.Swagger.Model.RenameActionPointJointsRequestArgs">
             <summary>
             Args(joints_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequestArgs" /> class.
             </summary>
             <param name="jointsId">jointsId (required).</param>
             <param name="newName">newName (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequestArgs.JointsId">
             <summary>
             Gets or Sets JointsId
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.Equals(System.Object)">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.Equals(IO.Swagger.Model.CameraColorImageResponse)">
             <summary>
             Returns true if CameraColorImageResponse instances are equal
             </summary>
             <param name="input">Instance of CameraColorImageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.Equals(IO.Swagger.Model.RenameActionPointJointsRequestArgs)">
             <summary>
             Returns true if RenameActionPointJointsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointJointsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameObjectRequestAllOf">
             <summary>
             RenameObjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.#ctor(IO.Swagger.Model.RenameArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateOverrideResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideResponse.Response">
             <summary>
             Gets or Sets Response
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameObjectRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectRequestAllOf.DryRun">
=======
        <member name="P:IO.Swagger.Model.UpdateOverrideResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.Equals(IO.Swagger.Model.RenameObjectRequestAllOf)">
             <summary>
             Returns true if RenameObjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameObjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.Equals(IO.Swagger.Model.UpdateOverrideResponse)">
             <summary>
             Returns true if UpdateOverrideResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateOverrideResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetSuctionsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.GetSuctions.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetSuctionsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.GetCameraPoseRequestArgs">
             <summary>
             Args(camera_parameters: arcor2.data.camera.CameraParameters, image: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequestArgs" /> class.
>>>>>>> devel
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetSuctionsRequest.Id">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.#ctor(IO.Swagger.Model.CameraParameters,System.String)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequestArgs" /> class.
             </summary>
             <param name="cameraParameters">cameraParameters (required).</param>
             <param name="image">Base64 encoded image. (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetSuctionsRequest.Request">
=======
        <member name="P:IO.Swagger.Model.GetCameraPoseRequestArgs.CameraParameters">
>>>>>>> devel
             <summary>
             Gets or Sets CameraParameters
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetSuctionsRequest.Args">
=======
        <member name="P:IO.Swagger.Model.GetCameraPoseRequestArgs.Image">
>>>>>>> devel
             <summary>
             Base64 encoded image.
             </summary>
             <value>Base64 encoded image.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.Equals(IO.Swagger.Model.GetSuctionsRequest)">
             <summary>
             Returns true if GetSuctionsRequest instances are equal
             </summary>
             <param name="input">Instance of GetSuctionsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.Equals(IO.Swagger.Model.GetCameraPoseRequestArgs)">
             <summary>
             Returns true if GetCameraPoseRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetCameraPoseRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Mesh">
             <summary>
             Mesh(id: str, uri: str, focus_points: Union[List[arcor2.data.common.Pose], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Mesh.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Mesh" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Mesh.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Pose},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Mesh" /> class.
=======
        <member name="T:IO.Swagger.Model.RobotEef">
             <summary>
             RobotEef(data: arcor2_arserver_data.events.robot.RobotEef.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotEef.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotEef.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotEef.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotEef.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="focusPoints">focusPoints.</param>
             <param name="uri">uri (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Mesh.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Mesh.FocusPoints">
             <summary>
             Gets or Sets FocusPoints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Mesh.Uri">
             <summary>
             Gets or Sets Uri
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Mesh.ToString">
=======
        <member name="F:IO.Swagger.Model.RobotEef.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotEef.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEef.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEef" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEef.#ctor(System.Nullable{IO.Swagger.Model.RobotEef.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotEefData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEef" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotEef.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotEef.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotEef.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEef.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Mesh.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotEef.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Mesh.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotEef.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Mesh.Equals(IO.Swagger.Model.Mesh)">
             <summary>
             Returns true if Mesh instances are equal
             </summary>
             <param name="input">Instance of Mesh to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Mesh.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotEef.Equals(IO.Swagger.Model.RobotEef)">
             <summary>
             Returns true if RobotEef instances are equal
             </summary>
             <param name="input">Instance of RobotEef to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotEef.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Mesh.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotEef.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateLogicItemRequestAllOf">
             <summary>
             UpdateLogicItemRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.#ctor(IO.Swagger.Model.UpdateLogicItemRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.RunPackageRequestAllOf">
             <summary>
             RunPackageRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.#ctor(IO.Swagger.Model.RunPackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.Equals(IO.Swagger.Model.UpdateLogicItemRequestAllOf)">
             <summary>
             Returns true if UpdateLogicItemRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateLogicItemRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.Equals(IO.Swagger.Model.RunPackageRequestAllOf)">
             <summary>
             Returns true if RunPackageRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RunPackageRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ListScenesResponseAllOf">
             <summary>
             ListScenesResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ListScenesResponseData})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.ToJson">
=======
        <member name="T:IO.Swagger.Model.CalibrateRobotResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotResponse" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.Equals(IO.Swagger.Model.ListScenesResponseAllOf)">
             <summary>
             Returns true if ListScenesResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of ListScenesResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="P:IO.Swagger.Model.CalibrateRobotResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveFromSceneRequestAllOf">
             <summary>
             RemoveFromSceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.#ctor(IO.Swagger.Model.RemoveFromSceneRequestArgs,System.Boolean)">
=======
        <member name="P:IO.Swagger.Model.CalibrateRobotResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotResponse.Data">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.Equals(IO.Swagger.Model.RemoveFromSceneRequestAllOf)">
             <summary>
             Returns true if RemoveFromSceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveFromSceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.Equals(IO.Swagger.Model.CalibrateRobotResponse)">
             <summary>
             Returns true if CalibrateRobotResponse instances are equal
             </summary>
             <param name="input">Instance of CalibrateRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToPoseDataAllOf">
             <summary>
             RobotMoveToPoseDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseDataAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.#ctor(System.String,System.String,System.Boolean,IO.Swagger.Model.Pose)">
=======
        <member name="T:IO.Swagger.Model.AddOverrideResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.AddOverrideResponse.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseDataAllOf" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
             <param name="targetPose">targetPose (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToPoseDataAllOf.EndEffectorId">
=======
        <member name="P:IO.Swagger.Model.AddOverrideResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToPoseDataAllOf.Message">
=======
        <member name="P:IO.Swagger.Model.AddOverrideResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Message
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToPoseDataAllOf.Safe">
=======
        <member name="P:IO.Swagger.Model.AddOverrideResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToPoseDataAllOf.TargetPose">
=======
        <member name="P:IO.Swagger.Model.AddOverrideResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets TargetPose
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.AddOverrideResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddOverrideResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddOverrideResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.Equals(IO.Swagger.Model.RobotMoveToPoseDataAllOf)">
             <summary>
             Returns true if RobotMoveToPoseDataAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToPoseDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddOverrideResponse.Equals(IO.Swagger.Model.AddOverrideResponse)">
             <summary>
             Returns true if AddOverrideResponse instances are equal
             </summary>
             <param name="input">Instance of AddOverrideResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddOverrideResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.FunctionReturns">
             <summary>
             FunctionReturns(type: str, link: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FunctionReturns.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FunctionReturns" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FunctionReturns.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FunctionReturns" /> class.
=======
        <member name="T:IO.Swagger.Model.GetObjectTypesResponseAllOf">
             <summary>
             GetObjectTypesResponseAllOf
>>>>>>> devel
             </summary>
             <param name="link">link (required).</param>
             <param name="type">type (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FunctionReturns.Link">
             <summary>
             Gets or Sets Link
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ObjectTypeMeta})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetObjectTypesResponseAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FunctionReturns.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FunctionReturns.ToString">
=======
        <member name="P:IO.Swagger.Model.GetObjectTypesResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FunctionReturns.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FunctionReturns.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FunctionReturns.Equals(IO.Swagger.Model.FunctionReturns)">
             <summary>
             Returns true if FunctionReturns instances are equal
             </summary>
             <param name="input">Instance of FunctionReturns to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FunctionReturns.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.Equals(IO.Swagger.Model.GetObjectTypesResponseAllOf)">
             <summary>
             Returns true if GetObjectTypesResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of GetObjectTypesResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FunctionReturns.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionExecutionAllOf">
             <summary>
             ActionExecutionAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionExecutionAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.#ctor(IO.Swagger.Model.ActionExecutionData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionExecutionAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.ListProjectsResponseDataAllOf">
             <summary>
             ListProjectsResponseDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponseDataAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.#ctor(System.Boolean,System.DateTime,System.Collections.Generic.List{System.String},System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponseDataAllOf" /> class.
             </summary>
             <param name="executable">Logic is defined and valid. (default to false).</param>
             <param name="modified">modified.</param>
             <param name="problems">problems.</param>
             <param name="sceneId">sceneId (required).</param>
             <param name="valid">Objects and their actions exists. (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseDataAllOf.Executable">
             <summary>
             Logic is defined and valid.
             </summary>
             <value>Logic is defined and valid.</value>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseDataAllOf.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseDataAllOf.Problems">
             <summary>
             Gets or Sets Problems
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseDataAllOf.SceneId">
             <summary>
             Gets or Sets SceneId
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionExecutionAllOf.Data">
=======
        <member name="P:IO.Swagger.Model.ListProjectsResponseDataAllOf.Valid">
>>>>>>> devel
             <summary>
             Objects and their actions exists.
             </summary>
             <value>Objects and their actions exists.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.Equals(IO.Swagger.Model.ActionExecutionAllOf)">
             <summary>
             Returns true if ActionExecutionAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionExecutionAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.Equals(IO.Swagger.Model.ListProjectsResponseDataAllOf)">
             <summary>
             Returns true if ListProjectsResponseDataAllOf instances are equal
             </summary>
             <param name="input">Instance of ListProjectsResponseDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.HandTeachingModeRequestAllOf">
             <summary>
             HandTeachingModeRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.#ctor(IO.Swagger.Model.HandTeachingModeRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeRequestAllOf.Args">
             <summary>
             Gets or Sets Args
=======
        <member name="T:IO.Swagger.Model.RenameActionPointOrientationRequestArgs">
             <summary>
             Args(orientation_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="newName">newName (required).</param>
             <param name="orientationId">orientationId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.HandTeachingModeRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.Equals(IO.Swagger.Model.HandTeachingModeRequestAllOf)">
             <summary>
             Returns true if HandTeachingModeRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.Equals(IO.Swagger.Model.RenameActionPointOrientationRequestArgs)">
             <summary>
             Returns true if RenameActionPointOrientationRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointOrientationRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectsWithSceneRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectsWithSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectsWithSceneRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf">
             <summary>
             RemoveActionPointJointsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.#ctor(IO.Swagger.Model.RemoveActionPointJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectsWithSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectsWithSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectsWithSceneRequest.Args">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.Equals(IO.Swagger.Model.ProjectsWithSceneRequest)">
             <summary>
             Returns true if ProjectsWithSceneRequest instances are equal
             </summary>
             <param name="input">Instance of ProjectsWithSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.Equals(IO.Swagger.Model.RemoveActionPointJointsRequestAllOf)">
             <summary>
             Returns true if RemoveActionPointJointsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointJointsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ListProjectsResponseData">
             <summary>
             Data(id: str, name: str, desc: Union[str, NoneType], scene_id: str, valid: bool = False, executable: bool = False, problems: List[str] = &lt;factory&gt;, modified: Union[datetime.datetime, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.#ctor">
=======
        <member name="T:IO.Swagger.Model.ProjectChanged">
             <summary>
             ProjectChanged(data: arcor2.data.common.BareProject)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ProjectChanged.ChangeTypeEnum">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponseData" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.#ctor(System.String,System.String,System.String,System.Boolean,System.DateTime,System.Collections.Generic.List{System.String},System.String,System.Boolean)">
=======
        <member name="F:IO.Swagger.Model.ProjectChanged.ChangeTypeEnum.Add">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponseData" /> class.
             </summary>
             <param name="desc">desc.</param>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="executable">Logic is defined and valid. (default to false).</param>
             <param name="modified">modified.</param>
             <param name="problems">problems.</param>
             <param name="sceneId">sceneId (required).</param>
             <param name="valid">Objects and their actions exists. (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Desc">
=======
        <member name="F:IO.Swagger.Model.ProjectChanged.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Id">
=======
        <member name="F:IO.Swagger.Model.ProjectChanged.ChangeTypeEnum.Remove">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Name">
=======
        <member name="F:IO.Swagger.Model.ProjectChanged.ChangeTypeEnum.Updatebase">
>>>>>>> devel
             <summary>
             Gets or Sets Name
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Executable">
=======
        <member name="P:IO.Swagger.Model.ProjectChanged.ChangeType">
>>>>>>> devel
             <summary>
             Logic is defined and valid.
             </summary>
             <value>Logic is defined and valid.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Problems">
=======
        <member name="M:IO.Swagger.Model.ProjectChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChanged.#ctor(System.Nullable{IO.Swagger.Model.ProjectChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.BareProject)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectChanged.Event">
>>>>>>> devel
             <summary>
             Gets or Sets Problems
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.SceneId">
=======
        <member name="P:IO.Swagger.Model.ProjectChanged.ParentId">
>>>>>>> devel
             <summary>
             Gets or Sets SceneId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Valid">
=======
        <member name="P:IO.Swagger.Model.ProjectChanged.Data">
>>>>>>> devel
             <summary>
             Objects and their actions exists.
             </summary>
             <value>Objects and their actions exists.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.ToString">
=======
        <member name="M:IO.Swagger.Model.ProjectChanged.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectChanged.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectChanged.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.Equals(IO.Swagger.Model.ListProjectsResponseData)">
             <summary>
             Returns true if ListProjectsResponseData instances are equal
             </summary>
             <param name="input">Instance of ListProjectsResponseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectChanged.Equals(IO.Swagger.Model.ProjectChanged)">
             <summary>
             Returns true if ProjectChanged instances are equal
             </summary>
             <param name="input">Instance of ProjectChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChanged.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetRobotMetaResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_arserver_data.robot.RobotMeta], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.#ctor">
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf">
             <summary>
             UpdateActionPointJointsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointJointsRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointJointsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotMetaResponse" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.RobotMeta})">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotMetaResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetRobotMetaResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotMetaResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotMetaResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotMetaResponse.Result">
             <summary>
             Gets or Sets Result
=======
        <member name="T:IO.Swagger.Model.GetGrippersRequestAllOf">
             <summary>
             GetGrippersRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.#ctor(IO.Swagger.Model.GetGrippersRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetRobotMetaResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.GetGrippersRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.Equals(IO.Swagger.Model.GetRobotMetaResponse)">
             <summary>
             Returns true if GetRobotMetaResponse instances are equal
             </summary>
             <param name="input">Instance of GetRobotMetaResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.Equals(IO.Swagger.Model.GetGrippersRequestAllOf)">
             <summary>
             Returns true if GetGrippersRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetGrippersRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SystemInfoResponseAllOf">
             <summary>
             SystemInfoResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.#ctor(IO.Swagger.Model.SystemInfoResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.SceneObjectOverride">
             <summary>
             SceneObjectOverride(id: str, parameters: List[arcor2.data.common.Parameter])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectOverride.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectOverride" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectOverride.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Parameter})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectOverride" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="parameters">parameters (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectOverride.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectOverride.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectOverride.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneObjectOverride.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneObjectOverride.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.Equals(IO.Swagger.Model.SystemInfoResponseAllOf)">
             <summary>
             Returns true if SystemInfoResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of SystemInfoResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneObjectOverride.Equals(IO.Swagger.Model.SceneObjectOverride)">
             <summary>
             Returns true if SceneObjectOverride instances are equal
             </summary>
             <param name="input">Instance of SceneObjectOverride to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectOverride.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneObjectOverride.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameActionPointOrientationResponse">
=======
        <member name="T:IO.Swagger.Model.RunPackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.Equals(IO.Swagger.Model.RunPackageResponse)">
             <summary>
             Returns true if RunPackageResponse instances are equal
             </summary>
             <param name="input">Instance of RunPackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.CopySceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationResponse.Id">
=======
        <member name="P:IO.Swagger.Model.CopySceneResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.CopySceneResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationResponse.Response">
=======
        <member name="P:IO.Swagger.Model.CopySceneResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationResponse.Result">
=======
        <member name="P:IO.Swagger.Model.CopySceneResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationResponse.Data">
=======
        <member name="P:IO.Swagger.Model.CopySceneResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.CopySceneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.CopySceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CopySceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.Equals(IO.Swagger.Model.RenameActionPointOrientationResponse)">
             <summary>
             Returns true if RenameActionPointOrientationResponse instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointOrientationResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CopySceneResponse.Equals(IO.Swagger.Model.CopySceneResponse)">
             <summary>
             Returns true if CopySceneResponse instances are equal
             </summary>
             <param name="input">Instance of CopySceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CopySceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionRequestAllOf">
             <summary>
             AddActionRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.#ctor(IO.Swagger.Model.AddActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestAllOf.DryRun">
=======
        <member name="T:IO.Swagger.Model.CopyProjectRequestAllOf">
             <summary>
             CopyProjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.#ctor(IO.Swagger.Model.CopyProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.Equals(IO.Swagger.Model.AddActionRequestAllOf)">
             <summary>
             Returns true if AddActionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddActionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.Equals(IO.Swagger.Model.CopyProjectRequestAllOf)">
             <summary>
             Returns true if CopyProjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CopyProjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CopyProjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CopyProjectRequestArgs">
             <summary>
             Args(source_id: str, target_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.#ctor">
=======
        <member name="T:IO.Swagger.Model.ListPackagesRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListPackagesRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListPackagesRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesRequest.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequestArgs" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequestArgs" /> class.
             </summary>
             <param name="sourceId">sourceId (required).</param>
             <param name="targetName">targetName (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequestArgs.SourceId">
             <summary>
             Gets or Sets SourceId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequestArgs.TargetName">
             <summary>
             Gets or Sets TargetName
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.ListPackagesRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.ListPackagesRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ListPackagesRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.Equals(IO.Swagger.Model.CopyProjectRequestArgs)">
             <summary>
             Returns true if CopyProjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CopyProjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ListPackagesRequest.Equals(IO.Swagger.Model.ListPackagesRequest)">
             <summary>
             Returns true if ListPackagesRequest instances are equal
             </summary>
             <param name="input">Instance of ListPackagesRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ListPackagesRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectConstantChangedAllOf">
             <summary>
             ProjectConstantChangedAllOf
=======
        <member name="T:IO.Swagger.Model.AddActionPointResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstantChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.#ctor(IO.Swagger.Model.ProjectConstant)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstantChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstantChangedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.AddActionPointResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.Equals(IO.Swagger.Model.ProjectConstantChangedAllOf)">
             <summary>
             Returns true if ProjectConstantChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of ProjectConstantChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointResponse.Equals(IO.Swagger.Model.AddActionPointResponse)">
             <summary>
             Returns true if AddActionPointResponse instances are equal
             </summary>
             <param name="input">Instance of AddActionPointResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionResultAllOf">
=======
        <member name="T:IO.Swagger.Model.UpdateProjectHasLogicResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicResponse.Messages">
>>>>>>> devel
             <summary>
             ActionResultAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionResultAllOf.#ctor">
=======
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicResponse.Response">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResultAllOf" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionResultAllOf.#ctor(IO.Swagger.Model.ActionResultData)">
=======
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicResponse.Result">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResultAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionResultAllOf.Data">
=======
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionResultAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionResultAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionResultAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionResultAllOf.Equals(IO.Swagger.Model.ActionResultAllOf)">
             <summary>
             Returns true if ActionResultAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionResultAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.Equals(IO.Swagger.Model.UpdateProjectHasLogicResponse)">
             <summary>
             Returns true if UpdateProjectHasLogicResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectHasLogicResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionResultAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ListProjectsResponseAllOf">
             <summary>
             ListProjectsResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ListProjectsResponseData})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.Equals(IO.Swagger.Model.ListProjectsResponseAllOf)">
             <summary>
             Returns true if ListProjectsResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of ListProjectsResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetGrippersRequestAllOf">
             <summary>
             GetGrippersRequestAllOf
=======
        <member name="T:IO.Swagger.Model.GetObjectTypesResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_arserver_data.objects.ObjectTypeMeta], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetObjectTypesResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.ObjectTypeMeta})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetObjectTypesResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.#ctor(IO.Swagger.Model.GetGrippersRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetGrippersRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.GetObjectTypesResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetObjectTypesResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetObjectTypesResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetObjectTypesResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetObjectTypesResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.Equals(IO.Swagger.Model.GetGrippersRequestAllOf)">
             <summary>
             Returns true if GetGrippersRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetGrippersRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.Equals(IO.Swagger.Model.GetObjectTypesResponse)">
             <summary>
             Returns true if GetObjectTypesResponse instances are equal
             </summary>
             <param name="input">Instance of GetObjectTypesResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsRequestArgs">
             <summary>
             Args(joints_id: str, joints: List[arcor2.data.common.Joint])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Joint},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsRequestArgs" /> class.
             </summary>
             <param name="joints">joints (required).</param>
             <param name="jointsId">jointsId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.Joints">
             <summary>
             Gets or Sets Joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.JointsId">
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.CopyActionPointRequestAllOf">
             <summary>
             CopyActionPointRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.#ctor(IO.Swagger.Model.CopyActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointJointsRequestArgs)">
             <summary>
             Returns true if UpdateActionPointJointsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.Equals(IO.Swagger.Model.CopyActionPointRequestAllOf)">
             <summary>
             Returns true if CopyActionPointRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CopyActionPointRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CopyActionPointRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Project">
             <summary>
             Project(id: str, name: str, scene_id: str, desc: str = &lt;factory&gt;, has_logic: bool = True, modified: Union[datetime.datetime, NoneType] = None, int_modified: Union[datetime.datetime, NoneType] = None, action_points: List[arcor2.data.common.ActionPoint] = &lt;factory&gt;, constants: List[arcor2.data.common.ProjectConstant] = &lt;factory&gt;, functions: List[arcor2.data.common.ProjectFunction] = &lt;factory&gt;, logic: List[arcor2.data.common.LogicItem] = &lt;factory&gt;, object_overrides: List[arcor2.data.common.SceneObjectOverride] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Project.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Project" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Project.#ctor(System.String,System.Boolean,System.String,System.DateTime,System.DateTime,System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.ActionPoint},System.Collections.Generic.List{IO.Swagger.Model.ProjectConstant},System.Collections.Generic.List{IO.Swagger.Model.ProjectFunction},System.Collections.Generic.List{IO.Swagger.Model.LogicItem},System.Collections.Generic.List{IO.Swagger.Model.SceneObjectOverride})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Project" /> class.
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="hasLogic">hasLogic (default to true).</param>
             <param name="id">id (required).</param>
             <param name="intModified">intModified.</param>
             <param name="modified">modified.</param>
             <param name="name">name (required).</param>
             <param name="sceneId">sceneId (required).</param>
             <param name="actionPoints">actionPoints.</param>
             <param name="constants">constants.</param>
             <param name="functions">functions.</param>
             <param name="logic">logic.</param>
             <param name="objectOverrides">objectOverrides.</param>
            </member>
        <member name="P:IO.Swagger.Model.Project.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.HasLogic">
             <summary>
             Gets or Sets HasLogic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.IntModified">
=======
        <member name="T:IO.Swagger.Model.DeleteProjectRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteProjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteProjectRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteProjectRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteProjectRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteProjectRequest.ToString">
>>>>>>> devel
             <summary>
             Gets or Sets IntModified
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Project.Modified">
=======
        <member name="M:IO.Swagger.Model.DeleteProjectRequest.ToJson">
>>>>>>> devel
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Project.Name">
=======
        <member name="M:IO.Swagger.Model.DeleteProjectRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Gets or Sets Name
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Project.SceneId">
             <summary>
             Gets or Sets SceneId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.ActionPoints">
=======
        <member name="M:IO.Swagger.Model.DeleteProjectRequest.Equals(IO.Swagger.Model.DeleteProjectRequest)">
             <summary>
             Returns true if DeleteProjectRequest instances are equal
             </summary>
             <param name="input">Instance of DeleteProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteProjectRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets ActionPoints
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Project.Constants">
=======
        <member name="M:IO.Swagger.Model.DeleteProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Gets or Sets Constants
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Project.Functions">
             <summary>
             Gets or Sets Functions
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.Logic">
             <summary>
             Gets or Sets Logic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.ObjectOverrides">
             <summary>
             Gets or Sets ObjectOverrides
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Project.ToString">
=======
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf">
             <summary>
             UpdateObjectPoseUsingRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Project.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Project.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Project.Equals(IO.Swagger.Model.Project)">
             <summary>
             Returns true if Project instances are equal
             </summary>
             <param name="input">Instance of Project to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Project.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.Equals(IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf)">
             <summary>
             Returns true if UpdateObjectPoseUsingRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Project.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateLogicItemRequestArgs">
             <summary>
             Args(logic_item_id: str, start: str, end: str, condition: Union[arcor2.data.common.ProjectLogicIf, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.#ctor(IO.Swagger.Model.ProjectLogicIf,System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequestArgs" /> class.
             </summary>
             <param name="condition">condition.</param>
             <param name="end">end (required).</param>
             <param name="logicItemId">logicItemId (required).</param>
             <param name="start">start (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestArgs.Condition">
=======
        <member name="T:IO.Swagger.Model.StartSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StartSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StartSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Condition
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestArgs.End">
             <summary>
             Gets or Sets End
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestArgs.LogicItemId">
             <summary>
             Gets or Sets LogicItemId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestArgs.Start">
             <summary>
             Gets or Sets Start
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.StartSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.StartSceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.StartSceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.Equals(IO.Swagger.Model.UpdateLogicItemRequestArgs)">
             <summary>
             Returns true if UpdateLogicItemRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateLogicItemRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.StartSceneResponse.Equals(IO.Swagger.Model.StartSceneResponse)">
             <summary>
             Returns true if StartSceneResponse instances are equal
             </summary>
             <param name="input">Instance of StartSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.StartSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CloseProjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.ListProjectsResponseAllOf">
             <summary>
             ListProjectsResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ListProjectsResponseData})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponseAllOf" /> class.
>>>>>>> devel
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectResponse.Data">
=======
        <member name="P:IO.Swagger.Model.ListProjectsResponseAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectResponse.Equals(IO.Swagger.Model.CloseProjectResponse)">
             <summary>
             Returns true if CloseProjectResponse instances are equal
             </summary>
             <param name="input">Instance of CloseProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.Equals(IO.Swagger.Model.ListProjectsResponseAllOf)">
             <summary>
             Returns true if ListProjectsResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of ListProjectsResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ListProjectsResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotJointsAllOf">
             <summary>
             RobotJointsAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJointsAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.#ctor(IO.Swagger.Model.RobotJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJointsAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateActionRequestArgs">
             <summary>
             Args(action_id: str, parameters: Union[List[arcor2.data.common.ActionParameter], NoneType] = None, flows: Union[List[arcor2.data.common.Flow], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Flow},System.Collections.Generic.List{IO.Swagger.Model.ActionParameter})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequestArgs" /> class.
             </summary>
             <param name="actionId">actionId (required).</param>
             <param name="flows">flows.</param>
             <param name="parameters">parameters.</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionRequestArgs.ActionId">
             <summary>
             Gets or Sets ActionId
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotJointsAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateActionRequestArgs.Flows">
             <summary>
             Gets or Sets Flows
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionRequestArgs.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.Equals(IO.Swagger.Model.RobotJointsAllOf)">
             <summary>
             Returns true if RobotJointsAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotJointsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.Equals(IO.Swagger.Model.UpdateActionRequestArgs)">
             <summary>
             Returns true if UpdateActionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ExecuteActionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionResponse.Response">
             <summary>
             Gets or Sets Response
=======
        <member name="T:IO.Swagger.Model.CameraColorParametersRequestArgs">
             <summary>
             Args(id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="id">Camera id. (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ExecuteActionResponse.Result">
             <summary>
             Gets or Sets Result
=======
        <member name="P:IO.Swagger.Model.CameraColorParametersRequestArgs.Id">
             <summary>
             Camera id.
>>>>>>> devel
             </summary>
             <value>Camera id.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ExecuteActionResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.Equals(IO.Swagger.Model.ExecuteActionResponse)">
             <summary>
             Returns true if ExecuteActionResponse instances are equal
             </summary>
             <param name="input">Instance of ExecuteActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.Equals(IO.Swagger.Model.CameraColorParametersRequestArgs)">
             <summary>
             Returns true if CameraColorParametersRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CameraColorParametersRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetObjectTypesResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_arserver_data.objects.ObjectTypeMeta], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetObjectTypesResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.ObjectTypeMeta})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetObjectTypesResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.StopSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopSceneResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
<<<<<<< HEAD
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetObjectTypesResponse.Id">
=======
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.StopSceneResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetObjectTypesResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.StopSceneResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetObjectTypesResponse.Response">
=======
        <member name="P:IO.Swagger.Model.StopSceneResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetObjectTypesResponse.Result">
=======
        <member name="P:IO.Swagger.Model.StopSceneResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetObjectTypesResponse.Data">
=======
        <member name="P:IO.Swagger.Model.StopSceneResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.StopSceneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.StopSceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.StopSceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.Equals(IO.Swagger.Model.GetObjectTypesResponse)">
             <summary>
             Returns true if GetObjectTypesResponse instances are equal
             </summary>
             <param name="input">Instance of GetObjectTypesResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.StopSceneResponse.Equals(IO.Swagger.Model.StopSceneResponse)">
             <summary>
             Returns true if StopSceneResponse instances are equal
             </summary>
             <param name="input">Instance of StopSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.StopSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RegisterForRobotEventResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventResponse.Id">
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointJointsUsingRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RegisterForRobotEventResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.Equals(IO.Swagger.Model.RegisterForRobotEventResponse)">
             <summary>
             Returns true if RegisterForRobotEventResponse instances are equal
             </summary>
             <param name="input">Instance of RegisterForRobotEventResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.Equals(IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest)">
             <summary>
             Returns true if UpdateActionPointJointsUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf">
             <summary>
             RobotMoveToActionPointOrientationDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.#ctor(System.String,System.String,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="message">message.</param>
             <param name="orientationId">orientationId (required).</param>
             <param name="safe">safe (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.SceneClosed">
             <summary>
             SceneClosed()
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneClosed.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneClosed.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneClosed.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneClosed.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneClosed.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneClosed.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneClosed.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneClosed" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneClosed.#ctor(System.Nullable{IO.Swagger.Model.SceneClosed.ChangeTypeEnum},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneClosed" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneClosed.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneClosed.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneClosed.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneClosed.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneClosed.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneClosed.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.Equals(IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf)">
             <summary>
             Returns true if RobotMoveToActionPointOrientationDataAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointOrientationDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneClosed.Equals(IO.Swagger.Model.SceneClosed)">
             <summary>
             Returns true if SceneClosed instances are equal
             </summary>
             <param name="input">Instance of SceneClosed to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneClosed.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneClosed.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointOrientationResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.AddActionRequestAllOf">
             <summary>
             AddActionRequestAllOf
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointOrientationResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.#ctor(IO.Swagger.Model.AddActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.Equals(IO.Swagger.Model.AddActionPointOrientationResponse)">
             <summary>
             Returns true if AddActionPointOrientationResponse instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.Equals(IO.Swagger.Model.AddActionRequestAllOf)">
             <summary>
             Returns true if AddActionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddActionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CalibrateCameraRequestAllOf">
             <summary>
             CalibrateCameraRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.#ctor">
=======
        <member name="T:IO.Swagger.Model.RemoveConstantRequestArgs">
             <summary>
             Args(constant_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequestArgs" /> class.
             </summary>
             <param name="constantId">constantId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantRequestArgs.ConstantId">
             <summary>
             Gets or Sets ConstantId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.Equals(IO.Swagger.Model.RemoveConstantRequestArgs)">
             <summary>
             Returns true if RemoveConstantRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RemoveConstantRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.PackageState">
             <summary>
             PackageState(data: arcor2.data.events.PackageState.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.PackageState.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageState.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageState.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageState.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageState.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageState.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageState.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageState" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageState.#ctor(System.Nullable{IO.Swagger.Model.PackageState.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.PackageStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageState" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageState.Event">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequestAllOf" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.#ctor(IO.Swagger.Model.CalibrateCameraRequestArgs)">
=======
        <member name="P:IO.Swagger.Model.PackageState.ParentId">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CalibrateCameraRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.PackageState.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.PackageState.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.PackageState.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PackageState.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.Equals(IO.Swagger.Model.CalibrateCameraRequestAllOf)">
             <summary>
             Returns true if CalibrateCameraRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CalibrateCameraRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PackageState.Equals(IO.Swagger.Model.PackageState)">
             <summary>
             Returns true if PackageState instances are equal
             </summary>
             <param name="input">Instance of PackageState to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageState.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PackageState.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveConstantRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RemoveConstant.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RemoveConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantRequest.Id">
=======
        <member name="T:IO.Swagger.Model.SystemInfoResponseData">
             <summary>
             Data(version: str, api_version: str, supported_parameter_types: Set[str] = &lt;factory&gt;, supported_rpc_requests: Set[str] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoResponseData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoResponseData" /> class.
             </summary>
             <param name="apiVersion">apiVersion (required).</param>
             <param name="supportedParameterTypes">supportedParameterTypes.</param>
             <param name="supportedRpcRequests">supportedRpcRequests.</param>
             <param name="version">version (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveConstantRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.SystemInfoResponseData.ApiVersion">
             <summary>
             Gets or Sets ApiVersion
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponseData.SupportedParameterTypes">
             <summary>
             Gets or Sets SupportedParameterTypes
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponseData.SupportedRpcRequests">
             <summary>
             Gets or Sets SupportedRpcRequests
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponseData.Version">
             <summary>
             Gets or Sets Version
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.Equals(IO.Swagger.Model.RemoveConstantRequest)">
             <summary>
             Returns true if RemoveConstantRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveConstantRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.Equals(IO.Swagger.Model.SystemInfoResponseData)">
             <summary>
             Returns true if SystemInfoResponseData instances are equal
             </summary>
             <param name="input">Instance of SystemInfoResponseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionChangedAllOf">
             <summary>
             ActionChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.#ctor(IO.Swagger.Model.BareAction)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionChangedAllOf.Data">
=======
        <member name="T:IO.Swagger.Model.ActionResultAllOf">
             <summary>
             ActionResultAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResultAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultAllOf.#ctor(IO.Swagger.Model.ActionResultData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResultAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionResultAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.ActionResultAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionResultAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionResultAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.Equals(IO.Swagger.Model.ActionChangedAllOf)">
             <summary>
             Returns true if ActionChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionResultAllOf.Equals(IO.Swagger.Model.ActionResultAllOf)">
             <summary>
             Returns true if ActionResultAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionResultAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionResultAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NewSceneRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.NewScene.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.NewSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneRequest.Id">
=======
        <member name="T:IO.Swagger.Model.LogicItemChangedAllOf">
             <summary>
             LogicItemChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItemChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.#ctor(IO.Swagger.Model.LogicItem)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItemChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.LogicItemChangedAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewSceneRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequest.Equals(IO.Swagger.Model.NewSceneRequest)">
             <summary>
             Returns true if NewSceneRequest instances are equal
             </summary>
             <param name="input">Instance of NewSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.Equals(IO.Swagger.Model.LogicItemChangedAllOf)">
             <summary>
             Returns true if LogicItemChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of LogicItemChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OpenProjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenProjectResponse.Id">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToData">
             <summary>
             RobotMoveToData(move_event_type: arcor2_arserver_data.events.robot.RobotMoveToData.MoveEventType, robot_id: str)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToData.MoveEventTypeEnum">
             <summary>
             Defines MoveEventType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToData.MoveEventTypeEnum.Start">
>>>>>>> devel
             <summary>
             Enum Start for value: start
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenProjectResponse.Messages">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToData.MoveEventTypeEnum.End">
>>>>>>> devel
             <summary>
             Enum End for value: end
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenProjectResponse.Response">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToData.MoveEventTypeEnum.Failed">
>>>>>>> devel
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenProjectResponse.Result">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToData.MoveEventType">
>>>>>>> devel
             <summary>
             Gets or Sets MoveEventType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenProjectResponse.Data">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToData.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToData" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToData.#ctor(IO.Swagger.Model.RobotMoveToData.MoveEventTypeEnum,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToData" /> class.
             </summary>
             <param name="moveEventType">moveEventType (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectResponse.Equals(IO.Swagger.Model.OpenProjectResponse)">
             <summary>
             Returns true if OpenProjectResponse instances are equal
             </summary>
             <param name="input">Instance of OpenProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToData.Equals(IO.Swagger.Model.RobotMoveToData)">
             <summary>
             Returns true if RobotMoveToData instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.TemporaryPackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TemporaryPackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TemporaryPackageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageResponse.Id">
=======
        <member name="T:IO.Swagger.Model.InverseKinematicsRequestArgs">
             <summary>
             Args(robot_id: str, end_effector_id: str, pose: arcor2.data.common.Pose, start_joints: Union[List[arcor2.data.common.Joint], NoneType] = None, avoid_collisions: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.#ctor(System.Boolean,System.String,IO.Swagger.Model.Pose,System.String,System.Collections.Generic.List{IO.Swagger.Model.Joint})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequestArgs" /> class.
             </summary>
             <param name="avoidCollisions">avoidCollisions (default to true).</param>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="pose">pose (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="startJoints">startJoints.</param>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestArgs.AvoidCollisions">
>>>>>>> devel
             <summary>
             Gets or Sets AvoidCollisions
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.TemporaryPackageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageResponse.Data">
=======
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestArgs.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestArgs.Pose">
>>>>>>> devel
             <summary>
             Gets or Sets Pose
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestArgs.StartJoints">
             <summary>
             Gets or Sets StartJoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.Equals(IO.Swagger.Model.TemporaryPackageResponse)">
             <summary>
             Returns true if TemporaryPackageResponse instances are equal
             </summary>
             <param name="input">Instance of TemporaryPackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.Equals(IO.Swagger.Model.InverseKinematicsRequestArgs)">
             <summary>
             Returns true if InverseKinematicsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of InverseKinematicsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionChanged">
             <summary>
             ActionChanged(data: arcor2.data.common.BareAction)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ActionChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
=======
        <member name="T:IO.Swagger.Model.InverseKinematicsRequestAllOf">
             <summary>
             InverseKinematicsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.#ctor(IO.Swagger.Model.InverseKinematicsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequestAllOf" /> class.
>>>>>>> devel
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ActionChanged.ChangeTypeEnum.Update">
=======
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ActionChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionChanged.#ctor(System.Nullable{IO.Swagger.Model.ActionChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.BareAction)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionChanged.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionChanged.ToString">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionChanged.ToJson">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionChanged.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionChanged.Equals(IO.Swagger.Model.ActionChanged)">
             <summary>
             Returns true if ActionChanged instances are equal
             </summary>
             <param name="input">Instance of ActionChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChanged.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.Equals(IO.Swagger.Model.InverseKinematicsRequestAllOf)">
             <summary>
             Returns true if InverseKinematicsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of InverseKinematicsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeletePackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.DeletePackageResponse.Id">
=======
        <member name="T:IO.Swagger.Model.LogicItem">
             <summary>
             LogicItem(id: str, start: str, end: str, condition: Union[arcor2.data.common.ProjectLogicIf, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItem.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItem" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItem.#ctor(IO.Swagger.Model.ProjectLogicIf,System.String,System.String,System.String)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItem" /> class.
             </summary>
             <param name="condition">condition.</param>
             <param name="end">end (required).</param>
             <param name="id">id (required).</param>
             <param name="start">start (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeletePackageResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.LogicItem.Condition">
>>>>>>> devel
             <summary>
             Gets or Sets Condition
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeletePackageResponse.Response">
=======
        <member name="P:IO.Swagger.Model.LogicItem.End">
>>>>>>> devel
             <summary>
             Gets or Sets End
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeletePackageResponse.Result">
=======
        <member name="P:IO.Swagger.Model.LogicItem.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeletePackageResponse.Data">
=======
        <member name="P:IO.Swagger.Model.LogicItem.Start">
>>>>>>> devel
             <summary>
             Gets or Sets Start
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.LogicItem.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.LogicItem.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.LogicItem.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageResponse.Equals(IO.Swagger.Model.DeletePackageResponse)">
             <summary>
             Returns true if DeletePackageResponse instances are equal
             </summary>
             <param name="input">Instance of DeletePackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.LogicItem.Equals(IO.Swagger.Model.LogicItem)">
             <summary>
             Returns true if LogicItem instances are equal
             </summary>
             <param name="input">Instance of LogicItem to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.LogicItem.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.LogicItem.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.BuildProjectResponse">
=======
        <member name="T:IO.Swagger.Model.PackageInfo">
             <summary>
             PackageInfo(data: arcor2.data.events.PackageInfo.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.PackageInfo.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageInfo.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageInfo.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2_arserver_data.rpc.build.BuildProject.Response.Data, NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponse.#ctor">
=======
        <member name="F:IO.Swagger.Model.PackageInfo.ChangeTypeEnum.Remove">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectResponse" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.BuildProjectResponseData)">
=======
        <member name="F:IO.Swagger.Model.PackageInfo.ChangeTypeEnum.Updatebase">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BuildProjectResponse.Id">
=======
        <member name="P:IO.Swagger.Model.PackageInfo.ChangeType">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BuildProjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectResponse.Response">
=======
        <member name="M:IO.Swagger.Model.PackageInfo.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfo" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfo.#ctor(System.Nullable{IO.Swagger.Model.PackageInfo.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.PackageInfoData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfo" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfo.Event">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BuildProjectResponse.Result">
=======
        <member name="P:IO.Swagger.Model.PackageInfo.ParentId">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BuildProjectResponse.Data">
=======
        <member name="P:IO.Swagger.Model.PackageInfo.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.PackageInfo.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.PackageInfo.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PackageInfo.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponse.Equals(IO.Swagger.Model.BuildProjectResponse)">
             <summary>
             Returns true if BuildProjectResponse instances are equal
             </summary>
             <param name="input">Instance of BuildProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PackageInfo.Equals(IO.Swagger.Model.PackageInfo)">
             <summary>
             Returns true if PackageInfo instances are equal
             </summary>
             <param name="input">Instance of PackageInfo to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfo.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PackageInfo.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProcessStateAllOf">
             <summary>
             ProcessStateAllOf
=======
        <member name="T:IO.Swagger.Model.NewSceneRequestArgs">
             <summary>
             Args(name: str, desc: str = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="name">name (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessStateAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.#ctor(IO.Swagger.Model.ProcessStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessStateAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.NewSceneRequestArgs.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneRequestArgs.Name">
             <summary>
             Gets or Sets Name
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProcessStateAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.Equals(IO.Swagger.Model.ProcessStateAllOf)">
             <summary>
             Returns true if ProcessStateAllOf instances are equal
             </summary>
             <param name="input">Instance of ProcessStateAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.Equals(IO.Swagger.Model.NewSceneRequestArgs)">
             <summary>
             Returns true if NewSceneRequestArgs instances are equal
             </summary>
             <param name="input">Instance of NewSceneRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessStateAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NewSceneRequestArgs">
             <summary>
             Args(name: str, desc: str = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.#ctor(System.String,System.String)">
=======
        <member name="T:IO.Swagger.Model.RenameProjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectResponse.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequestArgs" /> class.
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="name">name (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewSceneRequestArgs.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.RenameProjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameProjectResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameProjectResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.Equals(IO.Swagger.Model.NewSceneRequestArgs)">
             <summary>
             Returns true if NewSceneRequestArgs instances are equal
             </summary>
             <param name="input">Instance of NewSceneRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameProjectResponse.Equals(IO.Swagger.Model.RenameProjectResponse)">
             <summary>
             Returns true if RenameProjectResponse instances are equal
             </summary>
             <param name="input">Instance of RenameProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveActionPointRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.Cylinder">
             <summary>
             Cylinder(id: str, radius: float, height: float)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Cylinder.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Cylinder" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointRequest.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="M:IO.Swagger.Model.Cylinder.#ctor(System.String,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Cylinder" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="height">height (required).</param>
             <param name="radius">radius (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.Cylinder.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Cylinder.Height">
             <summary>
             Gets or Sets Height
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Cylinder.Radius">
             <summary>
             Gets or Sets Radius
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Cylinder.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.Cylinder.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Cylinder.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.Equals(IO.Swagger.Model.RemoveActionPointRequest)">
             <summary>
             Returns true if RemoveActionPointRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Cylinder.Equals(IO.Swagger.Model.Cylinder)">
             <summary>
             Returns true if Cylinder instances are equal
             </summary>
             <param name="input">Instance of Cylinder to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Cylinder.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Cylinder.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetCameraPoseRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.common.GetCameraPose.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.IdValue">
             <summary>
             IdValue(id: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdValue.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdValue" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdValue.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdValue" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="value">value (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetCameraPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequest" /> class.
=======
        <member name="P:IO.Swagger.Model.IdValue.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetCameraPoseRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetCameraPoseRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetCameraPoseRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.ToString">
             <summary>
=======
        <member name="P:IO.Swagger.Model.IdValue.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdValue.ToString">
             <summary>
>>>>>>> devel
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.IdValue.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.IdValue.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.Equals(IO.Swagger.Model.GetCameraPoseRequest)">
             <summary>
             Returns true if GetCameraPoseRequest instances are equal
             </summary>
             <param name="input">Instance of GetCameraPoseRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.IdValue.Equals(IO.Swagger.Model.IdValue)">
             <summary>
             Returns true if IdValue instances are equal
             </summary>
             <param name="input">Instance of IdValue to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.IdValue.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.IdValue.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PackageSummary">
             <summary>
             PackageSummary(id: str, package_meta: arcor2.data.execution.PackageMeta, project_meta: Union[arcor2_execution_data.common.ProjectMeta, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageSummary.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageSummary" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageSummary.#ctor(System.String,IO.Swagger.Model.PackageMeta,IO.Swagger.Model.ProjectMeta)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageSummary" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="packageMeta">packageMeta (required).</param>
             <param name="projectMeta">projectMeta.</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageSummary.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageSummary.PackageMeta">
             <summary>
             Gets or Sets PackageMeta
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageSummary.ProjectMeta">
             <summary>
             Gets or Sets ProjectMeta
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageSummary.ToString">
=======
        <member name="T:IO.Swagger.Model.ActionExecutionData">
             <summary>
             Data(action_id: str = '')
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionData.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionExecutionData" /> class.
             </summary>
             <param name="actionId">actionId (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionExecutionData.ActionId">
             <summary>
             Gets or Sets ActionId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageSummary.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionExecutionData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageSummary.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionExecutionData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageSummary.Equals(IO.Swagger.Model.PackageSummary)">
             <summary>
             Returns true if PackageSummary instances are equal
             </summary>
             <param name="input">Instance of PackageSummary to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageSummary.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionExecutionData.Equals(IO.Swagger.Model.ActionExecutionData)">
             <summary>
             Returns true if ActionExecutionData instances are equal
             </summary>
             <param name="input">Instance of ActionExecutionData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageSummary.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionExecutionData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CloseSceneRequestAllOf">
             <summary>
             CloseSceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.#ctor(IO.Swagger.Model.CloseSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.AddActionPointOrientationRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddActionPointOrientation.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args.</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CloseSceneRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneRequestAllOf.DryRun">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.Equals(IO.Swagger.Model.CloseSceneRequestAllOf)">
             <summary>
             Returns true if CloseSceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CloseSceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.Equals(IO.Swagger.Model.AddActionPointOrientationRequest)">
             <summary>
             Returns true if AddActionPointOrientationRequest instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneClosed">
             <summary>
             SceneClosed()
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneClosed.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneClosed.ChangeTypeEnum.Add">
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointParentRequestArgs">
             <summary>
             Args(action_point_id: str, new_parent_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="newParentId">newParentId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequestArgs.NewParentId">
             <summary>
             Gets or Sets NewParentId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.SceneClosed.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.SceneClosed.ChangeTypeEnum.Remove">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.SceneClosed.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneClosed.ChangeType">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointParentRequestArgs)">
             <summary>
             Returns true if UpdateActionPointParentRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointParentRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneClosed.#ctor">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneClosed" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneClosed.#ctor(System.Nullable{IO.Swagger.Model.SceneClosed.ChangeTypeEnum},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneClosed" /> class.
=======
        <member name="T:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf">
             <summary>
             RenameActionPointOrientationRequestAllOf
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneClosed.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneClosed.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneClosed.Data">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.#ctor(IO.Swagger.Model.RenameActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneClosed.ToString">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneClosed.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneClosed.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneClosed.Equals(IO.Swagger.Model.SceneClosed)">
             <summary>
             Returns true if SceneClosed instances are equal
             </summary>
             <param name="input">Instance of SceneClosed to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneClosed.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.Equals(IO.Swagger.Model.RenameActionPointOrientationRequestAllOf)">
             <summary>
             Returns true if RenameActionPointOrientationRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointOrientationRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneClosed.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateAction.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionRequestArgs,System.Boolean)">
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionRequest.Id">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionRequest.Request">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionRequest.Args">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionRequest.Equals(IO.Swagger.Model.UpdateActionRequest)">
             <summary>
             Returns true if UpdateActionRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Equals(IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse)">
             <summary>
             Returns true if UpdateActionPointOrientationUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProcessState">
             <summary>
             ProcessState(data: arcor2_arserver_data.events.common.ProcessState.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ProcessState.ChangeTypeEnum">
=======
        <member name="T:IO.Swagger.Model.DeletePackageRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequest.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProcessState.ChangeTypeEnum.Add">
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProcessState.ChangeTypeEnum.Update">
=======
        <member name="P:IO.Swagger.Model.DeletePackageRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProcessState.ChangeTypeEnum.Remove">
=======
        <member name="P:IO.Swagger.Model.DeletePackageRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProcessState.ChangeTypeEnum.Updatebase">
=======
        <member name="P:IO.Swagger.Model.DeletePackageRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProcessState.ChangeType">
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessState.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessState" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessState.#ctor(System.Nullable{IO.Swagger.Model.ProcessState.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ProcessStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessState" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProcessState.Event">
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProcessState.ParentId">
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequest.Equals(IO.Swagger.Model.DeletePackageRequest)">
>>>>>>> devel
             <summary>
             Returns true if DeletePackageRequest instances are equal
             </summary>
             <param name="input">Instance of DeletePackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProcessState.Data">
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessState.ToString">
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RunPackageRequestArgsAllOf">
             <summary>
             RunPackageRequestArgsAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.#ctor(System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequestArgsAllOf" /> class.
             </summary>
             <param name="cleanupAfterRun">cleanupAfterRun (default to true).</param>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageRequestArgsAllOf.CleanupAfterRun">
             <summary>
             Gets or Sets CleanupAfterRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessState.ToJson">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessState.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessState.Equals(IO.Swagger.Model.ProcessState)">
             <summary>
             Returns true if ProcessState instances are equal
             </summary>
             <param name="input">Instance of ProcessState to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProcessState.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.Equals(IO.Swagger.Model.RunPackageRequestArgsAllOf)">
             <summary>
             Returns true if RunPackageRequestArgsAllOf instances are equal
             </summary>
             <param name="input">Instance of RunPackageRequestArgsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProcessState.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestArgsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneSaved">
             <summary>
             SceneSaved()
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneSaved.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneSaved.ChangeTypeEnum.Add">
=======
        <member name="T:IO.Swagger.Model.NotificationData">
             <summary>
             Data(message: str, level: arcor2.data.events.Notification.Data.Level)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.NotificationData.LevelEnum">
             <summary>
             Defines Level
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.NotificationData.LevelEnum.Info">
             <summary>
             Enum Info for value: Info
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.NotificationData.LevelEnum.Warn">
             <summary>
             Enum Warn for value: Warn
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.NotificationData.LevelEnum.Error">
             <summary>
             Enum Error for value: Error
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NotificationData.Level">
             <summary>
             Gets or Sets Level
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NotificationData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NotificationData.#ctor(IO.Swagger.Model.NotificationData.LevelEnum,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationData" /> class.
             </summary>
             <param name="level">level (required).</param>
             <param name="message">message (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.NotificationData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NotificationData.ToString">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.SceneSaved.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.NotificationData.ToJson">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.SceneSaved.ChangeTypeEnum.Remove">
=======
        <member name="M:IO.Swagger.Model.NotificationData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.SceneSaved.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneSaved.ChangeType">
=======
        <member name="M:IO.Swagger.Model.NotificationData.Equals(IO.Swagger.Model.NotificationData)">
             <summary>
             Returns true if NotificationData instances are equal
             </summary>
             <param name="input">Instance of NotificationData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NotificationData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneSaved.#ctor">
=======
        <member name="M:IO.Swagger.Model.NotificationData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneSaved" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneSaved.#ctor(System.Nullable{IO.Swagger.Model.SceneSaved.ChangeTypeEnum},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneSaved" /> class.
=======
        <member name="T:IO.Swagger.Model.Sphere">
             <summary>
             Sphere(id: str, radius: float)
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneSaved.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneSaved.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneSaved.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneSaved.ToString">
=======
        <member name="M:IO.Swagger.Model.Sphere.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Sphere" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Sphere.#ctor(System.String,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Sphere" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="radius">radius (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.Sphere.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Sphere.Radius">
             <summary>
             Gets or Sets Radius
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Sphere.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneSaved.ToJson">
=======
        <member name="M:IO.Swagger.Model.Sphere.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneSaved.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Sphere.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneSaved.Equals(IO.Swagger.Model.SceneSaved)">
             <summary>
             Returns true if SceneSaved instances are equal
             </summary>
             <param name="input">Instance of SceneSaved to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneSaved.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Sphere.Equals(IO.Swagger.Model.Sphere)">
             <summary>
             Returns true if Sphere instances are equal
             </summary>
             <param name="input">Instance of Sphere to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Sphere.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneSaved.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Sphere.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ForwardKinematicsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2.data.common.Pose, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponse.Messages">
=======
        <member name="T:IO.Swagger.Model.OrientationChangedAllOf">
>>>>>>> devel
             <summary>
             OrientationChangedAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponse.Response">
=======
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OrientationChangedAllOf" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponse.Result">
=======
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.#ctor(IO.Swagger.Model.NamedOrientation)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OrientationChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponse.Data">
=======
        <member name="P:IO.Swagger.Model.OrientationChangedAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.Equals(IO.Swagger.Model.ForwardKinematicsResponse)">
             <summary>
             Returns true if ForwardKinematicsResponse instances are equal
             </summary>
             <param name="input">Instance of ForwardKinematicsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.Equals(IO.Swagger.Model.OrientationChangedAllOf)">
             <summary>
             Returns true if OrientationChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of OrientationChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf">
             <summary>
             UpdateObjectPoseUsingRobotRequestArgsAllOf
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.PivotEnum">
             <summary>
             Defines Pivot
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.PivotEnum.Top">
             <summary>
             Enum Top for value: top
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.PivotEnum.Middle">
             <summary>
             Enum Middle for value: middle
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionResponse.ToString">
=======
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.PivotEnum.Bottom">
             <summary>
             Enum Bottom for value: bottom
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.Pivot">
             <summary>
             Gets or Sets Pivot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.#ctor(System.Nullable{IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.PivotEnum},IO.Swagger.Model.RobotArg)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf" /> class.
             </summary>
             <param name="pivot">pivot (default to PivotEnum.Middle).</param>
             <param name="robot">robot (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.Robot">
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionResponse.Equals(IO.Swagger.Model.AddActionResponse)">
             <summary>
             Returns true if AddActionResponse instances are equal
             </summary>
             <param name="input">Instance of AddActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.Equals(IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf)">
             <summary>
             Returns true if UpdateObjectPoseUsingRobotRequestArgsAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseUsingRobotRequestArgsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddObjectToSceneRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.AddObjectToScene.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddObjectToSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequest.Id">
=======
        <member name="T:IO.Swagger.Model.ActionStateAfterData">
             <summary>
             Data(action_id: str, results: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfterData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterData.#ctor(System.String,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfterData" /> class.
             </summary>
             <param name="actionId">actionId (required).</param>
             <param name="results">results.</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateAfterData.ActionId">
>>>>>>> devel
             <summary>
             Gets or Sets ActionId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.ActionStateAfterData.Results">
             <summary>
             Gets or Sets Results
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfterData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfterData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.Equals(IO.Swagger.Model.AddObjectToSceneRequest)">
             <summary>
             Returns true if AddObjectToSceneRequest instances are equal
             </summary>
             <param name="input">Instance of AddObjectToSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfterData.Equals(IO.Swagger.Model.ActionStateAfterData)">
             <summary>
             Returns true if ActionStateAfterData instances are equal
             </summary>
             <param name="input">Instance of ActionStateAfterData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfterData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf">
             <summary>
             RemoveActionPointOrientationRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.Mesh">
             <summary>
             Mesh(id: str, uri: str, focus_points: Union[List[arcor2.data.common.Pose], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Mesh.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Mesh" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Mesh.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Pose},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Mesh" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="focusPoints">focusPoints.</param>
             <param name="uri">uri (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.#ctor(IO.Swagger.Model.RemoveActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.Mesh.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.Mesh.FocusPoints">
             <summary>
             Gets or Sets FocusPoints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Mesh.Uri">
             <summary>
             Gets or Sets Uri
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Mesh.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.Mesh.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Mesh.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.Equals(IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf)">
             <summary>
             Returns true if RemoveActionPointOrientationRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointOrientationRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Mesh.Equals(IO.Swagger.Model.Mesh)">
             <summary>
             Returns true if Mesh instances are equal
             </summary>
             <param name="input">Instance of Mesh to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Mesh.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Mesh.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs">
             <summary>
             Args(orientation_id: str, robot: arcor2.data.rpc.common.RobotArg)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.#ctor(System.String,IO.Swagger.Model.RobotArg)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf">
             <summary>
             RobotMoveToActionPointOrientationAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="orientationId">orientationId (required).</param>
             <param name="robot">robot (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.OrientationId">
             <summary>
             Gets or Sets OrientationId
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.#ctor(IO.Swagger.Model.RobotMoveToActionPointOrientationData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.Robot">
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs)">
             <summary>
             Returns true if UpdateActionPointOrientationUsingRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.Equals(IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf)">
             <summary>
             Returns true if RobotMoveToActionPointOrientationAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointOrientationAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CopyProjectRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.CopyProject.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CopyProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequest.Args">
             <summary>
             Gets or Sets Args
=======
        <member name="T:IO.Swagger.Model.BuildProjectResponseData">
             <summary>
             Data(package_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectResponseData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectResponseData" /> class.
>>>>>>> devel
             </summary>
             <param name="packageId">packageId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopyProjectRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.BuildProjectResponseData.PackageId">
             <summary>
             Gets or Sets PackageId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequest.Equals(IO.Swagger.Model.CopyProjectRequest)">
             <summary>
             Returns true if CopyProjectRequest instances are equal
             </summary>
             <param name="input">Instance of CopyProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.Equals(IO.Swagger.Model.BuildProjectResponseData)">
             <summary>
             Returns true if BuildProjectResponseData instances are equal
             </summary>
             <param name="input">Instance of BuildProjectResponseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeleteSceneRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteSceneRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.AddActionPointRequestAllOf">
             <summary>
             AddActionPointRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.#ctor(IO.Swagger.Model.AddActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneRequest.Args">
=======
        <member name="P:IO.Swagger.Model.AddActionPointRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteSceneRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.AddActionPointRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.Equals(IO.Swagger.Model.DeleteSceneRequest)">
             <summary>
             Returns true if DeleteSceneRequest instances are equal
             </summary>
             <param name="input">Instance of DeleteSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.Equals(IO.Swagger.Model.AddActionPointRequestAllOf)">
             <summary>
             Returns true if AddActionPointRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddActionPointRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MoveToPoseRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.MoveToPose.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.MoveToPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.ToString">
             <summary>
             Returns the string presentation of the object
=======
        <member name="T:IO.Swagger.Model.CopySceneRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.CopyScene.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequest" /> class.
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
=======
        <member name="M:IO.Swagger.Model.CopySceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CopySceneRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopySceneRequest.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.Equals(IO.Swagger.Model.MoveToPoseRequest)">
             <summary>
             Returns true if MoveToPoseRequest instances are equal
=======
        <member name="P:IO.Swagger.Model.CopySceneRequest.Request">
             <summary>
             Gets or Sets Request
>>>>>>> devel
             </summary>
             <param name="input">Instance of MoveToPoseRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.GetHashCode">
             <summary>
             Gets the hash code
=======
        <member name="P:IO.Swagger.Model.CopySceneRequest.Args">
             <summary>
             Gets or Sets Args
>>>>>>> devel
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CopySceneRequest.ToString">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectChanged">
=======
        <member name="M:IO.Swagger.Model.CopySceneRequest.ToJson">
>>>>>>> devel
             <summary>
             ProjectChanged(data: arcor2.data.common.BareProject)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectChanged.ChangeTypeEnum">
=======
        <member name="M:IO.Swagger.Model.CopySceneRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectChanged.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.CopySceneRequest.Equals(IO.Swagger.Model.CopySceneRequest)">
             <summary>
             Returns true if CopySceneRequest instances are equal
             </summary>
             <param name="input">Instance of CopySceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectChanged.ChangeTypeEnum.Remove">
=======
        <member name="M:IO.Swagger.Model.CopySceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChanged.#ctor(System.Nullable{IO.Swagger.Model.ProjectChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.BareProject)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectChanged" /> class.
=======
        <member name="T:IO.Swagger.Model.RemoveActionPointOrientationRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RemoveActionPointOrientation.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RemoveActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequest.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectChanged.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChanged.ToString">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectChanged.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectChanged.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectChanged.Equals(IO.Swagger.Model.ProjectChanged)">
             <summary>
             Returns true if ProjectChanged instances are equal
             </summary>
             <param name="input">Instance of ProjectChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChanged.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.Equals(IO.Swagger.Model.RemoveActionPointOrientationRequest)">
             <summary>
             Returns true if RemoveActionPointOrientationRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointOrientationRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf">
             <summary>
             RemoveActionPointJointsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.#ctor(IO.Swagger.Model.RemoveActionPointJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.Args">
=======
        <member name="T:IO.Swagger.Model.MoveToActionPointRequestAllOf">
             <summary>
             MoveToActionPointRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.#ctor(IO.Swagger.Model.MoveToActionPointRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.Equals(IO.Swagger.Model.RemoveActionPointJointsRequestAllOf)">
             <summary>
             Returns true if RemoveActionPointJointsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointJointsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.Equals(IO.Swagger.Model.MoveToActionPointRequestAllOf)">
             <summary>
             Returns true if MoveToActionPointRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of MoveToActionPointRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameActionPointJointsRequestArgs">
             <summary>
             Args(joints_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequestArgs" /> class.
             </summary>
             <param name="jointsId">jointsId (required).</param>
             <param name="newName">newName (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequestArgs.JointsId">
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.CalibrateCameraRequestAllOf">
             <summary>
             CalibrateCameraRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.#ctor(IO.Swagger.Model.CalibrateCameraRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.Equals(IO.Swagger.Model.RenameActionPointJointsRequestArgs)">
             <summary>
             Returns true if RenameActionPointJointsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointJointsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.Equals(IO.Swagger.Model.CalibrateCameraRequestAllOf)">
             <summary>
             Returns true if CalibrateCameraRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CalibrateCameraRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NewProjectRequestArgs">
             <summary>
             Args(scene_id: str, name: str, desc: str = &lt;factory&gt;, has_logic: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.#ctor(System.String,System.Boolean,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequestArgs" /> class.
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="hasLogic">hasLogic (default to true).</param>
             <param name="name">name (required).</param>
             <param name="sceneId">sceneId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectRequestArgs.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectRequestArgs.HasLogic">
             <summary>
             Gets or Sets HasLogic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectRequestArgs.Name">
=======
        <member name="T:IO.Swagger.Model.GetEndEffectorPoseRequestArgs">
             <summary>
             Args(robot_id: str, end_effector_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequestArgs" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewProjectRequestArgs.SceneId">
             <summary>
             Gets or Sets SceneId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequestArgs" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.Equals(IO.Swagger.Model.NewProjectRequestArgs)">
             <summary>
             Returns true if NewProjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of NewProjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.Equals(IO.Swagger.Model.GetEndEffectorPoseRequestArgs)">
             <summary>
             Returns true if GetEndEffectorPoseRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorPoseRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PackageStateAllOf">
             <summary>
             PackageStateAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageStateAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateAllOf.#ctor(IO.Swagger.Model.PackageStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageStateAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageStateAllOf.Data">
=======
        <member name="T:IO.Swagger.Model.ActionPointChanged">
             <summary>
             ActionPointChanged(data: arcor2.data.common.BareActionPoint)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPointChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChanged.#ctor(System.Nullable{IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.BareActionPoint)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPointChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointChanged.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageStateAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.ActionPointChanged.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageStateAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionPointChanged.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageStateAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionPointChanged.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageStateAllOf.Equals(IO.Swagger.Model.PackageStateAllOf)">
             <summary>
             Returns true if PackageStateAllOf instances are equal
             </summary>
             <param name="input">Instance of PackageStateAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionPointChanged.Equals(IO.Swagger.Model.ActionPointChanged)">
             <summary>
             Returns true if ActionPointChanged instances are equal
             </summary>
             <param name="input">Instance of ActionPointChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChanged.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageStateAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionPointChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CameraColorParametersResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2.data.camera.CameraParameters, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.CameraParameters)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersResponse.Id">
=======
        <member name="T:IO.Swagger.Model.OpenProjectRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectRequest.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CameraColorParametersResponse.Messages">
=======
        <member name="M:IO.Swagger.Model.OpenProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CameraColorParametersResponse.Response">
=======
        <member name="P:IO.Swagger.Model.OpenProjectRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CameraColorParametersResponse.Result">
=======
        <member name="P:IO.Swagger.Model.OpenProjectRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CameraColorParametersResponse.Data">
=======
        <member name="P:IO.Swagger.Model.OpenProjectRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.OpenProjectRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.OpenProjectRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.OpenProjectRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.Equals(IO.Swagger.Model.CameraColorParametersResponse)">
             <summary>
             Returns true if CameraColorParametersResponse instances are equal
             </summary>
             <param name="input">Instance of CameraColorParametersResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.OpenProjectRequest.Equals(IO.Swagger.Model.OpenProjectRequest)">
             <summary>
             Returns true if OpenProjectRequest instances are equal
             </summary>
             <param name="input">Instance of OpenProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OpenProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateOverrideRequestAllOf">
             <summary>
             UpdateOverrideRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.#ctor(IO.Swagger.Model.UpdateOverrideRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.MoveToJointsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsResponse.Response">
             <summary>
             Gets or Sets Response
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateOverrideRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideRequestAllOf.DryRun">
=======
        <member name="P:IO.Swagger.Model.MoveToJointsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.Equals(IO.Swagger.Model.UpdateOverrideRequestAllOf)">
             <summary>
             Returns true if UpdateOverrideRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateOverrideRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.Equals(IO.Swagger.Model.MoveToJointsResponse)">
             <summary>
             Returns true if MoveToJointsResponse instances are equal
             </summary>
             <param name="input">Instance of MoveToJointsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointUsingRobotResponse">
=======
        <member name="T:IO.Swagger.Model.DeletePackageResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.DeletePackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Id">
=======
        <member name="P:IO.Swagger.Model.DeletePackageResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.DeletePackageResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Response">
=======
        <member name="P:IO.Swagger.Model.DeletePackageResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Result">
=======
        <member name="P:IO.Swagger.Model.DeletePackageResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Data">
=======
        <member name="P:IO.Swagger.Model.DeletePackageResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.DeletePackageResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.DeletePackageResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.DeletePackageResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Equals(IO.Swagger.Model.UpdateActionPointUsingRobotResponse)">
             <summary>
             Returns true if UpdateActionPointUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeletePackageResponse.Equals(IO.Swagger.Model.DeletePackageResponse)">
             <summary>
             Returns true if DeletePackageResponse instances are equal
             </summary>
             <param name="input">Instance of DeletePackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.DeletePackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectMeta">
             <summary>
             Provides data about the project embedded in the execution package.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectMeta.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectMeta" /> class.
=======
        <member name="T:IO.Swagger.Model.SceneObjectUsageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectUsageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectUsageResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectMeta.#ctor(System.String,System.DateTime,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectMeta" /> class.
=======
        <member name="P:IO.Swagger.Model.SceneObjectUsageResponse.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="modified">Last modification. (required).</param>
             <param name="name">name (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectMeta.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectMeta.Modified">
             <summary>
             Last modification.
=======
        <member name="P:IO.Swagger.Model.SceneObjectUsageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectUsageResponse.Response">
             <summary>
             Gets or Sets Response
>>>>>>> devel
             </summary>
             <value>Last modification.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectMeta.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectMeta.ToString">
=======
        <member name="P:IO.Swagger.Model.SceneObjectUsageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectUsageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectMeta.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectMeta.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectMeta.Equals(IO.Swagger.Model.ProjectMeta)">
             <summary>
             Returns true if ProjectMeta instances are equal
             </summary>
             <param name="input">Instance of ProjectMeta to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectMeta.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.Equals(IO.Swagger.Model.SceneObjectUsageResponse)">
             <summary>
             Returns true if SceneObjectUsageResponse instances are equal
             </summary>
             <param name="input">Instance of SceneObjectUsageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectMeta.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CameraParameters">
             <summary>
             CameraParameters(fx: float, fy: float, cx: float, cy: float, dist_coefs: List[float])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraParameters" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.#ctor(System.Decimal,System.Decimal,System.Collections.Generic.List{System.Decimal},System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraParameters" /> class.
=======
        <member name="T:IO.Swagger.Model.CloseProjectRequestArgs">
             <summary>
             Args(force: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.#ctor(System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectRequestArgs" /> class.
             </summary>
             <param name="force">force (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectRequestArgs.Force">
             <summary>
             Gets or Sets Force
>>>>>>> devel
             </summary>
             <param name="cx">cx (required).</param>
             <param name="cy">cy (required).</param>
             <param name="distCoefs">distCoefs (required).</param>
             <param name="fx">fx (required).</param>
             <param name="fy">fy (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CameraParameters.Cx">
             <summary>
             Gets or Sets Cx
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraParameters.Cy">
             <summary>
             Gets or Sets Cy
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraParameters.DistCoefs">
             <summary>
             Gets or Sets DistCoefs
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraParameters.Fx">
             <summary>
             Gets or Sets Fx
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraParameters.Fy">
             <summary>
             Gets or Sets Fy
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.ToString">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraParameters.ToJson">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraParameters.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraParameters.Equals(IO.Swagger.Model.CameraParameters)">
             <summary>
             Returns true if CameraParameters instances are equal
             </summary>
             <param name="input">Instance of CameraParameters to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.Equals(IO.Swagger.Model.CloseProjectRequestArgs)">
             <summary>
             Returns true if CloseProjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CloseProjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraParameters.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CalibrateRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotResponse.Response">
=======
        <member name="T:IO.Swagger.Model.DeleteOverrideRequestAllOf">
             <summary>
             DeleteOverrideRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.#ctor(IO.Swagger.Model.DeleteOverrideRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CalibrateRobotResponse.Result">
=======
        <member name="P:IO.Swagger.Model.DeleteOverrideRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CalibrateRobotResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.Equals(IO.Swagger.Model.CalibrateRobotResponse)">
             <summary>
             Returns true if CalibrateRobotResponse instances are equal
             </summary>
             <param name="input">Instance of CalibrateRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.Equals(IO.Swagger.Model.DeleteOverrideRequestAllOf)">
             <summary>
             Returns true if DeleteOverrideRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of DeleteOverrideRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeleteOverrideRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.DeleteOverride.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.DeleteOverrideRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.GetCameraPoseRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.common.GetCameraPose.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetCameraPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
<<<<<<< HEAD
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideRequest.Id">
=======
            </member>
        <member name="P:IO.Swagger.Model.GetCameraPoseRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteOverrideRequest.Request">
=======
        <member name="P:IO.Swagger.Model.GetCameraPoseRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteOverrideRequest.Args">
=======
        <member name="P:IO.Swagger.Model.GetCameraPoseRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteOverrideRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.Equals(IO.Swagger.Model.DeleteOverrideRequest)">
             <summary>
             Returns true if DeleteOverrideRequest instances are equal
             </summary>
             <param name="input">Instance of DeleteOverrideRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.Equals(IO.Swagger.Model.GetCameraPoseRequest)">
             <summary>
             Returns true if GetCameraPoseRequest instances are equal
             </summary>
             <param name="input">Instance of GetCameraPoseRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.FocusObjectStartRequestAllOf">
             <summary>
             FocusObjectStartRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.#ctor(IO.Swagger.Model.FocusObjectStartRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectStartRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.OpenSceneData">
             <summary>
             Data(scene: arcor2.data.common.Scene)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneData.#ctor(IO.Swagger.Model.Scene)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneData" /> class.
             </summary>
             <param name="scene">scene (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenSceneData.Scene">
             <summary>
             Gets or Sets Scene
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.OpenSceneData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.OpenSceneData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.Equals(IO.Swagger.Model.FocusObjectStartRequestAllOf)">
             <summary>
             Returns true if FocusObjectStartRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of FocusObjectStartRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.OpenSceneData.Equals(IO.Swagger.Model.OpenSceneData)">
             <summary>
             Returns true if OpenSceneData instances are equal
             </summary>
             <param name="input">Instance of OpenSceneData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OpenSceneData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToJoints">
             <summary>
             RobotMoveToJoints(data: arcor2_arserver_data.events.robot.RobotMoveToJoints.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum">
=======
        <member name="T:IO.Swagger.Model.CloseSceneRequestArgs">
             <summary>
             Args(force: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.#ctor(System.Boolean)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneRequestArgs" /> class.
             </summary>
             <param name="force">force (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum.Add">
=======
        <member name="P:IO.Swagger.Model.CloseSceneRequestArgs.Force">
>>>>>>> devel
             <summary>
             Gets or Sets Force
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum.Remove">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum.Updatebase">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.Equals(IO.Swagger.Model.CloseSceneRequestArgs)">
             <summary>
             Returns true if CloseSceneRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CloseSceneRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToJoints.ChangeType">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJoints" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.#ctor(System.Nullable{IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotMoveToJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJoints" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJoints.Event">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.OpenSceneRequest">
>>>>>>> devel
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToJoints.ParentId">
=======
        <member name="M:IO.Swagger.Model.OpenSceneRequest.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToJoints.Data">
=======
        <member name="M:IO.Swagger.Model.OpenSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.ToString">
=======
        <member name="P:IO.Swagger.Model.OpenSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenSceneRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.ToJson">
=======
        <member name="M:IO.Swagger.Model.OpenSceneRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.OpenSceneRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.Equals(IO.Swagger.Model.RobotMoveToJoints)">
             <summary>
             Returns true if RobotMoveToJoints instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToJoints to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.OpenSceneRequest.Equals(IO.Swagger.Model.OpenSceneRequest)">
             <summary>
             Returns true if OpenSceneRequest instances are equal
             </summary>
             <param name="input">Instance of OpenSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OpenSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionRequestAllOf">
             <summary>
             UpdateActionRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.ListScenesRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesRequest.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.ListScenesRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ListScenesRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ListScenesRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.Equals(IO.Swagger.Model.UpdateActionRequestAllOf)">
             <summary>
             Returns true if UpdateActionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ListScenesRequest.Equals(IO.Swagger.Model.ListScenesRequest)">
             <summary>
             Returns true if ListScenesRequest instances are equal
             </summary>
             <param name="input">Instance of ListScenesRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ListScenesRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ForwardKinematicsResponseAllOf">
             <summary>
             ForwardKinematicsResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.#ctor(IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsResponseAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.AddActionPointOrientationResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationResponse.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.AddActionPointOrientationResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.Equals(IO.Swagger.Model.ForwardKinematicsResponseAllOf)">
             <summary>
             Returns true if ForwardKinematicsResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of ForwardKinematicsResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.Equals(IO.Swagger.Model.AddActionPointOrientationResponse)">
             <summary>
             Returns true if AddActionPointOrientationResponse instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateProjectDescriptionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionResponse.Result">
             <summary>
             Gets or Sets Result
=======
        <member name="T:IO.Swagger.Model.OpenSceneAllOf">
             <summary>
             OpenSceneAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.#ctor(IO.Swagger.Model.OpenSceneData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionResponse.Data">
=======
        <member name="P:IO.Swagger.Model.OpenSceneAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.Equals(IO.Swagger.Model.UpdateProjectDescriptionResponse)">
             <summary>
             Returns true if UpdateProjectDescriptionResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectDescriptionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.Equals(IO.Swagger.Model.OpenSceneAllOf)">
             <summary>
             Returns true if OpenSceneAllOf instances are equal
             </summary>
             <param name="input">Instance of OpenSceneAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OpenSceneAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddLogicItemRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddLogicItem.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddLogicItemRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequest.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="T:IO.Swagger.Model.DeleteObjectTypeRequestAllOf">
             <summary>
             DeleteObjectTypeRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.#ctor(IO.Swagger.Model.IdArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddLogicItemRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.Equals(IO.Swagger.Model.AddLogicItemRequest)">
             <summary>
             Returns true if AddLogicItemRequest instances are equal
             </summary>
             <param name="input">Instance of AddLogicItemRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.Equals(IO.Swagger.Model.DeleteObjectTypeRequestAllOf)">
             <summary>
             Returns true if DeleteObjectTypeRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of DeleteObjectTypeRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PackageInfo">
=======
        <member name="T:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf">
             <summary>
             GetEndEffectorPoseRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.#ctor(IO.Swagger.Model.GetEndEffectorPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             PackageInfo(data: arcor2.data.events.PackageInfo.Data)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PackageInfo.ChangeTypeEnum">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.PackageInfo.ChangeTypeEnum.Add">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.PackageInfo.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageInfo.ChangeTypeEnum.Remove">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.Equals(IO.Swagger.Model.GetEndEffectorPoseRequestAllOf)">
             <summary>
             Returns true if GetEndEffectorPoseRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorPoseRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.PackageInfo.ChangeTypeEnum.Updatebase">
=======
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.PackageInfo.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfo.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfo" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfo.#ctor(System.Nullable{IO.Swagger.Model.PackageInfo.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.PackageInfoData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfo" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfo.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfo.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfo.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfo.ToString">
=======
        <member name="T:IO.Swagger.Model.ObjectAction">
             <summary>
             ObjectAction(name: str, description: Union[str, NoneType] = None, parameters: List[arcor2.data.object_type.ParameterMeta] = &lt;factory&gt;, meta: arcor2.data.common.ActionMetadata = &lt;factory&gt;, origins: Union[str, NoneType] = None, returns: List[str] = &lt;factory&gt;, disabled: bool = False, problem: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectAction" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.#ctor(System.String,System.Boolean,IO.Swagger.Model.ActionMetadata,System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.ParameterMeta},System.String,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectAction" /> class.
             </summary>
             <param name="description">description.</param>
             <param name="disabled">disabled (default to false).</param>
             <param name="meta">meta.</param>
             <param name="name">name (required).</param>
             <param name="origins">origins.</param>
             <param name="parameters">parameters.</param>
             <param name="problem">problem.</param>
             <param name="returns">returns.</param>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Disabled">
             <summary>
             Gets or Sets Disabled
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Meta">
             <summary>
             Gets or Sets Meta
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Origins">
             <summary>
             Gets or Sets Origins
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Problem">
             <summary>
             Gets or Sets Problem
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Returns">
             <summary>
             Gets or Sets Returns
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.Equals(IO.Swagger.Model.ObjectAction)">
             <summary>
             Returns true if ObjectAction instances are equal
             </summary>
             <param name="input">Instance of ObjectAction to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.StopPackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopPackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopPackageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.StopPackageResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopPackageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopPackageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopPackageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopPackageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageResponse.Equals(IO.Swagger.Model.StopPackageResponse)">
             <summary>
             Returns true if StopPackageResponse instances are equal
             </summary>
             <param name="input">Instance of StopPackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateObjectPoseRequestAllOf">
             <summary>
             UpdateObjectPoseRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.#ctor(IO.Swagger.Model.UpdateObjectPoseRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.Equals(IO.Swagger.Model.UpdateObjectPoseRequestAllOf)">
             <summary>
             Returns true if UpdateObjectPoseRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.SceneState">
             <summary>
             SceneState(data: arcor2_arserver_data.events.scene.SceneState.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneState.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneState.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneState.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneState.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneState.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneState.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneState.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneState" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneState.#ctor(System.Nullable{IO.Swagger.Model.SceneState.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.SceneStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneState" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneState.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneState.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneState.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneState.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneState.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneState.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneState.Equals(IO.Swagger.Model.SceneState)">
             <summary>
             Returns true if SceneState instances are equal
             </summary>
             <param name="input">Instance of SceneState to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneState.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneState.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CameraColorImageRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.camera.CameraColorImage.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CameraColorImageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.Equals(IO.Swagger.Model.CameraColorImageRequest)">
             <summary>
             Returns true if CameraColorImageRequest instances are equal
             </summary>
             <param name="input">Instance of CameraColorImageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetActionsRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.TypeArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.TypeArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.Equals(IO.Swagger.Model.GetActionsRequest)">
             <summary>
             Returns true if GetActionsRequest instances are equal
             </summary>
             <param name="input">Instance of GetActionsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RobotJointsAllOf">
             <summary>
             RobotJointsAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJointsAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.#ctor(IO.Swagger.Model.RobotJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJointsAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotJointsAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.Equals(IO.Swagger.Model.RobotJointsAllOf)">
             <summary>
             Returns true if RobotJointsAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotJointsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotJointsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Equals(IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse)">
             <summary>
             Returns true if AddActionPointOrientationUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ActionCancelledAllOf">
             <summary>
             ActionCancelledAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionCancelledAllOf" /> class.
             </summary>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionCancelledAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.Equals(IO.Swagger.Model.ActionCancelledAllOf)">
             <summary>
             Returns true if ActionCancelledAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionCancelledAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.OpenProject">
             <summary>
             OpenProject(data: arcor2_arserver_data.events.project.OpenProject.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.OpenProject.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OpenProject.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OpenProject.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OpenProject.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OpenProject.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenProject.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProject.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProject" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProject.#ctor(System.Nullable{IO.Swagger.Model.OpenProject.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.OpenProjectData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProject" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenProject.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenProject.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenProject.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProject.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProject.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProject.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProject.Equals(IO.Swagger.Model.OpenProject)">
             <summary>
             Returns true if OpenProject instances are equal
             </summary>
             <param name="input">Instance of OpenProject to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProject.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ListPackagesResponseAllOf">
             <summary>
             ListPackagesResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.PackageSummary})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListPackagesResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.Equals(IO.Swagger.Model.ListPackagesResponseAllOf)">
             <summary>
             Returns true if ListPackagesResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of ListPackagesResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RemoveConstantRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RemoveConstant.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RemoveConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.Equals(IO.Swagger.Model.RemoveConstantRequest)">
             <summary>
             Returns true if RemoveConstantRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveConstantRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs">
             <summary>
             Args(joints_id: str = 'default')
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs" /> class.
             </summary>
             <param name="jointsId">jointsId (default to "default").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.JointsId">
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs)">
             <summary>
             Returns true if UpdateActionPointJointsUsingRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CopySceneRequestArgs">
             <summary>
             Args(source_id: str, target_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequestArgs" /> class.
             </summary>
             <param name="sourceId">sourceId (required).</param>
             <param name="targetName">targetName (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopySceneRequestArgs.SourceId">
             <summary>
             Gets or Sets SourceId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopySceneRequestArgs.TargetName">
             <summary>
             Gets or Sets TargetName
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.Equals(IO.Swagger.Model.CopySceneRequestArgs)">
             <summary>
             Returns true if CopySceneRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CopySceneRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.OpenProjectAllOf">
             <summary>
             OpenProjectAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.#ctor(IO.Swagger.Model.OpenProjectData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenProjectAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.Equals(IO.Swagger.Model.OpenProjectAllOf)">
             <summary>
             Returns true if OpenProjectAllOf instances are equal
             </summary>
             <param name="input">Instance of OpenProjectAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs">
             <summary>
             Args(action_point_id: str, robot_id: str, name: str = 'default')
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="name">name (default to "default").</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.Equals(IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs)">
             <summary>
             Returns true if AddActionPointJointsUsingRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddActionPointJointsUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RobotMeta">
             <summary>
             Robot meta that could be extracted without creating an instance.
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMeta.RobotTypeEnum">
             <summary>
             Defines RobotType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMeta.RobotTypeEnum.Articulated">
             <summary>
             Enum Articulated for value: articulated
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMeta.RobotTypeEnum.Cartesian">
             <summary>
             Enum Cartesian for value: cartesian
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMeta.RobotTypeEnum.Scara">
             <summary>
             Enum Scara for value: scara
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMeta.RobotType">
             <summary>
             Gets or Sets RobotType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMeta.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMeta" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMeta.#ctor(IO.Swagger.Model.RobotFeatures,IO.Swagger.Model.RobotMeta.RobotTypeEnum,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMeta" /> class.
             </summary>
             <param name="features">features.</param>
             <param name="robotType">robotType (required).</param>
             <param name="type">type (required).</param>
             <param name="urdfPackageFilename">urdfPackageFilename.</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMeta.Features">
             <summary>
             Gets or Sets Features
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMeta.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMeta.UrdfPackageFilename">
             <summary>
             Gets or Sets UrdfPackageFilename
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMeta.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMeta.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMeta.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMeta.Equals(IO.Swagger.Model.RobotMeta)">
             <summary>
             Returns true if RobotMeta instances are equal
             </summary>
             <param name="input">Instance of RobotMeta to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMeta.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMeta.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RemoveFromSceneRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.RemoveFromScene.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RemoveFromSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.Equals(IO.Swagger.Model.RemoveFromSceneRequest)">
             <summary>
             Returns true if RemoveFromSceneRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveFromSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.LogicItemChanged">
             <summary>
             LogicItemChanged(data: arcor2.data.common.LogicItem)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.LogicItemChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItemChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChanged.#ctor(System.Nullable{IO.Swagger.Model.LogicItemChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.LogicItem)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItemChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.LogicItemChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.LogicItemChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.LogicItemChanged.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChanged.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChanged.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChanged.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChanged.Equals(IO.Swagger.Model.LogicItemChanged)">
             <summary>
             Returns true if LogicItemChanged instances are equal
             </summary>
             <param name="input">Instance of LogicItemChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChanged.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CopyProjectRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.CopyProject.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CopyProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.Equals(IO.Swagger.Model.CopyProjectRequest)">
             <summary>
             Returns true if CopyProjectRequest instances are equal
             </summary>
             <param name="input">Instance of CopyProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.StopRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.StopRobotResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopRobotResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopRobotResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopRobotResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopRobotResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotResponse.Equals(IO.Swagger.Model.StopRobotResponse)">
             <summary>
             Returns true if StopRobotResponse instances are equal
             </summary>
             <param name="input">Instance of StopRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RemoveLogicItemRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RemoveLogicItem.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RemoveLogicItemRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveLogicItemRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveLogicItemRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveLogicItemRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.Equals(IO.Swagger.Model.RemoveLogicItemRequest)">
             <summary>
             Returns true if RemoveLogicItemRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveLogicItemRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointOrientationUsingRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.Equals(IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest)">
             <summary>
             Returns true if UpdateActionPointOrientationUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf">
             <summary>
             UpdateActionPointJointsUsingRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointJointsUsingRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.SystemInfoRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.Equals(IO.Swagger.Model.SystemInfoRequest)">
             <summary>
             Returns true if SystemInfoRequest instances are equal
             </summary>
             <param name="input">Instance of SystemInfoRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.BuildProjectRequest">
             <summary>
             Calls Build service to generate execution package and uploads it to         the Execution service.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.BuildProjectRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.Equals(IO.Swagger.Model.BuildProjectRequest)">
             <summary>
             Returns true if BuildProjectRequest instances are equal
             </summary>
             <param name="input">Instance of BuildProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CameraColorParametersRequestAllOf">
             <summary>
             CameraColorParametersRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.#ctor(IO.Swagger.Model.CameraColorParametersRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.Equals(IO.Swagger.Model.CameraColorParametersRequestAllOf)">
             <summary>
             Returns true if CameraColorParametersRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CameraColorParametersRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.TemporaryPackageRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TemporaryPackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TemporaryPackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.Equals(IO.Swagger.Model.TemporaryPackageRequest)">
             <summary>
             Returns true if TemporaryPackageRequest instances are equal
             </summary>
             <param name="input">Instance of TemporaryPackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ProjectMeta">
             <summary>
             Provides data about the project embedded in the execution package.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectMeta.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectMeta" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectMeta.#ctor(System.String,System.DateTime,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectMeta" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="modified">Last modification. (required).</param>
             <param name="name">name (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectMeta.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectMeta.Modified">
             <summary>
             Last modification.
             </summary>
             <value>Last modification.</value>
            </member>
        <member name="P:IO.Swagger.Model.ProjectMeta.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectMeta.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectMeta.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectMeta.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectMeta.Equals(IO.Swagger.Model.ProjectMeta)">
             <summary>
             Returns true if ProjectMeta instances are equal
             </summary>
             <param name="input">Instance of ProjectMeta to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectMeta.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectMeta.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameObjectRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.RenameArgs, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.Equals(IO.Swagger.Model.RenameObjectRequest)">
             <summary>
             Returns true if RenameObjectRequest instances are equal
             </summary>
             <param name="input">Instance of RenameObjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CopyActionPointRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.CopyActionPoint.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CopyActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.Equals(IO.Swagger.Model.CopyActionPointRequest)">
             <summary>
             Returns true if CopyActionPointRequest instances are equal
             </summary>
             <param name="input">Instance of CopyActionPointRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RegisterForRobotEventRequestAllOf">
             <summary>
             RegisterForRobotEventRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.#ctor(IO.Swagger.Model.RegisterForRobotEventRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.Equals(IO.Swagger.Model.RegisterForRobotEventRequestAllOf)">
             <summary>
             Returns true if RegisterForRobotEventRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RegisterForRobotEventRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.SceneChangedAllOf">
             <summary>
             SceneChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.#ctor(IO.Swagger.Model.BareScene)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneChangedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.Equals(IO.Swagger.Model.SceneChangedAllOf)">
             <summary>
             Returns true if SceneChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of SceneChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetActionsResponseAllOf">
             <summary>
             GetActionsResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ObjectAction})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.Equals(IO.Swagger.Model.GetActionsResponseAllOf)">
             <summary>
             Returns true if GetActionsResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of GetActionsResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.MeshAllOf">
             <summary>
             MeshAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MeshAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Pose},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MeshAllOf" /> class.
             </summary>
             <param name="focusPoints">focusPoints.</param>
             <param name="uri">uri (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MeshAllOf.FocusPoints">
             <summary>
             Gets or Sets FocusPoints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MeshAllOf.Uri">
             <summary>
             Gets or Sets Uri
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.Equals(IO.Swagger.Model.MeshAllOf)">
             <summary>
             Returns true if MeshAllOf instances are equal
             </summary>
             <param name="input">Instance of MeshAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.MeshAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.MoveToJointsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.MoveToJoints.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.MoveToJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.Equals(IO.Swagger.Model.MoveToJointsRequest)">
             <summary>
             Returns true if MoveToJointsRequest instances are equal
             </summary>
             <param name="input">Instance of MoveToJointsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ForwardKinematicsRequestArgs">
             <summary>
             Args(robot_id: str, end_effector_id: str, joints: List[arcor2.data.common.Joint])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Joint},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequestArgs" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="joints">joints (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequestArgs.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequestArgs.Joints">
             <summary>
             Gets or Sets Joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.Equals(IO.Swagger.Model.ForwardKinematicsRequestArgs)">
             <summary>
             Returns true if ForwardKinematicsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of ForwardKinematicsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.OverrideUpdated">
             <summary>
             OverrideUpdated(data: arcor2.data.common.Parameter)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OverrideUpdated.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdated.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OverrideUpdated" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdated.#ctor(System.Nullable{IO.Swagger.Model.OverrideUpdated.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.Parameter)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OverrideUpdated" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OverrideUpdated.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OverrideUpdated.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OverrideUpdated.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdated.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdated.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdated.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdated.Equals(IO.Swagger.Model.OverrideUpdated)">
             <summary>
             Returns true if OverrideUpdated instances are equal
             </summary>
             <param name="input">Instance of OverrideUpdated to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdated.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdated.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetGrippersResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetGrippersResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetGrippersResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetGrippersResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetGrippersResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetGrippersResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersResponse.Equals(IO.Swagger.Model.GetGrippersResponse)">
             <summary>
             Returns true if GetGrippersResponse instances are equal
             </summary>
             <param name="input">Instance of GetGrippersResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ActionPointAllOf">
             <summary>
             ActionPointAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Action},System.Collections.Generic.List{IO.Swagger.Model.NamedOrientation},System.Collections.Generic.List{IO.Swagger.Model.ProjectRobotJoints})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPointAllOf" /> class.
             </summary>
             <param name="actions">actions.</param>
             <param name="orientations">orientations.</param>
             <param name="robotJoints">robotJoints.</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointAllOf.Actions">
             <summary>
             Gets or Sets Actions
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointAllOf.Orientations">
             <summary>
             Gets or Sets Orientations
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointAllOf.RobotJoints">
             <summary>
             Gets or Sets RobotJoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointAllOf.Equals(IO.Swagger.Model.ActionPointAllOf)">
             <summary>
             Returns true if ActionPointAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionPointAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameActionPointOrientationResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.Equals(IO.Swagger.Model.RenameActionPointOrientationResponse)">
             <summary>
             Returns true if RenameActionPointOrientationResponse instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointOrientationResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RobotFeatures">
             <summary>
             Names of the robot features must match names of the methods.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotFeatures.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotFeatures" /> class.
             </summary>
             <param name="forwardKinematics">forwardKinematics (default to false).</param>
             <param name="handTeaching">handTeaching (default to false).</param>
             <param name="inverseKinematics">inverseKinematics (default to false).</param>
             <param name="moveToJoints">moveToJoints (default to false).</param>
             <param name="moveToPose">moveToPose (default to false).</param>
             <param name="stop">stop (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotFeatures.ForwardKinematics">
             <summary>
             Gets or Sets ForwardKinematics
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotFeatures.HandTeaching">
             <summary>
             Gets or Sets HandTeaching
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotFeatures.InverseKinematics">
             <summary>
             Gets or Sets InverseKinematics
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotFeatures.MoveToJoints">
             <summary>
             Gets or Sets MoveToJoints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotFeatures.MoveToPose">
             <summary>
             Gets or Sets MoveToPose
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotFeatures.Stop">
             <summary>
             Gets or Sets Stop
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotFeatures.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotFeatures.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotFeatures.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotFeatures.Equals(IO.Swagger.Model.RobotFeatures)">
             <summary>
             Returns true if RobotFeatures instances are equal
             </summary>
             <param name="input">Instance of RobotFeatures to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotFeatures.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotFeatures.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ProjectsWithSceneRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectsWithSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectsWithSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectsWithSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectsWithSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectsWithSceneRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.Equals(IO.Swagger.Model.ProjectsWithSceneRequest)">
             <summary>
             Returns true if ProjectsWithSceneRequest instances are equal
             </summary>
             <param name="input">Instance of ProjectsWithSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CylinderAllOf">
             <summary>
             CylinderAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CylinderAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.#ctor(System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CylinderAllOf" /> class.
             </summary>
             <param name="height">height (required).</param>
             <param name="radius">radius (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CylinderAllOf.Height">
             <summary>
             Gets or Sets Height
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CylinderAllOf.Radius">
             <summary>
             Gets or Sets Radius
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.Equals(IO.Swagger.Model.CylinderAllOf)">
             <summary>
             Returns true if CylinderAllOf instances are equal
             </summary>
             <param name="input">Instance of CylinderAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CameraParameters">
             <summary>
             CameraParameters(fx: float, fy: float, cx: float, cy: float, dist_coefs: List[float])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraParameters" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.#ctor(System.Decimal,System.Decimal,System.Collections.Generic.List{System.Decimal},System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraParameters" /> class.
             </summary>
             <param name="cx">cx (required).</param>
             <param name="cy">cy (required).</param>
             <param name="distCoefs">distCoefs (required).</param>
             <param name="fx">fx (required).</param>
             <param name="fy">fy (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraParameters.Cx">
             <summary>
             Gets or Sets Cx
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraParameters.Cy">
             <summary>
             Gets or Sets Cy
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraParameters.DistCoefs">
             <summary>
             Gets or Sets DistCoefs
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraParameters.Fx">
             <summary>
             Gets or Sets Fx
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraParameters.Fy">
             <summary>
             Gets or Sets Fy
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.Equals(IO.Swagger.Model.CameraParameters)">
             <summary>
             Returns true if CameraParameters instances are equal
             </summary>
             <param name="input">Instance of CameraParameters to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraParameters.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ListScenesResponseData">
             <summary>
             Data(id: str, name: str, desc: Union[str, NoneType], modified: Union[datetime.datetime, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponseData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseData.#ctor(System.String,System.String,System.String,System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponseData" /> class.
             </summary>
             <param name="desc">desc.</param>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="modified">modified.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponseData.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponseData.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponseData.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponseData.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseData.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseData.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseData.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseData.Equals(IO.Swagger.Model.ListScenesResponseData)">
             <summary>
             Returns true if ListScenesResponseData instances are equal
             </summary>
             <param name="input">Instance of ListScenesResponseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseData.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateConstantRequestAllOf">
             <summary>
             UpdateConstantRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.#ctor(IO.Swagger.Model.UpdateConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.Equals(IO.Swagger.Model.UpdateConstantRequestAllOf)">
             <summary>
             Returns true if UpdateConstantRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateConstantRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameActionPointJointsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RenameActionPointJoints.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameActionPointJointsRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.Equals(IO.Swagger.Model.RenameActionPointJointsRequest)">
             <summary>
             Returns true if RenameActionPointJointsRequest instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointJointsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateObjectPoseResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.Equals(IO.Swagger.Model.UpdateObjectPoseResponse)">
             <summary>
             Returns true if UpdateObjectPoseResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf">
             <summary>
             UpdateSceneDescriptionRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.#ctor(IO.Swagger.Model.UpdateSceneDescriptionRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.Equals(IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf)">
             <summary>
             Returns true if UpdateSceneDescriptionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateSceneDescriptionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ActionChangedAllOf">
             <summary>
             ActionChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.#ctor(IO.Swagger.Model.BareAction)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionChangedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.Equals(IO.Swagger.Model.ActionChangedAllOf)">
             <summary>
             Returns true if ActionChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CalibrateCameraRequestArgs">
             <summary>
             Args(id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequestArgs" /> class.
             </summary>
             <param name="id">Camera id. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraRequestArgs.Id">
             <summary>
             Camera id.
             </summary>
             <value>Camera id.</value>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.Equals(IO.Swagger.Model.CalibrateCameraRequestArgs)">
             <summary>
             Returns true if CalibrateCameraRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CalibrateCameraRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.StopPackageRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopPackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopPackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.StopPackageRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopPackageRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopPackageRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageRequest.Equals(IO.Swagger.Model.StopPackageRequest)">
             <summary>
             Returns true if StopPackageRequest instances are equal
             </summary>
             <param name="input">Instance of StopPackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopPackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ProjectAllOf">
             <summary>
             ProjectAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ActionPoint},System.Collections.Generic.List{IO.Swagger.Model.ProjectConstant},System.Collections.Generic.List{IO.Swagger.Model.ProjectFunction},System.Collections.Generic.List{IO.Swagger.Model.LogicItem},System.Collections.Generic.List{IO.Swagger.Model.SceneObjectOverride})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectAllOf" /> class.
             </summary>
             <param name="actionPoints">actionPoints.</param>
             <param name="constants">constants.</param>
             <param name="functions">functions.</param>
             <param name="logic">logic.</param>
             <param name="objectOverrides">objectOverrides.</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectAllOf.ActionPoints">
             <summary>
             Gets or Sets ActionPoints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectAllOf.Constants">
             <summary>
             Gets or Sets Constants
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectAllOf.Functions">
             <summary>
             Gets or Sets Functions
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectAllOf.Logic">
             <summary>
             Gets or Sets Logic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectAllOf.ObjectOverrides">
             <summary>
             Gets or Sets ObjectOverrides
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.Equals(IO.Swagger.Model.ProjectAllOf)">
             <summary>
             Returns true if ProjectAllOf instances are equal
             </summary>
             <param name="input">Instance of ProjectAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CameraColorParametersResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2.data.camera.CameraParameters, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.CameraParameters)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.Equals(IO.Swagger.Model.CameraColorParametersResponse)">
             <summary>
             Returns true if CameraColorParametersResponse instances are equal
             </summary>
             <param name="input">Instance of CameraColorParametersResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CancelActionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CancelActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CancelActionResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CancelActionResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CancelActionResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CancelActionResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CancelActionResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CancelActionResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionResponse.Equals(IO.Swagger.Model.CancelActionResponse)">
             <summary>
             Returns true if CancelActionResponse instances are equal
             </summary>
             <param name="input">Instance of CancelActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ObjectTypeMeta">
             <summary>
             Metadata about object type, as it is used in server API.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectTypeMeta" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.#ctor(System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,IO.Swagger.Model.ObjectModel,System.String,System.Collections.Generic.List{IO.Swagger.Model.ParameterMeta},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectTypeMeta" /> class.
             </summary>
             <param name="_abstract">_abstract (default to false).</param>
             <param name="_base">_base (default to "").</param>
             <param name="builtIn">builtIn (default to false).</param>
             <param name="description">description (default to "").</param>
             <param name="disabled">disabled (default to false).</param>
             <param name="hasPose">hasPose (default to false).</param>
             <param name="needsParentType">needsParentType.</param>
             <param name="objectModel">objectModel.</param>
             <param name="problem">problem.</param>
             <param name="settings">settings.</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Abstract">
             <summary>
             Gets or Sets Abstract
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Base">
             <summary>
             Gets or Sets Base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.BuiltIn">
             <summary>
             Gets or Sets BuiltIn
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Disabled">
             <summary>
             Gets or Sets Disabled
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.HasPose">
             <summary>
             Gets or Sets HasPose
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.NeedsParentType">
             <summary>
             Gets or Sets NeedsParentType
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.ObjectModel">
             <summary>
             Gets or Sets ObjectModel
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Problem">
             <summary>
             Gets or Sets Problem
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Settings">
             <summary>
             Gets or Sets Settings
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.Equals(IO.Swagger.Model.ObjectTypeMeta)">
             <summary>
             Returns true if ObjectTypeMeta instances are equal
             </summary>
             <param name="input">Instance of ObjectTypeMeta to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.DeleteSceneRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.Equals(IO.Swagger.Model.DeleteSceneRequest)">
             <summary>
             Returns true if DeleteSceneRequest instances are equal
             </summary>
             <param name="input">Instance of DeleteSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ListProjectsResponseData">
             <summary>
             Data(id: str, name: str, desc: Union[str, NoneType], scene_id: str, valid: bool = False, executable: bool = False, problems: List[str] = &lt;factory&gt;, modified: Union[datetime.datetime, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponseData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.#ctor(System.String,System.String,System.String,System.Boolean,System.DateTime,System.Collections.Generic.List{System.String},System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponseData" /> class.
             </summary>
             <param name="desc">desc.</param>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="executable">Logic is defined and valid. (default to false).</param>
             <param name="modified">modified.</param>
             <param name="problems">problems.</param>
             <param name="sceneId">sceneId (required).</param>
             <param name="valid">Objects and their actions exists. (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Executable">
             <summary>
             Logic is defined and valid.
             </summary>
             <value>Logic is defined and valid.</value>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Problems">
             <summary>
             Gets or Sets Problems
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.SceneId">
             <summary>
             Gets or Sets SceneId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseData.Valid">
             <summary>
             Objects and their actions exists.
             </summary>
             <value>Objects and their actions exists.</value>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.Equals(IO.Swagger.Model.ListProjectsResponseData)">
             <summary>
             Returns true if ListProjectsResponseData instances are equal
             </summary>
             <param name="input">Instance of ListProjectsResponseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RemoveActionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.Equals(IO.Swagger.Model.RemoveActionResponse)">
             <summary>
             Returns true if RemoveActionResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs">
             <summary>
             Args(action_point_id: str, robot: arcor2.data.rpc.common.RobotArg)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.#ctor(System.String,IO.Swagger.Model.RobotArg)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="robot">robot (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.Robot">
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs)">
             <summary>
             Returns true if UpdateActionPointUsingRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.MarkersCornersRequestAllOf">
             <summary>
             MarkersCornersRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.#ctor(IO.Swagger.Model.MarkersCornersRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.Equals(IO.Swagger.Model.MarkersCornersRequestAllOf)">
             <summary>
             Returns true if MarkersCornersRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of MarkersCornersRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameActionPointResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.Equals(IO.Swagger.Model.RenameActionPointResponse)">
             <summary>
             Returns true if RenameActionPointResponse instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.MoveToPoseRequestArgs">
             <summary>
             Args(robot_id: str, end_effector_id: str, speed: float, position: Union[arcor2.data.common.Position, NoneType], orientation: Union[arcor2.data.common.Orientation, NoneType], safe: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.#ctor(System.String,IO.Swagger.Model.Orientation,IO.Swagger.Model.Position,System.String,System.Boolean,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequestArgs" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="orientation">orientation.</param>
             <param name="position">position.</param>
             <param name="robotId">robotId (required).</param>
             <param name="safe">safe (default to true).</param>
             <param name="speed">speed (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.Orientation">
             <summary>
             Gets or Sets Orientation
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.Position">
             <summary>
             Gets or Sets Position
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestArgs.Speed">
             <summary>
             Gets or Sets Speed
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.Equals(IO.Swagger.Model.MoveToPoseRequestArgs)">
             <summary>
             Returns true if MoveToPoseRequestArgs instances are equal
             </summary>
             <param name="input">Instance of MoveToPoseRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddConstantRequestAllOf">
             <summary>
             AddConstantRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.#ctor(IO.Swagger.Model.AddConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfo.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfo.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfo.Equals(IO.Swagger.Model.PackageInfo)">
             <summary>
             Returns true if PackageInfo instances are equal
             </summary>
             <param name="input">Instance of PackageInfo to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfo.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.Equals(IO.Swagger.Model.AddConstantRequestAllOf)">
             <summary>
             Returns true if AddConstantRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddConstantRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfo.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ShowMainScreenAllOf">
             <summary>
             ShowMainScreenAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreenAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.#ctor(IO.Swagger.Model.ShowMainScreenData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreenAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.StopRobotRequestArgs">
             <summary>
             Args(robot_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ShowMainScreenAllOf.Data">
=======
        <member name="P:IO.Swagger.Model.StopRobotRequestArgs.RobotId">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.Equals(IO.Swagger.Model.ShowMainScreenAllOf)">
             <summary>
             Returns true if ShowMainScreenAllOf instances are equal
             </summary>
             <param name="input">Instance of ShowMainScreenAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.Equals(IO.Swagger.Model.StopRobotRequestArgs)">
             <summary>
             Returns true if StopRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of StopRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveFromSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneResponse.Id">
=======
        <member name="T:IO.Swagger.Model.SceneSaved">
             <summary>
             SceneSaved()
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneSaved.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneSaved.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneSaved.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveFromSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneResponse.Data">
=======
        <member name="F:IO.Swagger.Model.SceneSaved.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneSaved.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneSaved.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneSaved.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneSaved" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneSaved.#ctor(System.Nullable{IO.Swagger.Model.SceneSaved.ChangeTypeEnum},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneSaved" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneSaved.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneSaved.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneSaved.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.SceneSaved.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneSaved.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneSaved.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.Equals(IO.Swagger.Model.RemoveFromSceneResponse)">
             <summary>
             Returns true if RemoveFromSceneResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveFromSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneSaved.Equals(IO.Swagger.Model.SceneSaved)">
             <summary>
             Returns true if SceneSaved instances are equal
             </summary>
             <param name="input">Instance of SceneSaved to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneSaved.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneSaved.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionPointChanged">
=======
        <member name="T:IO.Swagger.Model.ActionParamValuesRequestAllOf">
             <summary>
             ActionParamValuesRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.#ctor(IO.Swagger.Model.ActionParamValuesRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesRequestAllOf.Args">
>>>>>>> devel
             <summary>
             ActionPointChanged(data: arcor2.data.common.BareActionPoint)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum.Add">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum.Updatebase">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.Equals(IO.Swagger.Model.ActionParamValuesRequestAllOf)">
             <summary>
             Returns true if ActionParamValuesRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionParamValuesRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionPointChanged.ChangeType">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPointChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChanged.#ctor(System.Nullable{IO.Swagger.Model.ActionPointChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.BareActionPoint)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPointChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointChanged.Event">
             <summary>
             Gets or Sets Event
=======
        <member name="T:IO.Swagger.Model.RegisterForRobotEventResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionPointChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointChanged.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChanged.ToString">
=======
        <member name="P:IO.Swagger.Model.RegisterForRobotEventResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointChanged.ToJson">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointChanged.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointChanged.Equals(IO.Swagger.Model.ActionPointChanged)">
             <summary>
             Returns true if ActionPointChanged instances are equal
             </summary>
             <param name="input">Instance of ActionPointChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChanged.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.Equals(IO.Swagger.Model.RegisterForRobotEventResponse)">
             <summary>
             Returns true if RegisterForRobotEventResponse instances are equal
             </summary>
             <param name="input">Instance of RegisterForRobotEventResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RegisterForRobotEventResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeleteSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteSceneResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateSceneDescriptionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
<<<<<<< HEAD
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneResponse.Id">
=======
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteSceneResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteSceneResponse.Response">
=======
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteSceneResponse.Result">
=======
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteSceneResponse.Data">
=======
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.Equals(IO.Swagger.Model.DeleteSceneResponse)">
             <summary>
             Returns true if DeleteSceneResponse instances are equal
             </summary>
             <param name="input">Instance of DeleteSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.Equals(IO.Swagger.Model.UpdateSceneDescriptionResponse)">
             <summary>
             Returns true if UpdateSceneDescriptionResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateSceneDescriptionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PackageInfoData">
             <summary>
             Data(package_id: str, package_name: str, scene: arcor2.data.common.Scene, project: arcor2.data.common.Project, collision_models: arcor2.data.object_type.CollisionModels = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfoData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoData.#ctor(IO.Swagger.Model.CollisionModels,System.String,System.String,IO.Swagger.Model.Project,IO.Swagger.Model.Scene)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfoData" /> class.
             </summary>
             <param name="collisionModels">collisionModels.</param>
             <param name="packageId">packageId (required).</param>
             <param name="packageName">packageName (required).</param>
             <param name="project">project (required).</param>
             <param name="scene">scene (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfoData.CollisionModels">
             <summary>
             Gets or Sets CollisionModels
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfoData.PackageId">
             <summary>
             Gets or Sets PackageId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfoData.PackageName">
             <summary>
             Gets or Sets PackageName
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfoData.Project">
             <summary>
             Gets or Sets Project
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfoData.Scene">
             <summary>
             Gets or Sets Scene
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoData.ToString">
=======
        <member name="T:IO.Swagger.Model.ParameterMeta">
             <summary>
             ParameterMeta(name: str, type: str, dynamic_value: bool = False, dynamic_value_parents: Union[Set[str], NoneType] = None, description: Union[str, NoneType] = None, default_value: Union[str, NoneType] = None, extra: Union[str, NoneType] = None, children: List[ForwardRef('ParameterMeta')] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ParameterMeta.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ParameterMeta" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ParameterMeta.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ParameterMeta},System.String,System.String,System.Boolean,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ParameterMeta" /> class.
             </summary>
             <param name="children">children.</param>
             <param name="defaultValue">defaultValue.</param>
             <param name="description">description.</param>
             <param name="dynamicValue">dynamicValue (default to false).</param>
             <param name="dynamicValueParents">dynamicValueParents.</param>
             <param name="extra">extra.</param>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.Children">
             <summary>
             Gets or Sets Children
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.DefaultValue">
             <summary>
             Gets or Sets DefaultValue
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.DynamicValue">
             <summary>
             Gets or Sets DynamicValue
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.DynamicValueParents">
             <summary>
             Gets or Sets DynamicValueParents
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.Extra">
             <summary>
             Gets or Sets Extra
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ParameterMeta.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfoData.ToJson">
=======
        <member name="M:IO.Swagger.Model.ParameterMeta.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfoData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ParameterMeta.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfoData.Equals(IO.Swagger.Model.PackageInfoData)">
             <summary>
             Returns true if PackageInfoData instances are equal
             </summary>
             <param name="input">Instance of PackageInfoData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ParameterMeta.Equals(IO.Swagger.Model.ParameterMeta)">
             <summary>
             Returns true if ParameterMeta instances are equal
             </summary>
             <param name="input">Instance of ParameterMeta to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ParameterMeta.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfoData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ParameterMeta.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OpenSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenSceneResponse.Id">
=======
        <member name="T:IO.Swagger.Model.UploadPackageRequest">
             <summary>
             Request(id: int, args: arcor2_execution_data.rpc.UploadPackage.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UploadPackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenSceneResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.UploadPackageRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.OpenSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenSceneResponse.Data">
=======
        <member name="P:IO.Swagger.Model.UploadPackageRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneResponse.Equals(IO.Swagger.Model.OpenSceneResponse)">
             <summary>
             Returns true if OpenSceneResponse instances are equal
             </summary>
             <param name="input">Instance of OpenSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequest.Equals(IO.Swagger.Model.UploadPackageRequest)">
             <summary>
             Returns true if UploadPackageRequest instances are equal
             </summary>
             <param name="input">Instance of UploadPackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UploadPackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf">
             <summary>
             UpdateActionPointPositionRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointPositionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.Corner">
             <summary>
             Corner(x: float, y: float)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Corner.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Corner" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Corner.#ctor(System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Corner" /> class.
>>>>>>> devel
             </summary>
             <param name="x">x (required).</param>
             <param name="y">y (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.Corner.X">
>>>>>>> devel
             <summary>
             Gets or Sets X
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.DryRun">
=======
        <member name="P:IO.Swagger.Model.Corner.Y">
>>>>>>> devel
             <summary>
             Gets or Sets Y
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.Corner.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.Corner.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Corner.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointPositionRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointPositionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointPositionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Corner.Equals(IO.Swagger.Model.Corner)">
             <summary>
             Returns true if Corner instances are equal
             </summary>
             <param name="input">Instance of Corner to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Corner.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Corner.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.FocusObjectDoneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2_arserver_data.rpc.objects.FocusObject.Response.Data, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectDoneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.FocusObjectResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectDoneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.ToString">
=======
        <member name="T:IO.Swagger.Model.FocusObjectResponseData">
             <summary>
             Data(finished_indexes: List[int])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectResponseData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.#ctor(System.Collections.Generic.List{System.Int32})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectResponseData" /> class.
             </summary>
             <param name="finishedIndexes">finishedIndexes (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectResponseData.FinishedIndexes">
             <summary>
             Gets or Sets FinishedIndexes
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.Equals(IO.Swagger.Model.FocusObjectDoneResponse)">
             <summary>
             Returns true if FocusObjectDoneResponse instances are equal
             </summary>
             <param name="input">Instance of FocusObjectDoneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.Equals(IO.Swagger.Model.FocusObjectResponseData)">
             <summary>
             Returns true if FocusObjectResponseData instances are equal
             </summary>
             <param name="input">Instance of FocusObjectResponseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneObjectChanged">
             <summary>
             SceneObjectChanged(data: arcor2.data.common.SceneObject)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum">
=======
        <member name="T:IO.Swagger.Model.RenameSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.ToString">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum.Add">
=======
        <member name="M:IO.Swagger.Model.RenameSceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.RenameSceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum.Updatebase">
=======
        <member name="M:IO.Swagger.Model.RenameSceneResponse.Equals(IO.Swagger.Model.RenameSceneResponse)">
             <summary>
             Returns true if RenameSceneResponse instances are equal
             </summary>
             <param name="input">Instance of RenameSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneObjectChanged.ChangeType">
=======
        <member name="M:IO.Swagger.Model.RenameSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChanged.#ctor(System.Nullable{IO.Swagger.Model.SceneObjectChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.SceneObject)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectChanged" /> class.
=======
        <member name="T:IO.Swagger.Model.Model">
             <summary>
             Model(id: str)
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneObjectChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectChanged.ParentId">
             <summary>
             Gets or Sets ParentId
=======
        <member name="M:IO.Swagger.Model.Model.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Model" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Model.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Model" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneObjectChanged.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChanged.ToString">
=======
        <member name="P:IO.Swagger.Model.Model.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Model.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectChanged.ToJson">
=======
        <member name="M:IO.Swagger.Model.Model.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectChanged.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Model.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectChanged.Equals(IO.Swagger.Model.SceneObjectChanged)">
             <summary>
             Returns true if SceneObjectChanged instances are equal
             </summary>
             <param name="input">Instance of SceneObjectChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChanged.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Model.Equals(IO.Swagger.Model.Model)">
             <summary>
             Returns true if Model instances are equal
             </summary>
             <param name="input">Instance of Model to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Model.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Model.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetEndEffectorsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.GetEndEffectors.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetEndEffectorsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorsRequest.Id">
=======
        <member name="T:IO.Swagger.Model.CloseSceneRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.CloseScene.Request.Args = &lt;factory&gt;, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CloseSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args.</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetEndEffectorsRequest.Request">
=======
        <member name="P:IO.Swagger.Model.CloseSceneRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetEndEffectorsRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.Equals(IO.Swagger.Model.GetEndEffectorsRequest)">
             <summary>
             Returns true if GetEndEffectorsRequest instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequest.Equals(IO.Swagger.Model.CloseSceneRequest)">
             <summary>
             Returns true if CloseSceneRequest instances are equal
             </summary>
             <param name="input">Instance of CloseSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CloseSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameActionPointOrientationRequestArgs">
             <summary>
             Args(orientation_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequestArgs" /> class.
             </summary>
             <param name="newName">newName (required).</param>
             <param name="orientationId">orientationId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.RenameArgs">
             <summary>
             RenameArgs(id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="newName">newName (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameArgs.NewName">
             <summary>
             Gets or Sets NewName
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.Equals(IO.Swagger.Model.RenameActionPointOrientationRequestArgs)">
             <summary>
             Returns true if RenameActionPointOrientationRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointOrientationRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameArgs.Equals(IO.Swagger.Model.RenameArgs)">
             <summary>
             Returns true if RenameArgs instances are equal
             </summary>
             <param name="input">Instance of RenameArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameObjectResponse">
=======
        <member name="T:IO.Swagger.Model.ExecuteActionResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameObjectResponse.Id">
=======
        <member name="P:IO.Swagger.Model.ExecuteActionResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameObjectResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.ExecuteActionResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameObjectResponse.Response">
=======
        <member name="P:IO.Swagger.Model.ExecuteActionResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameObjectResponse.Result">
=======
        <member name="P:IO.Swagger.Model.ExecuteActionResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameObjectResponse.Data">
=======
        <member name="P:IO.Swagger.Model.ExecuteActionResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectResponse.Equals(IO.Swagger.Model.RenameObjectResponse)">
             <summary>
             Returns true if RenameObjectResponse instances are equal
             </summary>
             <param name="input">Instance of RenameObjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.Equals(IO.Swagger.Model.ExecuteActionResponse)">
             <summary>
             Returns true if ExecuteActionResponse instances are equal
             </summary>
             <param name="input">Instance of ExecuteActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectExceptionAllOf">
             <summary>
             ProjectExceptionAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectExceptionAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.#ctor(IO.Swagger.Model.ProjectExceptionData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectExceptionAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectExceptionAllOf.Data">
=======
        <member name="T:IO.Swagger.Model.ActionPointChangedAllOf">
             <summary>
             ActionPointChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPointChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.#ctor(IO.Swagger.Model.BareActionPoint)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPointChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointChangedAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.Equals(IO.Swagger.Model.ProjectExceptionAllOf)">
             <summary>
             Returns true if ProjectExceptionAllOf instances are equal
             </summary>
             <param name="input">Instance of ProjectExceptionAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.Equals(IO.Swagger.Model.ActionPointChangedAllOf)">
             <summary>
             Returns true if ActionPointChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionPointChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionPointChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionStateBeforeData">
             <summary>
             Data(action_id: str, parameters: List[str])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBeforeData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.#ctor(System.String,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBeforeData" /> class.
             </summary>
             <param name="actionId">actionId (required).</param>
             <param name="parameters">parameters (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateBeforeData.ActionId">
             <summary>
             Gets or Sets ActionId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateBeforeData.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.ToString">
=======
        <member name="T:IO.Swagger.Model.HandTeachingModeRequestAllOf">
             <summary>
             HandTeachingModeRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.#ctor(IO.Swagger.Model.HandTeachingModeRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.ToJson">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.Equals(IO.Swagger.Model.ActionStateBeforeData)">
             <summary>
             Returns true if ActionStateBeforeData instances are equal
             </summary>
             <param name="input">Instance of ActionStateBeforeData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.Equals(IO.Swagger.Model.HandTeachingModeRequestAllOf)">
             <summary>
             Returns true if HandTeachingModeRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionStateAfter">
             <summary>
             ActionStateAfter(data: arcor2.data.events.ActionStateAfter.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateAfter.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfter.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfter" /> class.
=======
        <member name="T:IO.Swagger.Model.RobotMoveToJointsAllOf">
             <summary>
             RobotMoveToJointsAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.#ctor(IO.Swagger.Model.RobotMoveToJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.Equals(IO.Swagger.Model.RobotMoveToJointsAllOf)">
             <summary>
             Returns true if RobotMoveToJointsAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToJointsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateAction.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfter.#ctor(System.Nullable{IO.Swagger.Model.ActionStateAfter.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ActionStateAfterData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfter" /> class.
=======
        <member name="P:IO.Swagger.Model.UpdateActionRequest.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionStateAfter.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateAfter.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateAfter.Data">
=======
        <member name="P:IO.Swagger.Model.UpdateActionRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfter.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfter.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfter.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfter.Equals(IO.Swagger.Model.ActionStateAfter)">
             <summary>
             Returns true if ActionStateAfter instances are equal
             </summary>
             <param name="input">Instance of ActionStateAfter to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfter.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequest.Equals(IO.Swagger.Model.UpdateActionRequest)">
             <summary>
             Returns true if UpdateActionRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfter.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NewProjectRequest">
=======
        <member name="T:IO.Swagger.Model.ListPackagesResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: List[arcor2_execution_data.common.PackageSummary] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListPackagesResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.PackageSummary})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListPackagesResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponse.Equals(IO.Swagger.Model.ListPackagesResponse)">
             <summary>
             Returns true if ListPackagesResponse instances are equal
             </summary>
             <param name="input">Instance of ListPackagesResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.NewProject.Request.Args, dry_run: bool = False)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequest.#ctor">
=======
        <member name="M:IO.Swagger.Model.ListPackagesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.NewProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.CancelActionRequest">
             <summary>
             Request(id: int)
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewProjectRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.CancelActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CancelActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CancelActionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CancelActionRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CancelActionRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CancelActionRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.CancelActionRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CancelActionRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequest.Equals(IO.Swagger.Model.NewProjectRequest)">
             <summary>
             Returns true if NewProjectRequest instances are equal
             </summary>
             <param name="input">Instance of NewProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CancelActionRequest.Equals(IO.Swagger.Model.CancelActionRequest)">
             <summary>
             Returns true if CancelActionRequest instances are equal
             </summary>
             <param name="input">Instance of CancelActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CancelActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionExecution">
             <summary>
             Used to notify beginning of the action execution triggered while editing     a project.
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ActionExecution.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionExecution.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionExecution.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionExecution.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionExecution.ChangeTypeEnum.Updatebase">
=======
        <member name="T:IO.Swagger.Model.SaveProjectRequest">
>>>>>>> devel
             <summary>
             Request(id: int)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionExecution.ChangeType">
=======
        <member name="M:IO.Swagger.Model.SaveProjectRequest.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveProjectRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecution.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionExecution" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecution.#ctor(System.Nullable{IO.Swagger.Model.ActionExecution.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ActionExecutionData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionExecution" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionExecution.Event">
=======
        <member name="M:IO.Swagger.Model.SaveProjectRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveProjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.SaveProjectRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionExecution.ParentId">
=======
        <member name="P:IO.Swagger.Model.SaveProjectRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionExecution.Data">
=======
        <member name="P:IO.Swagger.Model.SaveProjectRequest.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecution.ToString">
=======
        <member name="M:IO.Swagger.Model.SaveProjectRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecution.ToJson">
=======
        <member name="M:IO.Swagger.Model.SaveProjectRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecution.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SaveProjectRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecution.Equals(IO.Swagger.Model.ActionExecution)">
             <summary>
             Returns true if ActionExecution instances are equal
             </summary>
             <param name="input">Instance of ActionExecution to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecution.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SaveProjectRequest.Equals(IO.Swagger.Model.SaveProjectRequest)">
             <summary>
             Returns true if SaveProjectRequest instances are equal
             </summary>
             <param name="input">Instance of SaveProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SaveProjectRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecution.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SaveProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MarkersCornersResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_calibration_data.MarkerCorners], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.MarkerCorners})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.ResumePackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResumePackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResumePackageResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
<<<<<<< HEAD
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersResponse.Id">
=======
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ResumePackageResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MarkersCornersResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.ResumePackageResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MarkersCornersResponse.Response">
=======
        <member name="P:IO.Swagger.Model.ResumePackageResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MarkersCornersResponse.Result">
=======
        <member name="P:IO.Swagger.Model.ResumePackageResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MarkersCornersResponse.Data">
=======
        <member name="P:IO.Swagger.Model.ResumePackageResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.ResumePackageResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ResumePackageResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ResumePackageResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.Equals(IO.Swagger.Model.MarkersCornersResponse)">
             <summary>
             Returns true if MarkersCornersResponse instances are equal
             </summary>
             <param name="input">Instance of MarkersCornersResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ResumePackageResponse.Equals(IO.Swagger.Model.ResumePackageResponse)">
             <summary>
             Returns true if ResumePackageResponse instances are equal
             </summary>
             <param name="input">Instance of ResumePackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ResumePackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddLogicItemRequestAllOf">
             <summary>
             AddLogicItemRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.#ctor(IO.Swagger.Model.AddLogicItemRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequestAllOf.DryRun">
=======
        <member name="T:IO.Swagger.Model.StartSceneRequestAllOf">
             <summary>
             StartSceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.#ctor(System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StartSceneRequestAllOf" /> class.
             </summary>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.Equals(IO.Swagger.Model.AddLogicItemRequestAllOf)">
             <summary>
             Returns true if AddLogicItemRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddLogicItemRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.Equals(IO.Swagger.Model.StartSceneRequestAllOf)">
             <summary>
             Returns true if StartSceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of StartSceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ResumePackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResumePackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResumePackageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ResumePackageResponse.Id">
=======
        <member name="T:IO.Swagger.Model.ForwardKinematicsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.ForwardKinematics.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.ForwardKinematicsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ResumePackageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ResumePackageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ResumePackageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ResumePackageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ResumePackageResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ResumePackageResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ResumePackageResponse.Equals(IO.Swagger.Model.ResumePackageResponse)">
             <summary>
             Returns true if ResumePackageResponse instances are equal
             </summary>
             <param name="input">Instance of ResumePackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.Equals(IO.Swagger.Model.ForwardKinematicsRequest)">
             <summary>
             Returns true if ForwardKinematicsRequest instances are equal
             </summary>
             <param name="input">Instance of ForwardKinematicsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ResumePackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SaveProjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveProjectResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.RenameActionPointRequestAllOf">
             <summary>
             RenameActionPointRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.#ctor(IO.Swagger.Model.RenameActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SaveProjectResponse.Id">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SaveProjectResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.RenameActionPointRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SaveProjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SaveProjectResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SaveProjectResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveProjectResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveProjectResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveProjectResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveProjectResponse.Equals(IO.Swagger.Model.SaveProjectResponse)">
             <summary>
             Returns true if SaveProjectResponse instances are equal
             </summary>
             <param name="input">Instance of SaveProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SaveProjectResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.Equals(IO.Swagger.Model.RenameActionPointRequestAllOf)">
             <summary>
             Returns true if RenameActionPointRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameProjectRequestArgs">
             <summary>
             Args(project_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequestArgs" /> class.
             </summary>
             <param name="newName">newName (required).</param>
             <param name="projectId">projectId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectRequestArgs.ProjectId">
             <summary>
             Gets or Sets ProjectId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.SceneObject">
             <summary>
             SceneObject(id: str, name: str, type: str, pose: Union[arcor2.data.common.Pose, NoneType] = None, parameters: List[arcor2.data.common.Parameter] = &lt;factory&gt;, children: List[ForwardRef('SceneObject')] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObject.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObject" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObject.#ctor(System.Collections.Generic.List{IO.Swagger.Model.SceneObject},System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.Parameter},IO.Swagger.Model.Pose,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObject" /> class.
             </summary>
             <param name="children">children.</param>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="parameters">parameters.</param>
             <param name="pose">pose.</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneObject.Children">
             <summary>
             Gets or Sets Children
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObject.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObject.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObject.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObject.Pose">
             <summary>
             Gets or Sets Pose
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObject.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObject.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneObject.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneObject.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.Equals(IO.Swagger.Model.RenameProjectRequestArgs)">
             <summary>
             Returns true if RenameProjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenameProjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneObject.Equals(IO.Swagger.Model.SceneObject)">
             <summary>
             Returns true if SceneObject instances are equal
             </summary>
             <param name="input">Instance of SceneObject to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObject.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RunPackageRequestAllOf">
             <summary>
             RunPackageRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.#ctor(IO.Swagger.Model.RunPackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.Box">
             <summary>
             Box(id: str, size_x: float, size_y: float, size_z: float)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Box.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Box" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Box.#ctor(System.String,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Box" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="sizeX">sizeX (required).</param>
             <param name="sizeY">sizeY (required).</param>
             <param name="sizeZ">sizeZ (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RunPackageRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.Box.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.Box.SizeX">
             <summary>
             Gets or Sets SizeX
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Box.SizeY">
             <summary>
             Gets or Sets SizeY
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Box.SizeZ">
             <summary>
             Gets or Sets SizeZ
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Box.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.Box.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Box.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.Equals(IO.Swagger.Model.RunPackageRequestAllOf)">
             <summary>
             Returns true if RunPackageRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RunPackageRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Box.Equals(IO.Swagger.Model.Box)">
             <summary>
             Returns true if Box instances are equal
             </summary>
             <param name="input">Instance of Box to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Box.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Box.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Response">
=======
        <member name="T:IO.Swagger.Model.NewProjectResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Response.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Response" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Response.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Response" /> class.
=======
        <member name="M:IO.Swagger.Model.NewProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
<<<<<<< HEAD
            </member>
        <member name="P:IO.Swagger.Model.Response.Id">
=======
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Response.Messages">
=======
        <member name="P:IO.Swagger.Model.NewProjectResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Response._Response">
             <summary>
             Gets or Sets _Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Response.Result">
=======
        <member name="P:IO.Swagger.Model.NewProjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Response.ToString">
=======
        <member name="P:IO.Swagger.Model.NewProjectResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Response.ToJson">
=======
        <member name="M:IO.Swagger.Model.NewProjectResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Response.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NewProjectResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Response.Equals(IO.Swagger.Model.Response)">
             <summary>
             Returns true if Response instances are equal
             </summary>
             <param name="input">Instance of Response to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Response.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewProjectResponse.Equals(IO.Swagger.Model.NewProjectResponse)">
             <summary>
             Returns true if NewProjectResponse instances are equal
             </summary>
             <param name="input">Instance of NewProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Response.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NewProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetGrippersResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetGrippersResponse.Id">
=======
        <member name="T:IO.Swagger.Model.Notification">
             <summary>
             Notification(data: Union[arcor2.data.events.Notification.Data, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.Notification.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Notification.ChangeTypeEnum.Add">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetGrippersResponse.Messages">
=======
        <member name="F:IO.Swagger.Model.Notification.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetGrippersResponse.Response">
=======
        <member name="F:IO.Swagger.Model.Notification.ChangeTypeEnum.Remove">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetGrippersResponse.Result">
=======
        <member name="F:IO.Swagger.Model.Notification.ChangeTypeEnum.Updatebase">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetGrippersResponse.Data">
=======
        <member name="P:IO.Swagger.Model.Notification.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Notification.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Notification" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Notification.#ctor(System.Nullable{IO.Swagger.Model.Notification.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.NotificationData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Notification" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.Notification.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Notification.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Notification.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.Notification.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.Notification.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Notification.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersResponse.Equals(IO.Swagger.Model.GetGrippersResponse)">
             <summary>
             Returns true if GetGrippersResponse instances are equal
             </summary>
             <param name="input">Instance of GetGrippersResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Notification.Equals(IO.Swagger.Model.Notification)">
             <summary>
             Returns true if Notification instances are equal
             </summary>
             <param name="input">Instance of Notification to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Notification.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Notification.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateOverrideResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateOverrideResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateOverrideResponse.Data">
=======
        <member name="T:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs">
             <summary>
             Args(orientation_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.#ctor(System.String)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs" /> class.
             </summary>
             <param name="orientationId">orientationId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.Equals(IO.Swagger.Model.UpdateOverrideResponse)">
             <summary>
             Returns true if UpdateOverrideResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateOverrideResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.Equals(IO.Swagger.Model.RemoveActionPointOrientationRequestArgs)">
             <summary>
             Returns true if RemoveActionPointOrientationRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointOrientationRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateOverrideResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MoveToActionPointResponse">
=======
        <member name="T:IO.Swagger.Model.SaveProjectResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.SaveProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveProjectResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MoveToActionPointResponse.Id">
=======
        <member name="P:IO.Swagger.Model.SaveProjectResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MoveToActionPointResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.SaveProjectResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MoveToActionPointResponse.Response">
=======
        <member name="P:IO.Swagger.Model.SaveProjectResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MoveToActionPointResponse.Result">
=======
        <member name="P:IO.Swagger.Model.SaveProjectResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MoveToActionPointResponse.Data">
=======
        <member name="P:IO.Swagger.Model.SaveProjectResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.SaveProjectResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.SaveProjectResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SaveProjectResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.Equals(IO.Swagger.Model.MoveToActionPointResponse)">
             <summary>
             Returns true if MoveToActionPointResponse instances are equal
             </summary>
             <param name="input">Instance of MoveToActionPointResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SaveProjectResponse.Equals(IO.Swagger.Model.SaveProjectResponse)">
             <summary>
             Returns true if SaveProjectResponse instances are equal
             </summary>
             <param name="input">Instance of SaveProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SaveProjectResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToActionPointResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SaveProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointJointsUsingRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.Request">
=======
        <member name="T:IO.Swagger.Model.ProjectClosed">
             <summary>
             ProjectClosed()
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ProjectClosed.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectClosed.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectClosed.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectClosed.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectClosed.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectClosed.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectClosed.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectClosed" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectClosed.#ctor(System.Nullable{IO.Swagger.Model.ProjectClosed.ChangeTypeEnum},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectClosed" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectClosed.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectClosed.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectClosed.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.ProjectClosed.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectClosed.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectClosed.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.Equals(IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest)">
             <summary>
             Returns true if UpdateActionPointJointsUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectClosed.Equals(IO.Swagger.Model.ProjectClosed)">
             <summary>
             Returns true if ProjectClosed instances are equal
             </summary>
             <param name="input">Instance of ProjectClosed to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectClosed.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectClosed.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NewProjectRequestAllOf">
=======
        <member name="T:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Id">
>>>>>>> devel
             <summary>
             NewProjectRequestAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.#ctor">
=======
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Messages">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequestAllOf" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.#ctor(IO.Swagger.Model.NewProjectRequestArgs,System.Boolean)">
=======
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Response">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewProjectRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewProjectRequestAllOf.DryRun">
=======
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.Equals(IO.Swagger.Model.NewProjectRequestAllOf)">
             <summary>
             Returns true if NewProjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of NewProjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.Equals(IO.Swagger.Model.AddActionPointJointsUsingRobotResponse)">
             <summary>
             Returns true if AddActionPointJointsUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of AddActionPointJointsUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.InverseKinematicsRequestAllOf">
             <summary>
             InverseKinematicsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.#ctor(IO.Swagger.Model.InverseKinematicsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.HandTeachingModeRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.HandTeachingMode.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.HandTeachingModeRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeRequest.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.Equals(IO.Swagger.Model.InverseKinematicsRequestAllOf)">
             <summary>
             Returns true if InverseKinematicsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of InverseKinematicsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.Equals(IO.Swagger.Model.HandTeachingModeRequest)">
             <summary>
             Returns true if HandTeachingModeRequest instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenamePackageRequest">
             <summary>
             Request(id: int, args: arcor2_execution_data.rpc.RenamePackage.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenamePackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageRequest.Id">
=======
        <member name="T:IO.Swagger.Model.PausePackageRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PausePackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PausePackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.PausePackageRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenamePackageRequest.Request">
=======
        <member name="P:IO.Swagger.Model.PausePackageRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenamePackageRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.PausePackageRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.PausePackageRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PausePackageRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequest.Equals(IO.Swagger.Model.RenamePackageRequest)">
             <summary>
             Returns true if RenamePackageRequest instances are equal
             </summary>
             <param name="input">Instance of RenamePackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PausePackageRequest.Equals(IO.Swagger.Model.PausePackageRequest)">
             <summary>
             Returns true if PausePackageRequest instances are equal
             </summary>
             <param name="input">Instance of PausePackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PausePackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.HandTeachingModeRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.HandTeachingMode.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.HandTeachingModeRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.AddConstantRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddConstant.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.HandTeachingModeRequest.Id">
=======
        <member name="P:IO.Swagger.Model.AddConstantRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.HandTeachingModeRequest.Request">
=======
        <member name="P:IO.Swagger.Model.AddConstantRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.HandTeachingModeRequest.Args">
=======
        <member name="P:IO.Swagger.Model.AddConstantRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.HandTeachingModeRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.AddConstantRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.Equals(IO.Swagger.Model.HandTeachingModeRequest)">
             <summary>
             Returns true if HandTeachingModeRequest instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequest.Equals(IO.Swagger.Model.AddConstantRequest)">
             <summary>
             Returns true if AddConstantRequest instances are equal
             </summary>
             <param name="input">Instance of AddConstantRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddConstantRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionStateAfterData">
             <summary>
             Data(action_id: str, results: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfterData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterData.#ctor(System.String,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfterData" /> class.
             </summary>
             <param name="actionId">actionId (required).</param>
             <param name="results">results.</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateAfterData.ActionId">
             <summary>
             Gets or Sets ActionId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateAfterData.Results">
             <summary>
             Gets or Sets Results
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterData.ToString">
=======
        <member name="T:IO.Swagger.Model.FocusObjectRequestArgs">
             <summary>
             Args(object_id: str, point_idx: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.#ctor(System.String,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequestArgs" /> class.
             </summary>
             <param name="objectId">objectId (required).</param>
             <param name="pointIdx">pointIdx (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectRequestArgs.ObjectId">
             <summary>
             Gets or Sets ObjectId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectRequestArgs.PointIdx">
             <summary>
             Gets or Sets PointIdx
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfterData.ToJson">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfterData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfterData.Equals(IO.Swagger.Model.ActionStateAfterData)">
             <summary>
             Returns true if ActionStateAfterData instances are equal
             </summary>
             <param name="input">Instance of ActionStateAfterData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.Equals(IO.Swagger.Model.FocusObjectRequestArgs)">
             <summary>
             Returns true if FocusObjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of FocusObjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateAfterData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetRobotJointsRequestAllOf">
             <summary>
             GetRobotJointsRequestAllOf
=======
        <member name="T:IO.Swagger.Model.UpdateProjectDescriptionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateProjectDescription.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateProjectDescriptionRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.#ctor(IO.Swagger.Model.GetRobotJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequestAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequest.Request">
             <summary>
             Gets or Sets Request
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetRobotJointsRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.Equals(IO.Swagger.Model.GetRobotJointsRequestAllOf)">
             <summary>
             Returns true if GetRobotJointsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetRobotJointsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.Equals(IO.Swagger.Model.UpdateProjectDescriptionRequest)">
             <summary>
             Returns true if UpdateProjectDescriptionRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectDescriptionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameActionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionResponse.Data">
=======
        <member name="T:IO.Swagger.Model.ForwardKinematicsResponseAllOf">
             <summary>
             ForwardKinematicsResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.#ctor(IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponseAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionResponse.Equals(IO.Swagger.Model.RenameActionResponse)">
             <summary>
             Returns true if RenameActionResponse instances are equal
             </summary>
             <param name="input">Instance of RenameActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.Equals(IO.Swagger.Model.ForwardKinematicsResponseAllOf)">
             <summary>
             Returns true if ForwardKinematicsResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of ForwardKinematicsResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveActionRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.MoveToPoseRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.MoveToPose.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionRequest.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.MoveToPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.MoveToPoseRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionRequest.Equals(IO.Swagger.Model.RemoveActionRequest)">
             <summary>
             Returns true if RemoveActionRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.Equals(IO.Swagger.Model.MoveToPoseRequest)">
             <summary>
             Returns true if MoveToPoseRequest instances are equal
             </summary>
             <param name="input">Instance of MoveToPoseRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf">
             <summary>
             UpdateActionPointUsingRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.Args">
=======
        <member name="T:IO.Swagger.Model.GetSuctionsRequestAllOf">
             <summary>
             GetSuctionsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.#ctor(IO.Swagger.Model.GetSuctionsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetSuctionsRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointUsingRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.Equals(IO.Swagger.Model.GetSuctionsRequestAllOf)">
             <summary>
             Returns true if GetSuctionsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetSuctionsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToJointsData">
             <summary>
             Data(move_event_type: arcor2_arserver_data.events.robot.RobotMoveToData.MoveEventType, robot_id: str, target_joints: List[arcor2.data.common.Joint], safe: bool, message: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToJointsData.MoveEventTypeEnum">
             <summary>
             Defines MoveEventType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToJointsData.MoveEventTypeEnum.Start">
             <summary>
             Enum Start for value: start
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToJointsData.MoveEventTypeEnum.End">
=======
        <member name="T:IO.Swagger.Model.RemoveActionPointRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointRequest.Args">
>>>>>>> devel
             <summary>
             Enum End for value: end
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotMoveToJointsData.MoveEventTypeEnum.Failed">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.ToString">
>>>>>>> devel
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToJointsData.MoveEventType">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.Equals(IO.Swagger.Model.RemoveActionPointRequest)">
             <summary>
             Returns true if RemoveActionPointRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets MoveEventType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.#ctor">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsData" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.#ctor(IO.Swagger.Model.RobotMoveToJointsData.MoveEventTypeEnum,System.String,System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.Joint})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsData" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateLogicItemRequestAllOf">
             <summary>
             UpdateLogicItemRequestAllOf
>>>>>>> devel
             </summary>
             <param name="moveEventType">moveEventType (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
             <param name="targetJoints">targetJoints (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToJointsData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsData.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsData.TargetJoints">
             <summary>
             Gets or Sets TargetJoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.#ctor(IO.Swagger.Model.UpdateLogicItemRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.Equals(IO.Swagger.Model.RobotMoveToJointsData)">
             <summary>
             Returns true if RobotMoveToJointsData instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToJointsData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.Equals(IO.Swagger.Model.UpdateLogicItemRequestAllOf)">
             <summary>
             Returns true if UpdateLogicItemRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateLogicItemRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetRobotJointsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.GetRobotJoints.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetRobotJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.RobotMoveToJointsData">
             <summary>
             Data(move_event_type: arcor2_arserver_data.events.robot.RobotMoveToData.MoveEventType, robot_id: str, target_joints: List[arcor2.data.common.Joint], safe: bool, message: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToJointsData.MoveEventTypeEnum">
             <summary>
             Defines MoveEventType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToJointsData.MoveEventTypeEnum.Start">
             <summary>
             Enum Start for value: start
>>>>>>> devel
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetRobotJointsRequest.Id">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToJointsData.MoveEventTypeEnum.End">
>>>>>>> devel
             <summary>
             Enum End for value: end
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetRobotJointsRequest.Request">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToJointsData.MoveEventTypeEnum.Failed">
>>>>>>> devel
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetRobotJointsRequest.Args">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToJointsData.MoveEventType">
>>>>>>> devel
             <summary>
             Gets or Sets MoveEventType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.#ctor(IO.Swagger.Model.RobotMoveToJointsData.MoveEventTypeEnum,System.String,System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.Joint})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsData" /> class.
             </summary>
             <param name="moveEventType">moveEventType (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
             <param name="targetJoints">targetJoints (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsData.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsData.TargetJoints">
             <summary>
             Gets or Sets TargetJoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.Equals(IO.Swagger.Model.GetRobotJointsRequest)">
             <summary>
             Returns true if GetRobotJointsRequest instances are equal
             </summary>
             <param name="input">Instance of GetRobotJointsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.Equals(IO.Swagger.Model.RobotMoveToJointsData)">
             <summary>
             Returns true if RobotMoveToJointsData instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToJointsData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJointsData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateLogicItemRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateLogicItem.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateLogicItemRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequest.Id">
=======
        <member name="T:IO.Swagger.Model.ProjectExceptionAllOf">
             <summary>
             ProjectExceptionAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectExceptionAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.#ctor(IO.Swagger.Model.ProjectExceptionData)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectExceptionAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.ProjectExceptionAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.Equals(IO.Swagger.Model.UpdateLogicItemRequest)">
             <summary>
             Returns true if UpdateLogicItemRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateLogicItemRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.Equals(IO.Swagger.Model.ProjectExceptionAllOf)">
             <summary>
             Returns true if ProjectExceptionAllOf instances are equal
             </summary>
             <param name="input">Instance of ProjectExceptionAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectExceptionAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetObjectTypesResponseAllOf">
             <summary>
             GetObjectTypesResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ObjectTypeMeta})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetObjectTypesResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetObjectTypesResponseAllOf.Data">
=======
        <member name="T:IO.Swagger.Model.BuildProjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2_arserver_data.rpc.build.BuildProject.Response.Data, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.BuildProjectResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.Equals(IO.Swagger.Model.GetObjectTypesResponseAllOf)">
             <summary>
             Returns true if GetObjectTypesResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of GetObjectTypesResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponse.Equals(IO.Swagger.Model.BuildProjectResponse)">
             <summary>
             Returns true if BuildProjectResponse instances are equal
             </summary>
             <param name="input">Instance of BuildProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetObjectTypesResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.BuildProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Cylinder">
             <summary>
             Cylinder(id: str, radius: float, height: float)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Cylinder.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Cylinder" /> class.
=======
        <member name="T:IO.Swagger.Model.MoveToJointsRequestArgs">
             <summary>
             Args(robot_id: str, speed: float, joints: List[arcor2.data.common.Joint], safe: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Joint},System.String,System.Boolean,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="joints">joints (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="safe">safe (default to true).</param>
             <param name="speed">speed (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Cylinder.#ctor(System.String,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Cylinder" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="height">height (required).</param>
             <param name="radius">radius (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.Cylinder.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Cylinder.Height">
             <summary>
             Gets or Sets Height
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Cylinder.Radius">
             <summary>
             Gets or Sets Radius
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Cylinder.ToString">
=======
        <member name="P:IO.Swagger.Model.MoveToJointsRequestArgs.Joints">
             <summary>
             Gets or Sets Joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequestArgs.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequestArgs.Speed">
             <summary>
             Gets or Sets Speed
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Cylinder.ToJson">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Cylinder.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Cylinder.Equals(IO.Swagger.Model.Cylinder)">
             <summary>
             Returns true if Cylinder instances are equal
             </summary>
             <param name="input">Instance of Cylinder to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Cylinder.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.Equals(IO.Swagger.Model.MoveToJointsRequestArgs)">
             <summary>
             Returns true if MoveToJointsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of MoveToJointsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Cylinder.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectPoseRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.UpdateObjectPose.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateObjectPoseRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.RenameProjectRequestAllOf">
             <summary>
             RenameProjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequest.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.#ctor(IO.Swagger.Model.RenameProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.RenameProjectRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.Equals(IO.Swagger.Model.UpdateObjectPoseRequest)">
             <summary>
             Returns true if UpdateObjectPoseRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.Equals(IO.Swagger.Model.RenameProjectRequestAllOf)">
             <summary>
             Returns true if RenameProjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameProjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJointsData">
=======
        <member name="T:IO.Swagger.Model.MoveToJointsRequestAllOf">
             <summary>
             MoveToJointsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.#ctor(IO.Swagger.Model.MoveToJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Data(move_event_type: arcor2_arserver_data.events.robot.RobotMoveToData.MoveEventType, robot_id: str, joints_id: str, safe: bool, message: Union[str, NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventTypeEnum">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Defines MoveEventType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventTypeEnum.Start">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Enum Start for value: start
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventTypeEnum.End">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Enum End for value: end
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventTypeEnum.Failed">
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventType">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.Equals(IO.Swagger.Model.MoveToJointsRequestAllOf)">
             <summary>
             Returns true if MoveToJointsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of MoveToJointsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets MoveEventType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.#ctor">
=======
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsData" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.#ctor(IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventTypeEnum,System.String,System.String,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsData" /> class.
=======
        <member name="T:IO.Swagger.Model.ProjectConstantChanged">
             <summary>
             ProjectConstantChanged(data: arcor2.data.common.ProjectConstant)
>>>>>>> devel
             </summary>
             <param name="moveEventType">moveEventType (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="jointsId">jointsId (required).</param>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsData.JointsId">
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsData.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.ToString">
=======
        <member name="T:IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstantChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstantChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.#ctor(System.Nullable{IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ProjectConstant)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstantChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstantChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstantChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstantChanged.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.Equals(IO.Swagger.Model.RobotMoveToActionPointJointsData)">
             <summary>
             Returns true if RobotMoveToActionPointJointsData instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointJointsData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.Equals(IO.Swagger.Model.ProjectConstantChanged)">
             <summary>
             Returns true if ProjectConstantChanged instances are equal
             </summary>
             <param name="input">Instance of ProjectConstantChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="T:IO.Swagger.Model.ActionExecutionAllOf">
             <summary>
             ActionExecutionAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionExecutionAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.#ctor(IO.Swagger.Model.ActionExecutionData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionExecutionAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.ActionExecutionAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.Equals(IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse)">
             <summary>
             Returns true if AddActionPointOrientationUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.Equals(IO.Swagger.Model.ActionExecutionAllOf)">
             <summary>
             Returns true if ActionExecutionAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionExecutionAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionExecutionAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NewObjectTypeResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.ToString">
=======
        <member name="T:IO.Swagger.Model.BuildProjectRequestArgs">
             <summary>
             Args(project_id: str, package_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequestArgs" /> class.
             </summary>
             <param name="packageName">packageName (required).</param>
             <param name="projectId">projectId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectRequestArgs.PackageName">
             <summary>
             Gets or Sets PackageName
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectRequestArgs.ProjectId">
             <summary>
             Gets or Sets ProjectId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.Equals(IO.Swagger.Model.NewObjectTypeResponse)">
             <summary>
             Returns true if NewObjectTypeResponse instances are equal
             </summary>
             <param name="input">Instance of NewObjectTypeResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.Equals(IO.Swagger.Model.BuildProjectRequestArgs)">
             <summary>
             Returns true if BuildProjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of BuildProjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetActionsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_arserver_data.objects.ObjectAction], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.ObjectAction})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsResponse.Id">
=======
        <member name="T:IO.Swagger.Model.RunPackageRequestArgs">
>>>>>>> devel
             <summary>
             Args(id: str, cleanup_after_run: bool = True)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetActionsResponse.Messages">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequestArgs" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetActionsResponse.Response">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.#ctor(System.String,System.Boolean)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="cleanupAfterRun">cleanupAfterRun (default to true).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetActionsResponse.Result">
=======
        <member name="P:IO.Swagger.Model.RunPackageRequestArgs.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetActionsResponse.Data">
=======
        <member name="P:IO.Swagger.Model.RunPackageRequestArgs.CleanupAfterRun">
>>>>>>> devel
             <summary>
             Gets or Sets CleanupAfterRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsResponse.Equals(IO.Swagger.Model.GetActionsResponse)">
             <summary>
             Returns true if GetActionsResponse instances are equal
             </summary>
             <param name="input">Instance of GetActionsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.Equals(IO.Swagger.Model.RunPackageRequestArgs)">
             <summary>
             Returns true if RunPackageRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RunPackageRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneObjectOverride">
             <summary>
             SceneObjectOverride(id: str, parameters: List[arcor2.data.common.Parameter])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectOverride.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectOverride" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectOverride.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Parameter})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectOverride" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="parameters">parameters (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectOverride.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectOverride.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectOverride.ToString">
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointPositionRequestArgs">
             <summary>
             Args(action_point_id: str, new_position: arcor2.data.common.Position)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.#ctor(System.String,IO.Swagger.Model.Position)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="newPosition">newPosition (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.NewPosition">
             <summary>
             Gets or Sets NewPosition
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectOverride.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectOverride.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectOverride.Equals(IO.Swagger.Model.SceneObjectOverride)">
             <summary>
             Returns true if SceneObjectOverride instances are equal
             </summary>
             <param name="input">Instance of SceneObjectOverride to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectOverride.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointPositionRequestArgs)">
             <summary>
             Returns true if UpdateActionPointPositionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointPositionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectOverride.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.BuildProjectRequestAllOf">
             <summary>
             BuildProjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.FocusObjectStartRequestArgs">
             <summary>
             Args(object_id: str, robot: arcor2.data.rpc.common.RobotArg)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.#ctor(System.String,IO.Swagger.Model.RobotArg)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="objectId">objectId (required).</param>
             <param name="robot">robot (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.#ctor(IO.Swagger.Model.BuildProjectRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequestAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.FocusObjectStartRequestArgs.ObjectId">
             <summary>
             Gets or Sets ObjectId
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BuildProjectRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.FocusObjectStartRequestArgs.Robot">
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.Equals(IO.Swagger.Model.BuildProjectRequestAllOf)">
             <summary>
             Returns true if BuildProjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of BuildProjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.Equals(IO.Swagger.Model.FocusObjectStartRequestArgs)">
             <summary>
             Returns true if FocusObjectStartRequestArgs instances are equal
             </summary>
             <param name="input">Instance of FocusObjectStartRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveActionPointOrientationResponse">
=======
        <member name="T:IO.Swagger.Model.ActionParamValuesRequestArgs">
             <summary>
             Args(id: str, param_id: str, parent_params: List[arcor2.data.common.IdValue] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.#ctor(System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.IdValue})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequestArgs" /> class.
             </summary>
             <param name="id">Object or service id. (required).</param>
             <param name="paramId">paramId (required).</param>
             <param name="parentParams">parentParams.</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesRequestArgs.Id">
             <summary>
             Object or service id.
             </summary>
             <value>Object or service id.</value>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesRequestArgs.ParamId">
             <summary>
             Gets or Sets ParamId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesRequestArgs.ParentParams">
             <summary>
             Gets or Sets ParentParams
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.Equals(IO.Swagger.Model.ActionParamValuesRequestArgs)">
             <summary>
             Returns true if ActionParamValuesRequestArgs instances are equal
             </summary>
             <param name="input">Instance of ActionParamValuesRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationResponse.Id">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.ToString">
=======
        <member name="T:IO.Swagger.Model.FocusObjectRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.FocusObject.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.FocusObjectRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.Equals(IO.Swagger.Model.RemoveActionPointOrientationResponse)">
             <summary>
             Returns true if RemoveActionPointOrientationResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointOrientationResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequest.Equals(IO.Swagger.Model.FocusObjectRequest)">
             <summary>
             Returns true if FocusObjectRequest instances are equal
             </summary>
             <param name="input">Instance of FocusObjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.UpdateObjectPoseUsingRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.#ctor">
=======
        <member name="T:IO.Swagger.Model.GetRobotMetaResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2_arserver_data.robot.RobotMeta], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotMetaResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.RobotMeta})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotMetaResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotMetaResponse.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs)">
=======
        <member name="P:IO.Swagger.Model.GetRobotMetaResponse.Messages">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.Id">
=======
        <member name="P:IO.Swagger.Model.GetRobotMetaResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.Request">
=======
        <member name="P:IO.Swagger.Model.GetRobotMetaResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.Args">
=======
        <member name="P:IO.Swagger.Model.GetRobotMetaResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.Equals(IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest)">
             <summary>
             Returns true if UpdateObjectPoseUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.Equals(IO.Swagger.Model.GetRobotMetaResponse)">
             <summary>
             Returns true if GetRobotMetaResponse instances are equal
             </summary>
             <param name="input">Instance of GetRobotMetaResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetRobotMetaResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectFunction">
             <summary>
             ProjectFunction(id: str, name: str, actions: List[arcor2.data.common.Action] = &lt;factory&gt;, logic: List[arcor2.data.common.LogicItem] = &lt;factory&gt;, parameters: List[arcor2.data.common.ActionParameter] = &lt;factory&gt;, returns: List[arcor2.data.common.FunctionReturns] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectFunction.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectFunction" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectFunction.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Action},System.String,System.Collections.Generic.List{IO.Swagger.Model.LogicItem},System.String,System.Collections.Generic.List{IO.Swagger.Model.ActionParameter},System.Collections.Generic.List{IO.Swagger.Model.FunctionReturns})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectFunction" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateObjectParametersRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.UpdateObjectParameters.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateObjectParametersRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="actions">actions.</param>
             <param name="id">id (required).</param>
<<<<<<< HEAD
             <param name="logic">logic.</param>
             <param name="name">name (required).</param>
             <param name="parameters">parameters.</param>
             <param name="returns">returns.</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectFunction.Actions">
             <summary>
             Gets or Sets Actions
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectFunction.Id">
=======
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectFunction.Logic">
=======
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Logic
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectFunction.Name">
=======
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Name
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectFunction.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectFunction.Returns">
             <summary>
             Gets or Sets Returns
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectFunction.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectFunction.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectFunction.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectFunction.Equals(IO.Swagger.Model.ProjectFunction)">
             <summary>
             Returns true if ProjectFunction instances are equal
             </summary>
             <param name="input">Instance of ProjectFunction to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectFunction.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.Equals(IO.Swagger.Model.UpdateObjectParametersRequest)">
             <summary>
             Returns true if UpdateObjectParametersRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectParametersRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectFunction.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PackageStateData">
             <summary>
             Data(state: arcor2.data.events.PackageState.Data.StateEnum = &lt;StateEnum.UNDEFINED: 'undefined'&gt;, package_id: Union[str, NoneType] = None)
=======
        <member name="T:IO.Swagger.Model.ShowMainScreenAllOf">
             <summary>
             ShowMainScreenAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreenAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.#ctor(IO.Swagger.Model.ShowMainScreenData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreenAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PackageStateData.StateEnum">
             <summary>
             Defines State
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageStateData.StateEnum.Running">
             <summary>
             Enum Running for value: running
=======
        <member name="P:IO.Swagger.Model.ShowMainScreenAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.ToString">
             <summary>
             Returns the string presentation of the object
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.PackageStateData.StateEnum.Stopped">
             <summary>
             Enum Stopped for value: stopped
=======
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.PackageStateData.StateEnum.Paused">
             <summary>
             Enum Paused for value: paused
=======
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
>>>>>>> devel
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.PackageStateData.StateEnum.Undefined">
             <summary>
             Enum Undefined for value: undefined
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageStateData.State">
             <summary>
             Gets or Sets State
=======
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.Equals(IO.Swagger.Model.ShowMainScreenAllOf)">
             <summary>
             Returns true if ShowMainScreenAllOf instances are equal
             </summary>
             <param name="input">Instance of ShowMainScreenAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.GetHashCode">
             <summary>
             Gets the hash code
>>>>>>> devel
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageStateData.#ctor(System.String,System.Nullable{IO.Swagger.Model.PackageStateData.StateEnum})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageStateData" /> class.
=======
        <member name="M:IO.Swagger.Model.ShowMainScreenAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.MarkersCornersRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.common.MarkersCorners.Request.Args)
>>>>>>> devel
             </summary>
             <param name="packageId">packageId.</param>
             <param name="state">state (default to StateEnum.Undefined).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.PackageStateData.PackageId">
             <summary>
             Gets or Sets PackageId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateData.ToString">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.MarkersCornersRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageStateData.ToJson">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageStateData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageStateData.Equals(IO.Swagger.Model.PackageStateData)">
             <summary>
             Returns true if PackageStateData instances are equal
             </summary>
             <param name="input">Instance of PackageStateData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageStateData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.Equals(IO.Swagger.Model.MarkersCornersRequest)">
             <summary>
             Returns true if MarkersCornersRequest instances are equal
             </summary>
             <param name="input">Instance of MarkersCornersRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageStateData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveActionPointOrientationRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RemoveActionPointOrientation.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RemoveActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.ActionParamValuesRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.ActionParamValues.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.ActionParamValuesRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequest.Id">
=======
        <member name="P:IO.Swagger.Model.ActionParamValuesRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequest.Request">
=======
        <member name="P:IO.Swagger.Model.ActionParamValuesRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequest.Args">
=======
        <member name="P:IO.Swagger.Model.ActionParamValuesRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.Equals(IO.Swagger.Model.RemoveActionPointOrientationRequest)">
             <summary>
             Returns true if RemoveActionPointOrientationRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointOrientationRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.Equals(IO.Swagger.Model.ActionParamValuesRequest)">
             <summary>
             Returns true if ActionParamValuesRequest instances are equal
             </summary>
             <param name="input">Instance of ActionParamValuesRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameActionPointResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointResponse.Id">
=======
        <member name="T:IO.Swagger.Model.AddActionRequestArgs">
             <summary>
             Args(action_point_id: str, name: str, type: str, parameters: List[arcor2.data.common.ActionParameter] = &lt;factory&gt;, flows: List[arcor2.data.common.Flow] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Flow},System.String,System.Collections.Generic.List{IO.Swagger.Model.ActionParameter},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="flows">flows.</param>
             <param name="name">name (required).</param>
             <param name="parameters">parameters.</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestArgs.ActionPointId">
>>>>>>> devel
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionPointResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.AddActionRequestArgs.Flows">
             <summary>
             Gets or Sets Flows
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestArgs.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequestArgs.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.Equals(IO.Swagger.Model.RenameActionPointResponse)">
             <summary>
             Returns true if RenameActionPointResponse instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.Equals(IO.Swagger.Model.AddActionRequestArgs)">
             <summary>
             Returns true if AddActionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddActionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveActionPointJointsRequestArgs">
             <summary>
             Args(joints_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequestArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.AddLogicItemRequestArgs">
             <summary>
             Args(start: str, end: str, condition: Union[arcor2.data.common.ProjectLogicIf, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.#ctor(IO.Swagger.Model.ProjectLogicIf,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequestArgs" /> class.
             </summary>
             <param name="condition">condition.</param>
             <param name="end">end (required).</param>
             <param name="start">start (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequestArgs.Condition">
             <summary>
             Gets or Sets Condition
>>>>>>> devel
             </summary>
             <param name="jointsId">jointsId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.JointsId">
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.AddLogicItemRequestArgs.End">
             <summary>
             Gets or Sets End
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequestArgs.Start">
             <summary>
             Gets or Sets Start
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.Equals(IO.Swagger.Model.RemoveActionPointJointsRequestArgs)">
             <summary>
             Returns true if RemoveActionPointJointsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointJointsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.Equals(IO.Swagger.Model.AddLogicItemRequestArgs)">
             <summary>
             Returns true if AddLogicItemRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddLogicItemRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionCancelledAllOf">
             <summary>
             ActionCancelledAllOf
=======
        <member name="T:IO.Swagger.Model.NewObjectTypeRequestAllOf">
             <summary>
             NewObjectTypeRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.#ctor(IO.Swagger.Model.ObjectTypeMeta,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionCancelledAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.NewObjectTypeRequestAllOf.Args">
             <summary>
             Gets or Sets Args
>>>>>>> devel
             </summary>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionCancelledAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.NewObjectTypeRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.Equals(IO.Swagger.Model.ActionCancelledAllOf)">
             <summary>
             Returns true if ActionCancelledAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionCancelledAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.Equals(IO.Swagger.Model.NewObjectTypeRequestAllOf)">
             <summary>
             Returns true if NewObjectTypeRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of NewObjectTypeRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionCancelledAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointOrientationRequestAllOf">
             <summary>
             AddActionPointOrientationRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.#ctor(IO.Swagger.Model.AddActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.ProjectRobotJoints">
             <summary>
             ProjectRobotJoints(id: str, name: str, robot_id: str, joints: List[arcor2.data.common.Joint], is_valid: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectRobotJoints" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.#ctor(System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.Joint},System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectRobotJoints" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="isValid">isValid (default to false).</param>
             <param name="joints">joints (required).</param>
             <param name="name">name (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectRobotJoints.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.ProjectRobotJoints.IsValid">
             <summary>
             Gets or Sets IsValid
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectRobotJoints.Joints">
             <summary>
             Gets or Sets Joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectRobotJoints.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectRobotJoints.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.Equals(IO.Swagger.Model.AddActionPointOrientationRequestAllOf)">
             <summary>
             Returns true if AddActionPointOrientationRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.Equals(IO.Swagger.Model.ProjectRobotJoints)">
             <summary>
             Returns true if ProjectRobotJoints instances are equal
             </summary>
             <param name="input">Instance of ProjectRobotJoints to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ExecuteActionRequestArgs">
             <summary>
             Args(action_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequestArgs" /> class.
             </summary>
             <param name="actionId">ID of the action to be executed. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionRequestArgs.ActionId">
=======
        <member name="T:IO.Swagger.Model.AddObjectToSceneRequestAllOf">
             <summary>
             AddObjectToSceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.#ctor(IO.Swagger.Model.AddObjectToSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestAllOf.Args">
>>>>>>> devel
             <summary>
             ID of the action to be executed.
             </summary>
             <value>ID of the action to be executed.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.Equals(IO.Swagger.Model.ExecuteActionRequestArgs)">
             <summary>
             Returns true if ExecuteActionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of ExecuteActionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.Equals(IO.Swagger.Model.AddObjectToSceneRequestAllOf)">
             <summary>
             Returns true if AddObjectToSceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddObjectToSceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameSceneRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.RenameArgs, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneRequest.Equals(IO.Swagger.Model.RenameSceneRequest)">
             <summary>
             Returns true if RenameSceneRequest instances are equal
             </summary>
             <param name="input">Instance of RenameSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectParametersResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectParametersResponse.Id">
=======
        <member name="T:IO.Swagger.Model.MoveToActionPointRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.MoveToActionPoint.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersResponse.Messages">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.MoveToActionPointRequestArgs)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersResponse.Response">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersResponse.Result">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersResponse.Data">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.Equals(IO.Swagger.Model.UpdateObjectParametersResponse)">
             <summary>
             Returns true if UpdateObjectParametersResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectParametersResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.Equals(IO.Swagger.Model.MoveToActionPointRequest)">
             <summary>
             Returns true if MoveToActionPointRequest instances are equal
             </summary>
             <param name="input">Instance of MoveToActionPointRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf">
             <summary>
             AddActionPointOrientationUsingRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.Equals(System.Object)">
=======
        <member name="T:IO.Swagger.Model.NewProjectRequestArgs">
>>>>>>> devel
             <summary>
             Args(scene_id: str, name: str, desc: str = &lt;factory&gt;, has_logic: bool = True)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.Equals(IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf)">
             <summary>
             Returns true if AddActionPointOrientationUsingRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.#ctor(System.String,System.Boolean,System.String,System.String)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequestArgs" /> class.
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="hasLogic">hasLogic (default to true).</param>
             <param name="name">name (required).</param>
             <param name="sceneId">sceneId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="P:IO.Swagger.Model.NewProjectRequestArgs.Desc">
>>>>>>> devel
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotEefDataEefPose">
             <summary>
             EefPose(end_effector_id: str, pose: arcor2.data.common.Pose)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefDataEefPose" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.#ctor(System.String,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefDataEefPose" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="pose">pose (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotEefDataEefPose.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotEefDataEefPose.Pose">
             <summary>
             Gets or Sets Pose
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.ToString">
=======
        <member name="P:IO.Swagger.Model.NewProjectRequestArgs.HasLogic">
             <summary>
             Gets or Sets HasLogic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectRequestArgs.SceneId">
             <summary>
             Gets or Sets SceneId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.ToJson">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.Equals(IO.Swagger.Model.RobotEefDataEefPose)">
             <summary>
             Returns true if RobotEefDataEefPose instances are equal
             </summary>
             <param name="input">Instance of RobotEefDataEefPose to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.Equals(IO.Swagger.Model.NewProjectRequestArgs)">
             <summary>
             Returns true if NewProjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of NewProjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetGrippersRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.GetGrippers.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetGrippersRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.AddActionPointRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddActionPoint.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetGrippersRequest.Id">
=======
        <member name="P:IO.Swagger.Model.AddActionPointRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetGrippersRequest.Request">
=======
        <member name="P:IO.Swagger.Model.AddActionPointRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetGrippersRequest.Args">
=======
        <member name="P:IO.Swagger.Model.AddActionPointRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.AddActionPointRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersRequest.Equals(IO.Swagger.Model.GetGrippersRequest)">
             <summary>
             Returns true if GetGrippersRequest instances are equal
             </summary>
             <param name="input">Instance of GetGrippersRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequest.Equals(IO.Swagger.Model.AddActionPointRequest)">
             <summary>
             Returns true if AddActionPointRequest instances are equal
             </summary>
             <param name="input">Instance of AddActionPointRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetGrippersRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NotificationAllOf">
             <summary>
             NotificationAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NotificationAllOf.#ctor(IO.Swagger.Model.NotificationData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.GetGrippersRequestArgs">
             <summary>
             Args(robot_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequestArgs" /> class.
>>>>>>> devel
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NotificationAllOf.Data">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.#ctor(System.String)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequestArgs" /> class.
             </summary>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetGrippersRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NotificationAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NotificationAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NotificationAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NotificationAllOf.Equals(IO.Swagger.Model.NotificationAllOf)">
             <summary>
             Returns true if NotificationAllOf instances are equal
             </summary>
             <param name="input">Instance of NotificationAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NotificationAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.Equals(IO.Swagger.Model.GetGrippersRequestArgs)">
             <summary>
             Returns true if GetGrippersRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetGrippersRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NotificationAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionParameter">
             <summary>
             ActionParameter(name: str, type: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParameter.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParameter" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParameter.#ctor(System.String,System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParameter" /> class.
=======
        <member name="T:IO.Swagger.Model.FocusObjectDoneRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectDoneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectDoneRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
             <param name="value">value (required).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionParameter.Name">
=======
        <member name="P:IO.Swagger.Model.FocusObjectDoneRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Name
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionParameter.Type">
=======
        <member name="P:IO.Swagger.Model.FocusObjectDoneRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Type
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionParameter.Value">
=======
        <member name="P:IO.Swagger.Model.FocusObjectDoneRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Value
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionParameter.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParameter.ToString">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParameter.ToJson">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParameter.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParameter.Equals(IO.Swagger.Model.ActionParameter)">
             <summary>
             Returns true if ActionParameter instances are equal
             </summary>
             <param name="input">Instance of ActionParameter to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParameter.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.Equals(IO.Swagger.Model.FocusObjectDoneRequest)">
             <summary>
             Returns true if FocusObjectDoneRequest instances are equal
             </summary>
             <param name="input">Instance of FocusObjectDoneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParameter.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionPoint">
             <summary>
             ActionPoint(id: str, name: str, position: arcor2.data.common.Position, parent: Union[str, NoneType] = None, orientations: List[arcor2.data.common.NamedOrientation] = &lt;factory&gt;, robot_joints: List[arcor2.data.common.ProjectRobotJoints] = &lt;factory&gt;, actions: List[arcor2.data.common.Action] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPoint.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPoint" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPoint.#ctor(System.String,System.String,System.String,IO.Swagger.Model.Position,System.Collections.Generic.List{IO.Swagger.Model.Action},System.Collections.Generic.List{IO.Swagger.Model.NamedOrientation},System.Collections.Generic.List{IO.Swagger.Model.ProjectRobotJoints})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPoint" /> class.
=======
        <member name="T:IO.Swagger.Model.ProjectConstant">
             <summary>
             ProjectConstant(id: str, name: str, type: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstant.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstant" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstant.#ctor(System.String,System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstant" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
             <param name="value">value (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstant.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstant.Name">
             <summary>
             Gets or Sets Name
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="parent">parent.</param>
             <param name="position">position (required).</param>
             <param name="actions">actions.</param>
             <param name="orientations">orientations.</param>
             <param name="robotJoints">robotJoints.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionPoint.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPoint.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPoint.Parent">
             <summary>
             Gets or Sets Parent
=======
        <member name="P:IO.Swagger.Model.ProjectConstant.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstant.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstant.ToString">
             <summary>
             Returns the string presentation of the object
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionPoint.Position">
             <summary>
             Gets or Sets Position
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPoint.Actions">
             <summary>
             Gets or Sets Actions
=======
        <member name="M:IO.Swagger.Model.ProjectConstant.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstant.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstant.Equals(IO.Swagger.Model.ProjectConstant)">
             <summary>
             Returns true if ProjectConstant instances are equal
             </summary>
             <param name="input">Instance of ProjectConstant to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstant.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstant.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ActionStateBeforeData">
             <summary>
             Data(action_id: str, parameters: List[str])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBeforeData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.#ctor(System.String,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBeforeData" /> class.
>>>>>>> devel
             </summary>
             <param name="actionId">actionId (required).</param>
             <param name="parameters">parameters (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionPoint.Orientations">
             <summary>
             Gets or Sets Orientations
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPoint.RobotJoints">
             <summary>
             Gets or Sets RobotJoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPoint.ToString">
=======
        <member name="P:IO.Swagger.Model.ActionStateBeforeData.ActionId">
             <summary>
             Gets or Sets ActionId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateBeforeData.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPoint.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPoint.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPoint.Equals(IO.Swagger.Model.ActionPoint)">
             <summary>
             Returns true if ActionPoint instances are equal
             </summary>
             <param name="input">Instance of ActionPoint to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPoint.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.Equals(IO.Swagger.Model.ActionStateBeforeData)">
             <summary>
             Returns true if ActionStateBeforeData instances are equal
             </summary>
             <param name="input">Instance of ActionStateBeforeData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPoint.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionStateBeforeData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectChangedAllOf">
             <summary>
             ProjectChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectChangedAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.HandTeachingModeRequestArgs">
             <summary>
             Args(robot_id: str, enable: bool)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.#ctor(System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="enable">enable (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.#ctor(IO.Swagger.Model.BareProject)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectChangedAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeRequestArgs.Enable">
             <summary>
             Gets or Sets Enable
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectChangedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.Equals(IO.Swagger.Model.ProjectChangedAllOf)">
             <summary>
             Returns true if ProjectChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of ProjectChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.Equals(IO.Swagger.Model.HandTeachingModeRequestArgs)">
             <summary>
             Returns true if HandTeachingModeRequestArgs instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CopyActionPointRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.CopyActionPoint.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CopyActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.MoveToActionPointRequestArgs">
             <summary>
             Args(robot_id: str, speed: float, end_effector_id: Union[str, NoneType] = None, orientation_id: Union[str, NoneType] = None, joints_id: Union[str, NoneType] = None, safe: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="endEffectorId">endEffectorId.</param>
             <param name="jointsId">jointsId.</param>
             <param name="orientationId">orientationId.</param>
             <param name="robotId">robotId (required).</param>
             <param name="safe">safe (default to true).</param>
             <param name="speed">speed (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopyActionPointRequest.Id">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.EndEffectorId">
>>>>>>> devel
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopyActionPointRequest.Request">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.JointsId">
>>>>>>> devel
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopyActionPointRequest.Args">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.OrientationId">
>>>>>>> devel
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopyActionPointRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.RobotId">
>>>>>>> devel
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.Speed">
             <summary>
             Gets or Sets Speed
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.Equals(IO.Swagger.Model.CopyActionPointRequest)">
             <summary>
             Returns true if CopyActionPointRequest instances are equal
             </summary>
             <param name="input">Instance of CopyActionPointRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.Equals(IO.Swagger.Model.MoveToActionPointRequestArgs)">
             <summary>
             Returns true if MoveToActionPointRequestArgs instances are equal
             </summary>
             <param name="input">Instance of MoveToActionPointRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotEef">
             <summary>
             RobotEef(data: arcor2_arserver_data.events.robot.RobotEef.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotEef.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotEef.ChangeTypeEnum.Add">
=======
        <member name="T:IO.Swagger.Model.BareScene">
             <summary>
             BareScene(id: str, name: str, desc: str = &lt;factory&gt;, modified: Union[datetime.datetime, NoneType] = None, int_modified: Union[datetime.datetime, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareScene" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareScene" /> class.
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="id">id (required).</param>
             <param name="intModified">intModified.</param>
             <param name="modified">modified.</param>
             <param name="name">name (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BareScene.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareScene.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareScene.IntModified">
             <summary>
             Gets or Sets IntModified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareScene.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareScene.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.ToString">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotEef.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.BareScene.ToJson">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotEef.ChangeTypeEnum.Remove">
=======
        <member name="M:IO.Swagger.Model.BareScene.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotEef.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotEef.ChangeType">
=======
        <member name="M:IO.Swagger.Model.BareScene.Equals(IO.Swagger.Model.BareScene)">
             <summary>
             Returns true if BareScene instances are equal
             </summary>
             <param name="input">Instance of BareScene to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEef.#ctor">
=======
        <member name="M:IO.Swagger.Model.BareScene.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEef" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEef.#ctor(System.Nullable{IO.Swagger.Model.RobotEef.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotEefData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEef" /> class.
=======
        <member name="T:IO.Swagger.Model.IdDesc">
             <summary>
             IdDesc(id: str, name: str, desc: Union[str, NoneType])
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotEef.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotEef.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotEef.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEef.ToString">
=======
        <member name="M:IO.Swagger.Model.IdDesc.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdDesc" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdDesc.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdDesc" /> class.
             </summary>
             <param name="desc">desc.</param>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.IdDesc.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.IdDesc.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.IdDesc.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdDesc.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEef.ToJson">
=======
        <member name="M:IO.Swagger.Model.IdDesc.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEef.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.IdDesc.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEef.Equals(IO.Swagger.Model.RobotEef)">
             <summary>
             Returns true if RobotEef instances are equal
             </summary>
             <param name="input">Instance of RobotEef to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotEef.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.IdDesc.Equals(IO.Swagger.Model.IdDesc)">
             <summary>
             Returns true if IdDesc instances are equal
             </summary>
             <param name="input">Instance of IdDesc to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.IdDesc.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotEef.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.IdDesc.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Parameter">
             <summary>
             Parameter(name: str, type: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Parameter.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Parameter" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Parameter.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Parameter" /> class.
             </summary>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
             <param name="value">value (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.Parameter.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Parameter.Type">
             <summary>
             Gets or Sets Type
=======
        <member name="T:IO.Swagger.Model.UpdateProjectHasLogicRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateProjectHasLogic.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateProjectHasLogicRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
>>>>>>> devel
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Parameter.Value">
             <summary>
             Gets or Sets Value
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.Equals(IO.Swagger.Model.UpdateProjectHasLogicRequest)">
             <summary>
             Returns true if UpdateProjectHasLogicRequest instances are equal
>>>>>>> devel
             </summary>
             <param name="input">Instance of UpdateProjectHasLogicRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Parameter.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetRobotJointsResponseAllOf">
             <summary>
             GetRobotJointsResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Joint})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Parameter.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Parameter.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Parameter.Equals(IO.Swagger.Model.Parameter)">
             <summary>
             Returns true if Parameter instances are equal
             </summary>
             <param name="input">Instance of Parameter to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Parameter.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.Equals(IO.Swagger.Model.GetRobotJointsResponseAllOf)">
             <summary>
             Returns true if GetRobotJointsResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of GetRobotJointsResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Parameter.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ChangedObjectTypesAllOf">
             <summary>
             ChangedObjectTypesAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ChangedObjectTypesAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ObjectTypeMeta})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ChangedObjectTypesAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ChangedObjectTypesAllOf.Data">
=======
        <member name="T:IO.Swagger.Model.AddLogicItemRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddLogicItem.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddLogicItemRequestArgs,System.Boolean)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.AddLogicItemRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.Equals(IO.Swagger.Model.ChangedObjectTypesAllOf)">
             <summary>
             Returns true if ChangedObjectTypesAllOf instances are equal
             </summary>
             <param name="input">Instance of ChangedObjectTypesAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.Equals(IO.Swagger.Model.AddLogicItemRequest)">
             <summary>
             Returns true if AddLogicItemRequest instances are equal
             </summary>
             <param name="input">Instance of AddLogicItemRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ChangedObjectTypesAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddActionPoint.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequest.#ctor">
=======
        <member name="T:IO.Swagger.Model.OpenScene">
             <summary>
             OpenScene(data: arcor2_arserver_data.events.scene.OpenScene.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.OpenScene.ChangeTypeEnum">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequest" /> class.
=======
        <member name="F:IO.Swagger.Model.OpenScene.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OpenScene.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OpenScene.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OpenScene.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenScene.ChangeType">
             <summary>
             Gets or Sets ChangeType
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointRequest.Request">
=======
        <member name="M:IO.Swagger.Model.OpenScene.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenScene" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenScene.#ctor(System.Nullable{IO.Swagger.Model.OpenScene.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.OpenSceneData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenScene" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenScene.Event">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointRequest.Args">
=======
        <member name="P:IO.Swagger.Model.OpenScene.ParentId">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.OpenScene.Data">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.OpenScene.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.OpenScene.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.OpenScene.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointRequest.Equals(IO.Swagger.Model.AddActionPointRequest)">
             <summary>
             Returns true if AddActionPointRequest instances are equal
             </summary>
             <param name="input">Instance of AddActionPointRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.OpenScene.Equals(IO.Swagger.Model.OpenScene)">
             <summary>
             Returns true if OpenScene instances are equal
             </summary>
             <param name="input">Instance of OpenScene to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenScene.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OpenScene.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeletePackageRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.DeletePackageRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeletePackageRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeletePackageRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequest.ToString">
=======
        <member name="T:IO.Swagger.Model.AddActionPointOrientationRequestArgs">
             <summary>
             Args(action_point_id: str, orientation: arcor2.data.common.Orientation, name: str = 'default')
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.#ctor(System.String,System.String,IO.Swagger.Model.Orientation)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="name">name (default to "default").</param>
             <param name="orientation">orientation (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequestArgs.Orientation">
             <summary>
             Gets or Sets Orientation
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageRequest.Equals(IO.Swagger.Model.DeletePackageRequest)">
             <summary>
             Returns true if DeletePackageRequest instances are equal
             </summary>
             <param name="input">Instance of DeletePackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.Equals(IO.Swagger.Model.AddActionPointOrientationRequestArgs)">
             <summary>
             Returns true if AddActionPointOrientationRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeletePackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateSceneDescriptionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.UpdateSceneDescription.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateSceneDescriptionRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequest.Id">
=======
        <member name="T:IO.Swagger.Model.BareAction">
             <summary>
             BareAction(id: str, name: str, type: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareAction.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareAction" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareAction.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareAction" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BareAction.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.BareAction.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareAction.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareAction.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.BareAction.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.BareAction.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.Equals(IO.Swagger.Model.UpdateSceneDescriptionRequest)">
             <summary>
             Returns true if UpdateSceneDescriptionRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateSceneDescriptionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.BareAction.Equals(IO.Swagger.Model.BareAction)">
             <summary>
             Returns true if BareAction instances are equal
             </summary>
             <param name="input">Instance of BareAction to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareAction.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.BareAction.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CopyActionPointRequestArgs">
             <summary>
             Args(id: str, position: Union[arcor2.data.common.Position, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.#ctor(System.String,IO.Swagger.Model.Position)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyActionPointRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="position">position.</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyActionPointRequestArgs.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="T:IO.Swagger.Model.CameraColorImageRequestArgs">
             <summary>
             Args(id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequestArgs" /> class.
             </summary>
             <param name="id">Camera id. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageRequestArgs.Id">
             <summary>
             Camera id.
>>>>>>> devel
             </summary>
             <value>Camera id.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopyActionPointRequestArgs.Position">
             <summary>
             Gets or Sets Position
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.Equals(IO.Swagger.Model.CopyActionPointRequestArgs)">
             <summary>
             Returns true if CopyActionPointRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CopyActionPointRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.Equals(IO.Swagger.Model.CameraColorImageRequestArgs)">
             <summary>
             Returns true if CameraColorImageRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CameraColorImageRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopyActionPointRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PausePackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PausePackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PausePackageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.PausePackageResponse.Id">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf">
             <summary>
             RobotMoveToActionPointJointsDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.#ctor(System.String,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf" /> class.
             </summary>
             <param name="jointsId">jointsId (required).</param>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.JointsId">
>>>>>>> devel
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.PausePackageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PausePackageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PausePackageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PausePackageResponse.Data">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.Safe">
>>>>>>> devel
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PausePackageResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PausePackageResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PausePackageResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PausePackageResponse.Equals(IO.Swagger.Model.PausePackageResponse)">
             <summary>
             Returns true if PausePackageResponse instances are equal
             </summary>
             <param name="input">Instance of PausePackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.Equals(IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf)">
             <summary>
             Returns true if RobotMoveToActionPointJointsDataAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointJointsDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PausePackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.HandTeachingModeAllOf">
             <summary>
             HandTeachingModeAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.#ctor(IO.Swagger.Model.HandTeachingModeData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeAllOf.Data">
=======
        <member name="T:IO.Swagger.Model.ExecuteActionRequestArgs">
             <summary>
             Args(action_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequestArgs" /> class.
             </summary>
             <param name="actionId">ID of the action to be executed. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionRequestArgs.ActionId">
>>>>>>> devel
             <summary>
             ID of the action to be executed.
             </summary>
             <value>ID of the action to be executed.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.Equals(IO.Swagger.Model.HandTeachingModeAllOf)">
             <summary>
             Returns true if HandTeachingModeAllOf instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.Equals(IO.Swagger.Model.ExecuteActionRequestArgs)">
             <summary>
             Returns true if ExecuteActionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of ExecuteActionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ExecuteActionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RunPackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.ObjectModel">
             <summary>
             ObjectModel(type: arcor2.data.object_type.Model3dType, box: Union[arcor2.data.object_type.Box, NoneType] = None, cylinder: Union[arcor2.data.object_type.Cylinder, NoneType] = None, sphere: Union[arcor2.data.object_type.Sphere, NoneType] = None, mesh: Union[arcor2.data.object_type.Mesh, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ObjectModel.TypeEnum">
             <summary>
             Defines Type
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ObjectModel.TypeEnum.None">
             <summary>
             Enum None for value: None
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ObjectModel.TypeEnum.Box">
             <summary>
             Enum Box for value: Box
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ObjectModel.TypeEnum.Cylinder">
             <summary>
             Enum Cylinder for value: Cylinder
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ObjectModel.TypeEnum.Sphere">
             <summary>
             Enum Sphere for value: Sphere
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ObjectModel.TypeEnum.Mesh">
             <summary>
             Enum Mesh for value: Mesh
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RunPackageResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.ObjectModel.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectModel.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectModel" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectModel.#ctor(IO.Swagger.Model.Box,IO.Swagger.Model.Cylinder,IO.Swagger.Model.Mesh,IO.Swagger.Model.Sphere,IO.Swagger.Model.ObjectModel.TypeEnum)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectModel" /> class.
             </summary>
             <param name="box">box.</param>
             <param name="cylinder">cylinder.</param>
             <param name="mesh">mesh.</param>
             <param name="sphere">sphere.</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ObjectModel.Box">
             <summary>
             Gets or Sets Box
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectModel.Cylinder">
             <summary>
             Gets or Sets Cylinder
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectModel.Mesh">
             <summary>
             Gets or Sets Mesh
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectModel.Sphere">
             <summary>
             Gets or Sets Sphere
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectModel.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ObjectModel.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ObjectModel.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageResponse.Equals(IO.Swagger.Model.RunPackageResponse)">
             <summary>
             Returns true if RunPackageResponse instances are equal
             </summary>
             <param name="input">Instance of RunPackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ObjectModel.Equals(IO.Swagger.Model.ObjectModel)">
             <summary>
             Returns true if ObjectModel instances are equal
             </summary>
             <param name="input">Instance of ObjectModel to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectModel.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RunPackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ObjectModel.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SaveSceneRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.SaveSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SaveSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SaveSceneRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneRequest.ToString">
=======
        <member name="T:IO.Swagger.Model.CameraColorParametersResponseAllOf">
             <summary>
             CameraColorParametersResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.#ctor(IO.Swagger.Model.CameraParameters)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveSceneRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveSceneRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveSceneRequest.Equals(IO.Swagger.Model.SaveSceneRequest)">
             <summary>
             Returns true if SaveSceneRequest instances are equal
             </summary>
             <param name="input">Instance of SaveSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.Equals(IO.Swagger.Model.CameraColorParametersResponseAllOf)">
             <summary>
             Returns true if CameraColorParametersResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of CameraColorParametersResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneStateAllOf">
             <summary>
             SceneStateAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneStateAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateAllOf.#ctor(IO.Swagger.Model.SceneStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneStateAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateSceneDescriptionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.UpdateSceneDescription.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateSceneDescriptionRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequest.Request">
             <summary>
             Gets or Sets Request
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneStateAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneStateAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneStateAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneStateAllOf.Equals(IO.Swagger.Model.SceneStateAllOf)">
             <summary>
             Returns true if SceneStateAllOf instances are equal
             </summary>
             <param name="input">Instance of SceneStateAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.Equals(IO.Swagger.Model.UpdateSceneDescriptionRequest)">
             <summary>
             Returns true if UpdateSceneDescriptionRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateSceneDescriptionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneStateAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeleteOverrideResponse">
=======
        <member name="T:IO.Swagger.Model.OpenSceneResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.OpenSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteOverrideResponse.Id">
=======
        <member name="P:IO.Swagger.Model.OpenSceneResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteOverrideResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.OpenSceneResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteOverrideResponse.Response">
=======
        <member name="P:IO.Swagger.Model.OpenSceneResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteOverrideResponse.Result">
=======
        <member name="P:IO.Swagger.Model.OpenSceneResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteOverrideResponse.Data">
=======
        <member name="P:IO.Swagger.Model.OpenSceneResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.OpenSceneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.OpenSceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.OpenSceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.Equals(IO.Swagger.Model.DeleteOverrideResponse)">
             <summary>
             Returns true if DeleteOverrideResponse instances are equal
             </summary>
             <param name="input">Instance of DeleteOverrideResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.OpenSceneResponse.Equals(IO.Swagger.Model.OpenSceneResponse)">
             <summary>
             Returns true if OpenSceneResponse instances are equal
             </summary>
             <param name="input">Instance of OpenSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OpenSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameActionPointRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RenameActionPoint.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointRequest.Id">
=======
        <member name="T:IO.Swagger.Model.DeleteObjectTypeResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionPointRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.DeleteObjectTypeResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.Equals(IO.Swagger.Model.RenameActionPointRequest)">
             <summary>
             Returns true if RenameActionPointRequest instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.Equals(IO.Swagger.Model.DeleteObjectTypeResponse)">
             <summary>
             Returns true if DeleteObjectTypeResponse instances are equal
             </summary>
             <param name="input">Instance of DeleteObjectTypeResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SphereAllOf">
             <summary>
             SphereAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SphereAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SphereAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SphereAllOf.#ctor(System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SphereAllOf" /> class.
             </summary>
             <param name="radius">radius (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SphereAllOf.Radius">
             <summary>
             Gets or Sets Radius
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SphereAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.PackageChangedAllOf">
             <summary>
             PackageChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.#ctor(IO.Swagger.Model.PackageSummary)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageChangedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SphereAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SphereAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SphereAllOf.Equals(IO.Swagger.Model.SphereAllOf)">
             <summary>
             Returns true if SphereAllOf instances are equal
             </summary>
             <param name="input">Instance of SphereAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SphereAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.Equals(IO.Swagger.Model.PackageChangedAllOf)">
             <summary>
             Returns true if PackageChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of PackageChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SphereAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ForwardKinematicsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.ForwardKinematics.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.ForwardKinematicsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.ActionAllOf">
             <summary>
             ActionAllOf
>>>>>>> devel
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequest.Id">
=======
        <member name="M:IO.Swagger.Model.ActionAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Flow},System.Collections.Generic.List{IO.Swagger.Model.ActionParameter})">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionAllOf" /> class.
             </summary>
             <param name="flows">flows.</param>
             <param name="parameters">parameters.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequest.Request">
=======
        <member name="P:IO.Swagger.Model.ActionAllOf.Flows">
>>>>>>> devel
             <summary>
             Gets or Sets Flows
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequest.Args">
=======
        <member name="P:IO.Swagger.Model.ActionAllOf.Parameters">
>>>>>>> devel
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.ActionAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.Equals(IO.Swagger.Model.ForwardKinematicsRequest)">
             <summary>
             Returns true if ForwardKinematicsRequest instances are equal
             </summary>
             <param name="input">Instance of ForwardKinematicsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionAllOf.Equals(IO.Swagger.Model.ActionAllOf)">
             <summary>
             Returns true if ActionAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OpenProjectAllOf">
             <summary>
             OpenProjectAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.#ctor(IO.Swagger.Model.OpenProjectData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenProjectAllOf.Data">
=======
        <member name="T:IO.Swagger.Model.RobotArg">
             <summary>
             RobotArg(robot_id: str, end_effector: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotArg.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotArg" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotArg.#ctor(System.String,System.String)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotArg" /> class.
             </summary>
             <param name="endEffector">endEffector (required).</param>
             <param name="robotId">Object id of the robot or robot_id within the robot service. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotArg.EndEffector">
             <summary>
             Gets or Sets EndEffector
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotArg.RobotId">
             <summary>
             Object id of the robot or robot_id within the robot service.
             </summary>
             <value>Object id of the robot or robot_id within the robot service.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.RobotArg.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotArg.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotArg.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.Equals(IO.Swagger.Model.OpenProjectAllOf)">
             <summary>
             Returns true if OpenProjectAllOf instances are equal
             </summary>
             <param name="input">Instance of OpenProjectAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotArg.Equals(IO.Swagger.Model.RobotArg)">
             <summary>
             Returns true if RobotArg instances are equal
             </summary>
             <param name="input">Instance of RobotArg to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotArg.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenProjectAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotArg.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetRobotMetaRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotMetaRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotMetaRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotMetaRequest.Id">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToPoseDataAllOf">
             <summary>
             RobotMoveToPoseDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseDataAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.#ctor(System.String,System.String,System.Boolean,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseDataAllOf" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
             <param name="targetPose">targetPose (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseDataAllOf.EndEffectorId">
>>>>>>> devel
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetRobotMetaRequest.Request">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToPoseDataAllOf.Message">
>>>>>>> devel
             <summary>
             Gets or Sets Message
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetRobotMetaRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToPoseDataAllOf.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseDataAllOf.TargetPose">
             <summary>
             Gets or Sets TargetPose
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.Equals(IO.Swagger.Model.GetRobotMetaRequest)">
             <summary>
             Returns true if GetRobotMetaRequest instances are equal
             </summary>
             <param name="input">Instance of GetRobotMetaRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.Equals(IO.Swagger.Model.RobotMoveToPoseDataAllOf)">
             <summary>
             Returns true if RobotMoveToPoseDataAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToPoseDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveConstantResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantResponse.Id">
=======
        <member name="T:IO.Swagger.Model.UpdateLogicItemRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateLogicItem.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateLogicItemRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveConstantResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantResponse.Response">
             <summary>
             Gets or Sets Response
=======
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.Equals(IO.Swagger.Model.UpdateLogicItemRequest)">
             <summary>
             Returns true if UpdateLogicItemRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateLogicItemRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.NewSceneRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.NewScene.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.NewSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveConstantResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.NewSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.Equals(IO.Swagger.Model.RemoveConstantResponse)">
             <summary>
             Returns true if RemoveConstantResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveConstantResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequest.Equals(IO.Swagger.Model.NewSceneRequest)">
             <summary>
             Returns true if NewSceneRequest instances are equal
             </summary>
             <param name="input">Instance of NewSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NewSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Scene">
             <summary>
             Scene(id: str, name: str, desc: str = &lt;factory&gt;, modified: Union[datetime.datetime, NoneType] = None, int_modified: Union[datetime.datetime, NoneType] = None, objects: List[arcor2.data.common.SceneObject] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Scene.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Scene" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Scene.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String,System.Collections.Generic.List{IO.Swagger.Model.SceneObject})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Scene" /> class.
=======
        <member name="T:IO.Swagger.Model.DeleteObjectTypeRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="id">id (required).</param>
<<<<<<< HEAD
             <param name="intModified">intModified.</param>
             <param name="modified">modified.</param>
             <param name="name">name (required).</param>
             <param name="objects">objects.</param>
            </member>
        <member name="P:IO.Swagger.Model.Scene.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Scene.Id">
=======
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Scene.IntModified">
=======
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets IntModified
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Scene.Modified">
=======
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Scene.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Scene.Objects">
             <summary>
             Gets or Sets Objects
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Scene.ToString">
=======
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Scene.ToJson">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Scene.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Scene.Equals(IO.Swagger.Model.Scene)">
             <summary>
             Returns true if Scene instances are equal
             </summary>
             <param name="input">Instance of Scene to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Scene.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.Equals(IO.Swagger.Model.DeleteObjectTypeRequest)">
             <summary>
             Returns true if DeleteObjectTypeRequest instances are equal
             </summary>
             <param name="input">Instance of DeleteObjectTypeRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Scene.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotArg">
             <summary>
             RobotArg(robot_id: str, end_effector: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotArg.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotArg" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotArg.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotArg" /> class.
             </summary>
             <param name="endEffector">endEffector (required).</param>
             <param name="robotId">Object id of the robot or robot_id within the robot service. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotArg.EndEffector">
             <summary>
             Gets or Sets EndEffector
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotArg.RobotId">
             <summary>
             Object id of the robot or robot_id within the robot service.
             </summary>
             <value>Object id of the robot or robot_id within the robot service.</value>
            </member>
        <member name="M:IO.Swagger.Model.RobotArg.ToString">
=======
        <member name="T:IO.Swagger.Model.RobotEefDataEefPose">
             <summary>
             EefPose(end_effector_id: str, pose: arcor2.data.common.Pose)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefDataEefPose" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.#ctor(System.String,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefDataEefPose" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="pose">pose (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotEefDataEefPose.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotEefDataEefPose.Pose">
             <summary>
             Gets or Sets Pose
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotArg.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotArg.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotArg.Equals(IO.Swagger.Model.RobotArg)">
             <summary>
             Returns true if RobotArg instances are equal
             </summary>
             <param name="input">Instance of RobotArg to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotArg.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.Equals(IO.Swagger.Model.RobotEefDataEefPose)">
             <summary>
             Returns true if RobotEefDataEefPose instances are equal
             </summary>
             <param name="input">Instance of RobotEefDataEefPose to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotArg.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotEefDataEefPose.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectSaved">
=======
        <member name="T:IO.Swagger.Model.CloseProjectRequestAllOf">
             <summary>
             CloseProjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.#ctor(IO.Swagger.Model.CloseProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectRequestAllOf" /> class.
             </summary>
             <param name="args">args.</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             ProjectSaved()
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectSaved.ChangeTypeEnum">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectSaved.ChangeTypeEnum.Add">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectSaved.ChangeTypeEnum.Update">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ProjectSaved.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectSaved.ChangeTypeEnum.Updatebase">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.Equals(IO.Swagger.Model.CloseProjectRequestAllOf)">
             <summary>
             Returns true if CloseProjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CloseProjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectSaved.ChangeType">
=======
        <member name="M:IO.Swagger.Model.CloseProjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectSaved.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectSaved" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectSaved.#ctor(System.Nullable{IO.Swagger.Model.ProjectSaved.ChangeTypeEnum},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectSaved" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectSaved.Event">
             <summary>
             Gets or Sets Event
=======
        <member name="T:IO.Swagger.Model.DeleteOverrideRequestArgs">
             <summary>
             Args(id: str, override: arcor2.data.common.Parameter)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.#ctor(System.String,IO.Swagger.Model.Parameter)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="_override">_override (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectSaved.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectSaved.Data">
=======
        <member name="P:IO.Swagger.Model.DeleteOverrideRequestArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideRequestArgs.Override">
>>>>>>> devel
             <summary>
             Gets or Sets Override
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectSaved.ToString">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectSaved.ToJson">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectSaved.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectSaved.Equals(IO.Swagger.Model.ProjectSaved)">
             <summary>
             Returns true if ProjectSaved instances are equal
             </summary>
             <param name="input">Instance of ProjectSaved to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectSaved.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.Equals(IO.Swagger.Model.DeleteOverrideRequestArgs)">
             <summary>
             Returns true if DeleteOverrideRequestArgs instances are equal
             </summary>
             <param name="input">Instance of DeleteOverrideRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectSaved.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionMetadata">
             <summary>
             ActionMetadata(blocking: bool = False, composite: bool = False, blackbox: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionMetadata.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionMetadata" /> class.
=======
        <member name="T:IO.Swagger.Model.ActionParamValuesResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="blackbox">blackbox (default to false).</param>
             <param name="blocking">blocking (default to false).</param>
             <param name="cancellable">cancellable (default to false).</param>
             <param name="composite">composite (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionMetadata.Blackbox">
             <summary>
             Gets or Sets Blackbox
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionMetadata.Blocking">
             <summary>
             Gets or Sets Blocking
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionMetadata.Cancellable">
             <summary>
             Gets or Sets Cancellable
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionMetadata.Composite">
             <summary>
             Gets or Sets Composite
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionMetadata.ToString">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionMetadata.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionMetadata.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionMetadata.Equals(IO.Swagger.Model.ActionMetadata)">
             <summary>
             Returns true if ActionMetadata instances are equal
             </summary>
             <param name="input">Instance of ActionMetadata to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionMetadata.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.Equals(IO.Swagger.Model.ActionParamValuesResponse)">
             <summary>
             Returns true if ActionParamValuesResponse instances are equal
             </summary>
             <param name="input">Instance of ActionParamValuesResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionMetadata.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateConstantRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateConstant.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointParentRequestAllOf">
             <summary>
             UpdateActionPointParentRequestAllOf
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateConstantRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequest.Request">
             <summary>
             Gets or Sets Request
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointParentRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateConstantRequest.Args">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateConstantRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.Equals(IO.Swagger.Model.UpdateConstantRequest)">
             <summary>
             Returns true if UpdateConstantRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateConstantRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointParentRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointParentRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointParentRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PackageState">
             <summary>
             PackageState(data: arcor2.data.events.PackageState.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.PackageState.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageState.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageState.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageState.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageState.ChangeTypeEnum.Updatebase">
=======
        <member name="T:IO.Swagger.Model.OrientationAllOf">
>>>>>>> devel
             <summary>
             OrientationAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.PackageState.ChangeType">
=======
        <member name="M:IO.Swagger.Model.OrientationAllOf.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OrientationAllOf" /> class.
             </summary>
             <param name="w">w (default to 1.0M).</param>
             <param name="x">x (default to 0.0M).</param>
             <param name="y">y (default to 0.0M).</param>
             <param name="z">z (default to 0.0M).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageState.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageState" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageState.#ctor(System.Nullable{IO.Swagger.Model.PackageState.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.PackageStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageState" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageState.Event">
=======
        <member name="P:IO.Swagger.Model.OrientationAllOf.W">
             <summary>
             Gets or Sets W
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OrientationAllOf.X">
>>>>>>> devel
             <summary>
             Gets or Sets X
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.PackageState.ParentId">
=======
        <member name="P:IO.Swagger.Model.OrientationAllOf.Y">
>>>>>>> devel
             <summary>
             Gets or Sets Y
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.PackageState.Data">
=======
        <member name="P:IO.Swagger.Model.OrientationAllOf.Z">
>>>>>>> devel
             <summary>
             Gets or Sets Z
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageState.ToString">
=======
        <member name="M:IO.Swagger.Model.OrientationAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageState.ToJson">
=======
        <member name="M:IO.Swagger.Model.OrientationAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageState.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.OrientationAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageState.Equals(IO.Swagger.Model.PackageState)">
             <summary>
             Returns true if PackageState instances are equal
             </summary>
             <param name="input">Instance of PackageState to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageState.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.OrientationAllOf.Equals(IO.Swagger.Model.OrientationAllOf)">
             <summary>
             Returns true if OrientationAllOf instances are equal
             </summary>
             <param name="input">Instance of OrientationAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageState.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OrientationAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetSuctionsRequestAllOf">
             <summary>
             GetSuctionsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.#ctor(IO.Swagger.Model.GetSuctionsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddActionPointJointsUsingRobot.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
<<<<<<< HEAD
            </member>
        <member name="P:IO.Swagger.Model.GetSuctionsRequestAllOf.Args">
=======
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.Equals(IO.Swagger.Model.GetSuctionsRequestAllOf)">
             <summary>
             Returns true if GetSuctionsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetSuctionsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.Equals(IO.Swagger.Model.AddActionPointJointsUsingRobotRequest)">
             <summary>
             Returns true if AddActionPointJointsUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of AddActionPointJointsUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetSuctionsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.HandTeachingModeResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeResponse.Id">
=======
        <member name="T:IO.Swagger.Model.InverseKinematicsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.InverseKinematics.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.InverseKinematicsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.HandTeachingModeResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.InverseKinematicsRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.HandTeachingModeResponse.Response">
=======
        <member name="P:IO.Swagger.Model.InverseKinematicsRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.HandTeachingModeResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.Equals(IO.Swagger.Model.HandTeachingModeResponse)">
             <summary>
             Returns true if HandTeachingModeResponse instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.Equals(IO.Swagger.Model.InverseKinematicsRequest)">
             <summary>
             Returns true if InverseKinematicsRequest instances are equal
             </summary>
             <param name="input">Instance of InverseKinematicsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.InverseKinematicsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionPointAllOf">
             <summary>
             ActionPointAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Action},System.Collections.Generic.List{IO.Swagger.Model.NamedOrientation},System.Collections.Generic.List{IO.Swagger.Model.ProjectRobotJoints})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPointAllOf" /> class.
             </summary>
             <param name="actions">actions.</param>
             <param name="orientations">orientations.</param>
             <param name="robotJoints">robotJoints.</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointAllOf.Actions">
             <summary>
             Gets or Sets Actions
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointAllOf.Orientations">
             <summary>
             Gets or Sets Orientations
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPointAllOf.RobotJoints">
             <summary>
             Gets or Sets RobotJoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToPoseData">
             <summary>
             Data(move_event_type: arcor2_arserver_data.events.robot.RobotMoveToData.MoveEventType, robot_id: str, end_effector_id: str, target_pose: arcor2.data.common.Pose, safe: bool, message: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToPoseData.MoveEventTypeEnum">
             <summary>
             Defines MoveEventType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToPoseData.MoveEventTypeEnum.Start">
             <summary>
             Enum Start for value: start
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToPoseData.MoveEventTypeEnum.End">
             <summary>
             Enum End for value: end
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToPoseData.MoveEventTypeEnum.Failed">
>>>>>>> devel
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointAllOf.ToJson">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.MoveEventType">
>>>>>>> devel
             <summary>
             Gets or Sets MoveEventType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseData" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointAllOf.Equals(IO.Swagger.Model.ActionPointAllOf)">
             <summary>
             Returns true if ActionPointAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionPointAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPointAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.#ctor(IO.Swagger.Model.RobotMoveToPoseData.MoveEventTypeEnum,System.String,System.String,System.String,System.Boolean,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseData" /> class.
             </summary>
             <param name="moveEventType">moveEventType (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
             <param name="targetPose">targetPose (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.RobotId">
>>>>>>> devel
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionPointAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.EndEffectorId">
>>>>>>> devel
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CloseProjectRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.CloseProject.Request.Args = &lt;factory&gt;, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CloseProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectRequest" /> class.
=======
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.TargetPose">
             <summary>
             Gets or Sets TargetPose
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args.</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CloseProjectRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectRequest.Equals(IO.Swagger.Model.CloseProjectRequest)">
             <summary>
             Returns true if CloseProjectRequest instances are equal
             </summary>
             <param name="input">Instance of CloseProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.Equals(IO.Swagger.Model.RobotMoveToPoseData)">
             <summary>
             Returns true if RobotMoveToPoseData instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToPoseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ObjectAction">
             <summary>
             ObjectAction(name: str, description: Union[str, NoneType] = None, parameters: List[arcor2.data.object_type.ParameterMeta] = &lt;factory&gt;, meta: arcor2.data.common.ActionMetadata = &lt;factory&gt;, origins: Union[str, NoneType] = None, returns: List[str] = &lt;factory&gt;, disabled: bool = False, problem: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectAction" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.#ctor(System.String,System.Boolean,IO.Swagger.Model.ActionMetadata,System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.ParameterMeta},System.String,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectAction" /> class.
             </summary>
             <param name="description">description.</param>
             <param name="disabled">disabled (default to false).</param>
             <param name="meta">meta.</param>
             <param name="name">name (required).</param>
             <param name="origins">origins.</param>
             <param name="parameters">parameters.</param>
             <param name="problem">problem.</param>
             <param name="returns">returns.</param>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Disabled">
             <summary>
             Gets or Sets Disabled
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Meta">
             <summary>
             Gets or Sets Meta
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Name">
             <summary>
             Gets or Sets Name
=======
        <member name="T:IO.Swagger.Model.DeleteOverrideRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.DeleteOverride.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.DeleteOverrideRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ObjectAction.Origins">
             <summary>
             Gets or Sets Origins
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Problem">
             <summary>
             Gets or Sets Problem
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectAction.Returns">
             <summary>
             Gets or Sets Returns
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.ToString">
=======
        <member name="P:IO.Swagger.Model.DeleteOverrideRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ObjectAction.ToJson">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ObjectAction.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ObjectAction.Equals(IO.Swagger.Model.ObjectAction)">
             <summary>
             Returns true if ObjectAction instances are equal
             </summary>
             <param name="input">Instance of ObjectAction to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectAction.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.Equals(IO.Swagger.Model.DeleteOverrideRequest)">
             <summary>
             Returns true if DeleteOverrideRequest instances are equal
             </summary>
             <param name="input">Instance of DeleteOverrideRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ObjectAction.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.DeleteOverrideRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneChangedAllOf">
             <summary>
             SceneChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneChangedAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.MarkersCornersRequestArgs">
             <summary>
             Args(camera_parameters: arcor2.data.camera.CameraParameters, image: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.#ctor(IO.Swagger.Model.CameraParameters,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="cameraParameters">cameraParameters (required).</param>
             <param name="image">Base64 encoded image. (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.#ctor(IO.Swagger.Model.BareScene)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneChangedAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.MarkersCornersRequestArgs.CameraParameters">
             <summary>
             Gets or Sets CameraParameters
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneChangedAllOf.Data">
             <summary>
             Gets or Sets Data
=======
        <member name="P:IO.Swagger.Model.MarkersCornersRequestArgs.Image">
             <summary>
             Base64 encoded image.
>>>>>>> devel
             </summary>
             <value>Base64 encoded image.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.Equals(IO.Swagger.Model.SceneChangedAllOf)">
             <summary>
             Returns true if SceneChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of SceneChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.Equals(IO.Swagger.Model.MarkersCornersRequestArgs)">
             <summary>
             Returns true if MarkersCornersRequestArgs instances are equal
             </summary>
             <param name="input">Instance of MarkersCornersRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CameraColorImageRequestAllOf">
             <summary>
             CameraColorImageRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.#ctor(IO.Swagger.Model.CameraColorImageRequestArgs)">
=======
        <member name="T:IO.Swagger.Model.SaveSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.SaveSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SaveSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SaveSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SaveSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SaveSceneResponse.Data">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.SaveSceneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.SaveSceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SaveSceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.Equals(IO.Swagger.Model.CameraColorImageRequestAllOf)">
             <summary>
             Returns true if CameraColorImageRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CameraColorImageRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SaveSceneResponse.Equals(IO.Swagger.Model.SaveSceneResponse)">
             <summary>
             Returns true if SaveSceneResponse instances are equal
             </summary>
             <param name="input">Instance of SaveSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorImageRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SaveSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.FocusObjectStartRequestArgs">
=======
        <member name="T:IO.Swagger.Model.GetSuctionsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetSuctionsResponse.Id">
>>>>>>> devel
             <summary>
             Args(object_id: str, robot: arcor2.data.rpc.common.RobotArg)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.#ctor">
=======
        <member name="P:IO.Swagger.Model.GetSuctionsResponse.Messages">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequestArgs" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.#ctor(System.String,IO.Swagger.Model.RobotArg)">
=======
        <member name="P:IO.Swagger.Model.GetSuctionsResponse.Response">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectStartRequestArgs" /> class.
             </summary>
             <param name="objectId">objectId (required).</param>
             <param name="robot">robot (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FocusObjectStartRequestArgs.ObjectId">
=======
        <member name="P:IO.Swagger.Model.GetSuctionsResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets ObjectId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FocusObjectStartRequestArgs.Robot">
=======
        <member name="P:IO.Swagger.Model.GetSuctionsResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.Equals(IO.Swagger.Model.FocusObjectStartRequestArgs)">
             <summary>
             Returns true if FocusObjectStartRequestArgs instances are equal
             </summary>
             <param name="input">Instance of FocusObjectStartRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.Equals(IO.Swagger.Model.GetSuctionsResponse)">
             <summary>
             Returns true if GetSuctionsResponse instances are equal
             </summary>
             <param name="input">Instance of GetSuctionsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectStartRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetSuctionsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NewObjectTypeRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.objects.ObjectTypeMeta, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.ObjectTypeMeta,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeRequest.Id">
=======
        <member name="T:IO.Swagger.Model.ProjectException">
             <summary>
             ProjectException(data: arcor2.data.events.ProjectException.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ProjectException.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectException.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectException.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewObjectTypeRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.ToString">
=======
        <member name="F:IO.Swagger.Model.ProjectException.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectException.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectException.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectException.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectException" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectException.#ctor(System.Nullable{IO.Swagger.Model.ProjectException.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ProjectExceptionData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectException" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectException.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectException.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectException.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectException.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectException.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectException.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.Equals(IO.Swagger.Model.NewObjectTypeRequest)">
             <summary>
             Returns true if NewObjectTypeRequest instances are equal
             </summary>
             <param name="input">Instance of NewObjectTypeRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectException.Equals(IO.Swagger.Model.ProjectException)">
             <summary>
             Returns true if ProjectException instances are equal
             </summary>
             <param name="input">Instance of ProjectException to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectException.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectException.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateConstantResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantResponse.Id">
=======
        <member name="T:IO.Swagger.Model.GetObjectTypesRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetObjectTypesRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetObjectTypesRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.GetObjectTypesRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateConstantResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantResponse.Data">
=======
        <member name="P:IO.Swagger.Model.GetObjectTypesRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetObjectTypesRequest.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.Equals(IO.Swagger.Model.UpdateConstantResponse)">
             <summary>
             Returns true if UpdateConstantResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateConstantResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.Equals(IO.Swagger.Model.GetObjectTypesRequest)">
             <summary>
             Returns true if GetObjectTypesRequest instances are equal
             </summary>
             <param name="input">Instance of GetObjectTypesRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateConstantResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetObjectTypesRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.TemporaryPackageRequest">
=======
        <member name="T:IO.Swagger.Model.Event">
             <summary>
             Event()
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.Event.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Event.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Event.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Event.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Event.ChangeTypeEnum.Updatebase">
>>>>>>> devel
             <summary>
             Request(id: int)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.#ctor">
=======
        <member name="P:IO.Swagger.Model.Event.ChangeType">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TemporaryPackageRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TemporaryPackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageRequest.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="M:IO.Swagger.Model.Event.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Event" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Event.#ctor(System.Nullable{IO.Swagger.Model.Event.ChangeTypeEnum},System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Event" /> class.
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.TemporaryPackageRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageRequest.Data">
=======
        <member name="P:IO.Swagger.Model.Event._Event">
             <summary>
             Gets or Sets _Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Event.ParentId">
>>>>>>> devel
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.Event.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.Event.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Event.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.Equals(IO.Swagger.Model.TemporaryPackageRequest)">
             <summary>
             Returns true if TemporaryPackageRequest instances are equal
             </summary>
             <param name="input">Instance of TemporaryPackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Event.Equals(IO.Swagger.Model.Event)">
             <summary>
             Returns true if Event instances are equal
             </summary>
             <param name="input">Instance of Event to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Event.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TemporaryPackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Event.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs">
             <summary>
             Args(project_id: str, new_has_logic: bool)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.#ctor(System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs" /> class.
             </summary>
             <param name="newHasLogic">newHasLogic (required).</param>
             <param name="projectId">projectId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.NewHasLogic">
             <summary>
             Gets or Sets NewHasLogic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.ProjectId">
             <summary>
             Gets or Sets ProjectId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointUsingRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.Equals(IO.Swagger.Model.UpdateProjectHasLogicRequestArgs)">
             <summary>
             Returns true if UpdateProjectHasLogicRequestArgs instances are equal
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Response">
             <summary>
             Gets or Sets Response
>>>>>>> devel
             </summary>
             <param name="input">Instance of UpdateProjectHasLogicRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Result">
             <summary>
             Gets or Sets Result
>>>>>>> devel
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Data">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameActionPointRequestAllOf">
             <summary>
             RenameActionPointRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.#ctor(IO.Swagger.Model.RenameActionPointRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionPointRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.Equals(IO.Swagger.Model.RenameActionPointRequestAllOf)">
             <summary>
             Returns true if RenameActionPointRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.Equals(IO.Swagger.Model.UpdateActionPointUsingRobotResponse)">
             <summary>
             Returns true if UpdateActionPointUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneObject">
             <summary>
             SceneObject(id: str, name: str, type: str, pose: Union[arcor2.data.common.Pose, NoneType] = None, parameters: List[arcor2.data.common.Parameter] = &lt;factory&gt;, children: List[ForwardRef('SceneObject')] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObject.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObject" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObject.#ctor(System.Collections.Generic.List{IO.Swagger.Model.SceneObject},System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.Parameter},IO.Swagger.Model.Pose,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObject" /> class.
             </summary>
             <param name="children">children.</param>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="parameters">parameters.</param>
             <param name="pose">pose.</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneObject.Children">
             <summary>
             Gets or Sets Children
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObject.Id">
=======
        <member name="T:IO.Swagger.Model.ActionCancelled">
             <summary>
             Used to notify that the action execution was cancelled.
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ActionCancelled.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionCancelled.ChangeTypeEnum.Add">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneObject.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObject.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObject.Pose">
             <summary>
             Gets or Sets Pose
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneObject.Type">
=======
        <member name="F:IO.Swagger.Model.ActionCancelled.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionCancelled.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionCancelled.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionCancelled.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelled.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionCancelled" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelled.#ctor(System.Nullable{IO.Swagger.Model.ActionCancelled.ChangeTypeEnum},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionCancelled" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionCancelled.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionCancelled.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionCancelled.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Type
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObject.ToString">
=======
        <member name="M:IO.Swagger.Model.ActionCancelled.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObject.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionCancelled.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObject.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionCancelled.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObject.Equals(IO.Swagger.Model.SceneObject)">
             <summary>
             Returns true if SceneObject instances are equal
             </summary>
             <param name="input">Instance of SceneObject to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObject.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionCancelled.Equals(IO.Swagger.Model.ActionCancelled)">
             <summary>
             Returns true if ActionCancelled instances are equal
             </summary>
             <param name="input">Instance of ActionCancelled to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelled.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionCancelled.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CalibrateCameraRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.camera.CalibrateCamera.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CalibrateCameraRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.ToString">
=======
        <member name="T:IO.Swagger.Model.UpdateConstantRequestArgs">
             <summary>
             Args(constant_id: str, name: Union[str, NoneType] = None, value: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequestArgs" /> class.
             </summary>
             <param name="constantId">constantId (required).</param>
             <param name="name">name.</param>
             <param name="value">value.</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequestArgs.ConstantId">
             <summary>
             Gets or Sets ConstantId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequestArgs.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.Equals(IO.Swagger.Model.CalibrateCameraRequest)">
             <summary>
             Returns true if CalibrateCameraRequest instances are equal
             </summary>
             <param name="input">Instance of CalibrateCameraRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.Equals(IO.Swagger.Model.UpdateConstantRequestArgs)">
             <summary>
             Returns true if UpdateConstantRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateConstantRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveFromSceneRequestArgs">
             <summary>
             Args(id: str, force: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.#ctor(System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="force">force (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequestArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequestArgs.Force">
             <summary>
             Gets or Sets Force
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.FocusObjectDoneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2_arserver_data.rpc.objects.FocusObject.Response.Data, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectDoneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.FocusObjectResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectDoneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.Equals(IO.Swagger.Model.RemoveFromSceneRequestArgs)">
             <summary>
             Returns true if RemoveFromSceneRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RemoveFromSceneRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.Equals(IO.Swagger.Model.FocusObjectDoneResponse)">
             <summary>
             Returns true if FocusObjectDoneResponse instances are equal
             </summary>
             <param name="input">Instance of FocusObjectDoneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FocusObjectDoneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateProjectHasLogicResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.ToString">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToPoseAllOf">
             <summary>
             RobotMoveToPoseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.#ctor(IO.Swagger.Model.RobotMoveToPoseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.Equals(IO.Swagger.Model.UpdateProjectHasLogicResponse)">
             <summary>
             Returns true if UpdateProjectHasLogicResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectHasLogicResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.Equals(IO.Swagger.Model.RobotMoveToPoseAllOf)">
             <summary>
             Returns true if RobotMoveToPoseAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToPoseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ForwardKinematicsRequestArgs">
             <summary>
             Args(robot_id: str, end_effector_id: str, joints: List[arcor2.data.common.Joint])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Joint},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequestArgs" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="joints">joints (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequestArgs.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequestArgs.Joints">
             <summary>
             Gets or Sets Joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.UpdateActionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.Equals(IO.Swagger.Model.UpdateActionResponse)">
             <summary>
             Returns true if UpdateActionResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddActionPointRequestArgs">
             <summary>
             Args(name: str, position: arcor2.data.common.Position, parent: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.#ctor(System.String,System.String,IO.Swagger.Model.Position)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequestArgs" /> class.
             </summary>
             <param name="name">name (required).</param>
             <param name="parent">parent.</param>
             <param name="position">position (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointRequestArgs.Parent">
             <summary>
             Gets or Sets Parent
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointRequestArgs.Position">
             <summary>
             Gets or Sets Position
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.Equals(IO.Swagger.Model.ForwardKinematicsRequestArgs)">
             <summary>
             Returns true if ForwardKinematicsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of ForwardKinematicsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.Equals(IO.Swagger.Model.AddActionPointRequestArgs)">
             <summary>
             Returns true if AddActionPointRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddActionPointRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.StopRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.StopRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.StopRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.Flow">
             <summary>
             Flow(type: arcor2.data.common.FlowTypes = &lt;FlowTypes.DEFAULT: 'default'&gt;, outputs: List[str] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.Flow.TypeEnum">
             <summary>
             Defines Type
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Flow.TypeEnum.Default">
             <summary>
             Enum Default for value: default
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.StopRobotRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopRobotRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.Flow.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Flow.#ctor(System.Collections.Generic.List{System.String},System.Nullable{IO.Swagger.Model.Flow.TypeEnum})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Flow" /> class.
             </summary>
             <param name="outputs">outputs.</param>
             <param name="type">type (default to TypeEnum.Default).</param>
            </member>
        <member name="P:IO.Swagger.Model.Flow.Outputs">
             <summary>
             Gets or Sets Outputs
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Flow.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.Flow.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Flow.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotRequest.Equals(IO.Swagger.Model.StopRobotRequest)">
             <summary>
             Returns true if StopRobotRequest instances are equal
             </summary>
             <param name="input">Instance of StopRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Flow.Equals(IO.Swagger.Model.Flow)">
             <summary>
             Returns true if Flow instances are equal
             </summary>
             <param name="input">Instance of Flow to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Flow.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Flow.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CameraColorParametersRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.camera.CameraColorParameters.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CameraColorParametersRequestArgs)">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf">
             <summary>
             RobotMoveToActionPointJointsAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.#ctor(IO.Swagger.Model.RobotMoveToActionPointJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.Data">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.Equals(IO.Swagger.Model.CameraColorParametersRequest)">
             <summary>
             Returns true if CameraColorParametersRequest instances are equal
             </summary>
             <param name="input">Instance of CameraColorParametersRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.Equals(IO.Swagger.Model.RobotMoveToActionPointJointsAllOf)">
             <summary>
             Returns true if RobotMoveToActionPointJointsAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointJointsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectParametersRequestArgs">
=======
        <member name="T:IO.Swagger.Model.SceneChanged">
             <summary>
             SceneChanged(data: arcor2.data.common.BareScene)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneChanged.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneChanged.ChangeType">
>>>>>>> devel
             <summary>
             Args(id: str, parameters: List[arcor2.data.common.Parameter] = &lt;factory&gt;)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Parameter})">
=======
        <member name="M:IO.Swagger.Model.SceneChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneChanged.#ctor(System.Nullable{IO.Swagger.Model.SceneChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.BareScene)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneChanged.Event">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="parameters">parameters.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequestArgs.Id">
=======
        <member name="P:IO.Swagger.Model.SceneChanged.ParentId">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequestArgs.Parameters">
=======
        <member name="P:IO.Swagger.Model.SceneChanged.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.SceneChanged.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneChanged.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneChanged.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.Equals(IO.Swagger.Model.UpdateObjectParametersRequestArgs)">
             <summary>
             Returns true if UpdateObjectParametersRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectParametersRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneChanged.Equals(IO.Swagger.Model.SceneChanged)">
             <summary>
             Returns true if SceneChanged instances are equal
             </summary>
             <param name="input">Instance of SceneChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneChanged.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ExecuteActionRequestAllOf">
             <summary>
             ExecuteActionRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.#ctor(IO.Swagger.Model.ExecuteActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ExecuteActionRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ExecuteActionRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.RemoveFromSceneRequestArgs">
             <summary>
             Args(id: str, force: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.#ctor(System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="force">force (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequestArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequestArgs.Force">
             <summary>
             Gets or Sets Force
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.Equals(IO.Swagger.Model.ExecuteActionRequestAllOf)">
             <summary>
             Returns true if ExecuteActionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of ExecuteActionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.Equals(IO.Swagger.Model.RemoveFromSceneRequestArgs)">
             <summary>
             Returns true if RemoveFromSceneRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RemoveFromSceneRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ExecuteActionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectAllOf">
             <summary>
             ProjectAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ActionPoint},System.Collections.Generic.List{IO.Swagger.Model.ProjectConstant},System.Collections.Generic.List{IO.Swagger.Model.ProjectFunction},System.Collections.Generic.List{IO.Swagger.Model.LogicItem},System.Collections.Generic.List{IO.Swagger.Model.SceneObjectOverride})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectAllOf" /> class.
             </summary>
             <param name="actionPoints">actionPoints.</param>
             <param name="constants">constants.</param>
             <param name="functions">functions.</param>
             <param name="logic">logic.</param>
             <param name="objectOverrides">objectOverrides.</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectAllOf.ActionPoints">
             <summary>
             Gets or Sets ActionPoints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectAllOf.Constants">
             <summary>
             Gets or Sets Constants
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectAllOf.Functions">
             <summary>
             Gets or Sets Functions
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectAllOf.Logic">
             <summary>
             Gets or Sets Logic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectAllOf.ObjectOverrides">
             <summary>
             Gets or Sets ObjectOverrides
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.Equals(IO.Swagger.Model.ProjectAllOf)">
             <summary>
             Returns true if ProjectAllOf instances are equal
             </summary>
             <param name="input">Instance of ProjectAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectAllOf.GetHashCode">
=======
        <member name="T:IO.Swagger.Model.ForwardKinematicsResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2.data.common.Pose, NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsResponse" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CloseSceneRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.CloseScene.Request.Args = &lt;factory&gt;, dry_run: bool = False)
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CloseSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args.</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneRequest.Id">
=======
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CloseSceneRequest.Request">
=======
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CloseSceneRequest.Args">
=======
        <member name="P:IO.Swagger.Model.ForwardKinematicsResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CloseSceneRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequest.Equals(IO.Swagger.Model.CloseSceneRequest)">
             <summary>
             Returns true if CloseSceneRequest instances are equal
             </summary>
             <param name="input">Instance of CloseSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.Equals(IO.Swagger.Model.ForwardKinematicsResponse)">
             <summary>
             Returns true if ForwardKinematicsResponse instances are equal
             </summary>
             <param name="input">Instance of ForwardKinematicsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CloseSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToPose">
             <summary>
             RobotMoveToPose(data: arcor2_arserver_data.events.robot.RobotMoveToPose.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum.Add">
=======
        <member name="T:IO.Swagger.Model.ShowMainScreenData">
>>>>>>> devel
             <summary>
             Data(what: arcor2_arserver_data.events.common.ShowMainScreen.Data.WhatEnum, highlight: Union[str, NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum.Update">
=======
        <member name="T:IO.Swagger.Model.ShowMainScreenData.WhatEnum">
>>>>>>> devel
             <summary>
             Defines What
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum.Remove">
=======
        <member name="F:IO.Swagger.Model.ShowMainScreenData.WhatEnum.ScenesList">
>>>>>>> devel
             <summary>
             Enum ScenesList for value: ScenesList
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum.Updatebase">
=======
        <member name="F:IO.Swagger.Model.ShowMainScreenData.WhatEnum.ProjectsList">
>>>>>>> devel
             <summary>
             Enum ProjectsList for value: ProjectsList
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToPose.ChangeType">
=======
        <member name="F:IO.Swagger.Model.ShowMainScreenData.WhatEnum.PackagesList">
>>>>>>> devel
             <summary>
             Enum PackagesList for value: PackagesList
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPose.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPose" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPose.#ctor(System.Nullable{IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotMoveToPoseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPose" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPose.Event">
=======
        <member name="P:IO.Swagger.Model.ShowMainScreenData.What">
             <summary>
             Gets or Sets What
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenData.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreenData" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToPose.ParentId">
=======
        <member name="M:IO.Swagger.Model.ShowMainScreenData.#ctor(System.String,IO.Swagger.Model.ShowMainScreenData.WhatEnum)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreenData" /> class.
             </summary>
             <param name="highlight">highlight.</param>
             <param name="what">what (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToPose.Data">
=======
        <member name="P:IO.Swagger.Model.ShowMainScreenData.Highlight">
>>>>>>> devel
             <summary>
             Gets or Sets Highlight
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPose.ToString">
=======
        <member name="M:IO.Swagger.Model.ShowMainScreenData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPose.ToJson">
=======
        <member name="M:IO.Swagger.Model.ShowMainScreenData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPose.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ShowMainScreenData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPose.Equals(IO.Swagger.Model.RobotMoveToPose)">
             <summary>
             Returns true if RobotMoveToPose instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToPose to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPose.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ShowMainScreenData.Equals(IO.Swagger.Model.ShowMainScreenData)">
             <summary>
             Returns true if ShowMainScreenData instances are equal
             </summary>
             <param name="input">Instance of ShowMainScreenData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPose.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ShowMainScreenData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MarkerCorners">
             <summary>
             MarkerCorners(marker_id: int, corners: List[arcor2_calibration_data.Corner])
=======
        <member name="T:IO.Swagger.Model.NewProjectRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.NewProject.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.NewProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkerCorners.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkerCorners" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkerCorners.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Corner},System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkerCorners" /> class.
=======
        <member name="P:IO.Swagger.Model.NewProjectRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectRequest.Request">
             <summary>
             Gets or Sets Request
>>>>>>> devel
             </summary>
             <param name="corners">corners (required).</param>
             <param name="markerId">markerId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MarkerCorners.Corners">
             <summary>
             Gets or Sets Corners
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MarkerCorners.MarkerId">
             <summary>
             Gets or Sets MarkerId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkerCorners.ToString">
=======
        <member name="P:IO.Swagger.Model.NewProjectRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewProjectRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkerCorners.ToJson">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkerCorners.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkerCorners.Equals(IO.Swagger.Model.MarkerCorners)">
             <summary>
             Returns true if MarkerCorners instances are equal
             </summary>
             <param name="input">Instance of MarkerCorners to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkerCorners.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequest.Equals(IO.Swagger.Model.NewProjectRequest)">
             <summary>
             Returns true if NewProjectRequest instances are equal
             </summary>
             <param name="input">Instance of NewProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkerCorners.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NewProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.IdArgs">
             <summary>
             IdArgs(id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.Pose">
             <summary>
             Pose(position: arcor2.data.common.Position = &lt;factory&gt;, orientation: arcor2.data.common.Orientation = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Pose.#ctor(IO.Swagger.Model.Orientation,IO.Swagger.Model.Position)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Pose" /> class.
             </summary>
             <param name="orientation">orientation.</param>
             <param name="position">position.</param>
            </member>
        <member name="P:IO.Swagger.Model.Pose.Orientation">
             <summary>
             Gets or Sets Orientation
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.IdArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.Pose.Position">
             <summary>
             Gets or Sets Position
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Pose.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.Pose.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Pose.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdArgs.Equals(IO.Swagger.Model.IdArgs)">
             <summary>
             Returns true if IdArgs instances are equal
             </summary>
             <param name="input">Instance of IdArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.IdArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Pose.Equals(IO.Swagger.Model.Pose)">
             <summary>
             Returns true if Pose instances are equal
             </summary>
             <param name="input">Instance of Pose to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Pose.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Pose.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SaveSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveSceneResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.StopRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.StopRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.StopRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SaveSceneResponse.Id">
=======
        <member name="P:IO.Swagger.Model.StopRobotRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SaveSceneResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.StopRobotRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SaveSceneResponse.Response">
=======
        <member name="P:IO.Swagger.Model.StopRobotRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SaveSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SaveSceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.StopRobotRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveSceneResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.StopRobotRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveSceneResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.StopRobotRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveSceneResponse.Equals(IO.Swagger.Model.SaveSceneResponse)">
             <summary>
             Returns true if SaveSceneResponse instances are equal
             </summary>
             <param name="input">Instance of SaveSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.StopRobotRequest.Equals(IO.Swagger.Model.StopRobotRequest)">
             <summary>
             Returns true if StopRobotRequest instances are equal
             </summary>
             <param name="input">Instance of StopRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.StopRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointParentRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointParent.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointParentRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequest.Request">
             <summary>
             Gets or Sets Request
=======
        <member name="T:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf">
             <summary>
             RemoveActionPointOrientationRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.#ctor(IO.Swagger.Model.RemoveActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequest.Args">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.Equals(IO.Swagger.Model.UpdateActionPointParentRequest)">
             <summary>
             Returns true if UpdateActionPointParentRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointParentRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.Equals(IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf)">
             <summary>
             Returns true if RemoveActionPointOrientationRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointOrientationRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionParamValuesResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.ListScenesResponseDataAllOf">
             <summary>
             ListScenesResponseDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.#ctor(System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponseDataAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="modified">modified.</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesResponse.Id">
=======
        <member name="P:IO.Swagger.Model.ListScenesResponseDataAllOf.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionParamValuesResponse.Messages">
             <summary>
             Gets or Sets Messages
=======
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionParamValuesResponse.Response">
             <summary>
             Gets or Sets Response
=======
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
>>>>>>> devel
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionParamValuesResponse.Result">
             <summary>
             Gets or Sets Result
=======
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.Equals(IO.Swagger.Model.ListScenesResponseDataAllOf)">
             <summary>
             Returns true if ListScenesResponseDataAllOf instances are equal
>>>>>>> devel
             </summary>
             <param name="input">Instance of ListScenesResponseDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionParamValuesResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.Equals(System.Object)">
=======
        <member name="T:IO.Swagger.Model.DeleteProjectResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.Equals(IO.Swagger.Model.ActionParamValuesResponse)">
             <summary>
             Returns true if ActionParamValuesResponse instances are equal
             </summary>
             <param name="input">Instance of ActionParamValuesResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteProjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="P:IO.Swagger.Model.DeleteProjectResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CopySceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.CopySceneResponse.Id">
=======
        <member name="P:IO.Swagger.Model.DeleteProjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteProjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteProjectResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteProjectResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopySceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopySceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopySceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopySceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneResponse.Equals(IO.Swagger.Model.CopySceneResponse)">
             <summary>
             Returns true if CopySceneResponse instances are equal
             </summary>
             <param name="input">Instance of CopySceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.Equals(IO.Swagger.Model.DeleteProjectResponse)">
             <summary>
             Returns true if DeleteProjectResponse instances are equal
             </summary>
             <param name="input">Instance of DeleteProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OpenScene">
             <summary>
             OpenScene(data: arcor2_arserver_data.events.scene.OpenScene.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.OpenScene.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OpenScene.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OpenScene.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.OpenScene.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
=======
        <member name="T:IO.Swagger.Model.ProjectConstantChangedAllOf">
             <summary>
             ProjectConstantChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstantChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.#ctor(IO.Swagger.Model.ProjectConstant)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstantChangedAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.OpenScene.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenScene.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenScene.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenScene" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenScene.#ctor(System.Nullable{IO.Swagger.Model.OpenScene.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.OpenSceneData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenScene" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenScene.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenScene.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.OpenScene.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenScene.ToString">
=======
        <member name="P:IO.Swagger.Model.ProjectConstantChangedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenScene.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenScene.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenScene.Equals(IO.Swagger.Model.OpenScene)">
             <summary>
             Returns true if OpenScene instances are equal
             </summary>
             <param name="input">Instance of OpenScene to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenScene.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.Equals(IO.Swagger.Model.ProjectConstantChangedAllOf)">
             <summary>
             Returns true if ProjectConstantChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of ProjectConstantChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenScene.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectConstantChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CancelActionResponse">
=======
        <member name="T:IO.Swagger.Model.RemoveLogicItemResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CancelActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CancelActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CancelActionResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CancelActionResponse.Id">
=======
        <member name="P:IO.Swagger.Model.RemoveLogicItemResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CancelActionResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.RemoveLogicItemResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CancelActionResponse.Response">
=======
        <member name="P:IO.Swagger.Model.RemoveLogicItemResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CancelActionResponse.Result">
=======
        <member name="P:IO.Swagger.Model.RemoveLogicItemResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CancelActionResponse.Data">
=======
        <member name="P:IO.Swagger.Model.RemoveLogicItemResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CancelActionResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CancelActionResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CancelActionResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CancelActionResponse.Equals(IO.Swagger.Model.CancelActionResponse)">
             <summary>
             Returns true if CancelActionResponse instances are equal
             </summary>
             <param name="input">Instance of CancelActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CancelActionResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.Equals(IO.Swagger.Model.RemoveLogicItemResponse)">
             <summary>
             Returns true if RemoveLogicItemResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveLogicItemResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CancelActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeleteOverrideRequestAllOf">
             <summary>
             DeleteOverrideRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.#ctor(IO.Swagger.Model.DeleteOverrideRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientationData">
             <summary>
             Data(move_event_type: arcor2_arserver_data.events.robot.RobotMoveToData.MoveEventType, robot_id: str, end_effector_id: str, orientation_id: str, safe: bool, message: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventTypeEnum">
             <summary>
             Defines MoveEventType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventTypeEnum.Start">
             <summary>
             Enum Start for value: start
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventTypeEnum.End">
>>>>>>> devel
             <summary>
             Enum End for value: end
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.ToJson">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventTypeEnum.Failed">
>>>>>>> devel
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.Equals(System.Object)">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventType">
>>>>>>> devel
             <summary>
             Gets or Sets MoveEventType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.Equals(IO.Swagger.Model.DeleteOverrideRequestAllOf)">
             <summary>
             Returns true if DeleteOverrideRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of DeleteOverrideRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.#ctor(IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventTypeEnum,System.String,System.String,System.String,System.String,System.Boolean)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationData" /> class.
             </summary>
             <param name="moveEventType">moveEventType (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="message">message.</param>
             <param name="orientationId">orientationId (required).</param>
             <param name="safe">safe (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.RobotId">
>>>>>>> devel
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetEndEffectorsRequestAllOf">
             <summary>
             GetEndEffectorsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.#ctor(IO.Swagger.Model.GetEndEffectorsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorsRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.Equals(IO.Swagger.Model.GetEndEffectorsRequestAllOf)">
             <summary>
             Returns true if GetEndEffectorsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.Equals(IO.Swagger.Model.RobotMoveToActionPointOrientationData)">
             <summary>
             Returns true if RobotMoveToActionPointOrientationData instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointOrientationData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RemoveConstantRequestAllOf">
=======
        <member name="T:IO.Swagger.Model.ActionPoint">
             <summary>
             ActionPoint(id: str, name: str, position: arcor2.data.common.Position, parent: Union[str, NoneType] = None, orientations: List[arcor2.data.common.NamedOrientation] = &lt;factory&gt;, robot_joints: List[arcor2.data.common.ProjectRobotJoints] = &lt;factory&gt;, actions: List[arcor2.data.common.Action] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPoint.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPoint" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPoint.#ctor(System.String,System.String,System.String,IO.Swagger.Model.Position,System.Collections.Generic.List{IO.Swagger.Model.Action},System.Collections.Generic.List{IO.Swagger.Model.NamedOrientation},System.Collections.Generic.List{IO.Swagger.Model.ProjectRobotJoints})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionPoint" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="parent">parent.</param>
             <param name="position">position (required).</param>
             <param name="actions">actions.</param>
             <param name="orientations">orientations.</param>
             <param name="robotJoints">robotJoints.</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionPoint.Id">
>>>>>>> devel
             <summary>
             RemoveConstantRequestAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.#ctor(IO.Swagger.Model.RemoveConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantRequestAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.ActionPoint.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPoint.Parent">
             <summary>
             Gets or Sets Parent
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RemoveConstantRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveConstantRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.ActionPoint.Position">
             <summary>
             Gets or Sets Position
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPoint.Actions">
             <summary>
             Gets or Sets Actions
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPoint.Orientations">
             <summary>
             Gets or Sets Orientations
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionPoint.RobotJoints">
             <summary>
             Gets or Sets RobotJoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionPoint.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionPoint.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionPoint.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.Equals(IO.Swagger.Model.RemoveConstantRequestAllOf)">
             <summary>
             Returns true if RemoveConstantRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RemoveConstantRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionPoint.Equals(IO.Swagger.Model.ActionPoint)">
             <summary>
             Returns true if ActionPoint instances are equal
             </summary>
             <param name="input">Instance of ActionPoint to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionPoint.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RemoveConstantRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionPoint.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddActionPointOrientationUsingRobot.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf">
             <summary>
             UpdateActionPointOrientationRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointOrientationRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.Args">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.DryRun">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.Equals(IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest)">
             <summary>
             Returns true if AddActionPointOrientationUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointOrientationRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ListScenesResponseDataAllOf">
             <summary>
             ListScenesResponseDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.#ctor(System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponseDataAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.CalibrateRobotRequestArgs">
             <summary>
             Args(robot_id: str, camera_id: Union[str, NoneType] = None, move_to_calibration_pose: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.#ctor(System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequestArgs" /> class.
             </summary>
             <param name="cameraId">cameraId.</param>
             <param name="moveToCalibrationPose">moveToCalibrationPose (default to true).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotRequestArgs.CameraId">
             <summary>
             Gets or Sets CameraId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotRequestArgs.MoveToCalibrationPose">
             <summary>
             Gets or Sets MoveToCalibrationPose
>>>>>>> devel
             </summary>
             <param name="modified">modified.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListScenesResponseDataAllOf.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.CalibrateRobotRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.Equals(IO.Swagger.Model.ListScenesResponseDataAllOf)">
             <summary>
             Returns true if ListScenesResponseDataAllOf instances are equal
             </summary>
             <param name="input">Instance of ListScenesResponseDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.Equals(IO.Swagger.Model.CalibrateRobotRequestArgs)">
             <summary>
             Returns true if CalibrateRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CalibrateRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListScenesResponseDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MoveToJointsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.MoveToJoints.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.MoveToJointsRequestArgs)">
=======
        <member name="T:IO.Swagger.Model.GetRobotJointsRequestArgs">
             <summary>
             Args(robot_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequestArgs" /> class.
             </summary>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsRequestArgs.RobotId">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MoveToJointsRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.Equals(IO.Swagger.Model.MoveToJointsRequest)">
             <summary>
             Returns true if MoveToJointsRequest instances are equal
             </summary>
             <param name="input">Instance of MoveToJointsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.Equals(IO.Swagger.Model.GetRobotJointsRequestArgs)">
             <summary>
             Returns true if GetRobotJointsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetRobotJointsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateProjectHasLogicRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateProjectHasLogic.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateProjectHasLogicRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.RenamePackageRequest">
             <summary>
             Request(id: int, args: arcor2_execution_data.rpc.RenamePackage.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenamePackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequest.Id">
=======
        <member name="P:IO.Swagger.Model.RenamePackageRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequest.Request">
=======
        <member name="P:IO.Swagger.Model.RenamePackageRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequest.Args">
=======
        <member name="P:IO.Swagger.Model.RenamePackageRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.Equals(IO.Swagger.Model.UpdateProjectHasLogicRequest)">
             <summary>
             Returns true if UpdateProjectHasLogicRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectHasLogicRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequest.Equals(IO.Swagger.Model.RenamePackageRequest)">
             <summary>
             Returns true if RenamePackageRequest instances are equal
             </summary>
             <param name="input">Instance of RenamePackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenamePackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NotificationData">
             <summary>
             Data(message: str, level: arcor2.data.events.Notification.Data.Level)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.NotificationData.LevelEnum">
             <summary>
             Defines Level
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.NotificationData.LevelEnum.Info">
             <summary>
             Enum Info for value: Info
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.NotificationData.LevelEnum.Warn">
=======
        <member name="T:IO.Swagger.Model.Action">
             <summary>
             Action(id: str, name: str, type: str, parameters: List[arcor2.data.common.ActionParameter] = &lt;factory&gt;, flows: List[arcor2.data.common.Flow] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Action.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Action" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Action.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.Flow},System.Collections.Generic.List{IO.Swagger.Model.ActionParameter})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Action" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
             <param name="flows">flows.</param>
             <param name="parameters">parameters.</param>
            </member>
        <member name="P:IO.Swagger.Model.Action.Id">
>>>>>>> devel
             <summary>
             Enum Warn for value: Warn
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.NotificationData.LevelEnum.Error">
             <summary>
             Enum Error for value: Error
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NotificationData.Level">
             <summary>
             Gets or Sets Level
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NotificationData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NotificationData.#ctor(IO.Swagger.Model.NotificationData.LevelEnum,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationData" /> class.
             </summary>
             <param name="level">level (required).</param>
             <param name="message">message (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.NotificationData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NotificationData.ToString">
=======
        <member name="P:IO.Swagger.Model.Action.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Action.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Action.Flows">
             <summary>
             Gets or Sets Flows
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Action.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Action.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NotificationData.ToJson">
=======
        <member name="M:IO.Swagger.Model.Action.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NotificationData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Action.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NotificationData.Equals(IO.Swagger.Model.NotificationData)">
             <summary>
             Returns true if NotificationData instances are equal
             </summary>
             <param name="input">Instance of NotificationData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NotificationData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Action.Equals(IO.Swagger.Model.Action)">
             <summary>
             Returns true if Action instances are equal
             </summary>
             <param name="input">Instance of Action to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Action.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NotificationData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Action.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf">
             <summary>
             UpdateObjectPoseUsingRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
=======
        <member name="T:IO.Swagger.Model.NewObjectTypeResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeResponse" /> class.
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.Equals(IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf)">
             <summary>
             Returns true if UpdateObjectPoseUsingRobotRequestAllOf instances are equal
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeResponse.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="input">Instance of UpdateObjectPoseUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddOverrideRequestAllOf">
             <summary>
             AddOverrideRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.#ctor(IO.Swagger.Model.AddOverrideRequestArgs,System.Boolean)">
=======
        <member name="P:IO.Swagger.Model.NewObjectTypeResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeResponse.Data">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddOverrideRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddOverrideRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.Equals(IO.Swagger.Model.AddOverrideRequestAllOf)">
             <summary>
             Returns true if AddOverrideRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddOverrideRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.Equals(IO.Swagger.Model.NewObjectTypeResponse)">
             <summary>
             Returns true if NewObjectTypeResponse instances are equal
             </summary>
             <param name="input">Instance of NewObjectTypeResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddOverrideRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectParametersRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.UpdateObjectParameters.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateObjectParametersRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.HandTeachingModeResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequest.Id">
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequest.Request">
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequest.Args">
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectParametersRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.Equals(IO.Swagger.Model.UpdateObjectParametersRequest)">
             <summary>
             Returns true if UpdateObjectParametersRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectParametersRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.Equals(IO.Swagger.Model.HandTeachingModeResponse)">
             <summary>
             Returns true if HandTeachingModeResponse instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectParametersRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToPoseData">
             <summary>
             Data(move_event_type: arcor2_arserver_data.events.robot.RobotMoveToData.MoveEventType, robot_id: str, end_effector_id: str, target_pose: arcor2.data.common.Pose, safe: bool, message: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToPoseData.MoveEventTypeEnum">
             <summary>
             Defines MoveEventType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToPoseData.MoveEventTypeEnum.Start">
             <summary>
             Enum Start for value: start
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToPoseData.MoveEventTypeEnum.End">
             <summary>
             Enum End for value: end
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToPoseData.MoveEventTypeEnum.Failed">
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.MoveEventType">
             <summary>
             Gets or Sets MoveEventType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.#ctor">
=======
        <member name="T:IO.Swagger.Model.RobotJoints">
             <summary>
             RobotJoints(data: arcor2_arserver_data.events.robot.RobotJoints.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotJoints.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotJoints.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotJoints.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotJoints.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotJoints.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotJoints.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJoints.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJoints" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotJoints.#ctor(System.Nullable{IO.Swagger.Model.RobotJoints.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotJoints" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotJoints.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotJoints.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotJoints.Data">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseData" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.#ctor(IO.Swagger.Model.RobotMoveToPoseData.MoveEventTypeEnum,System.String,System.String,System.String,System.Boolean,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseData" /> class.
             </summary>
             <param name="moveEventType">moveEventType (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
             <param name="targetPose">targetPose (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseData.TargetPose">
             <summary>
             Gets or Sets TargetPose
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.ToString">
=======
        <member name="M:IO.Swagger.Model.RobotJoints.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotJoints.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotJoints.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.Equals(IO.Swagger.Model.RobotMoveToPoseData)">
             <summary>
             Returns true if RobotMoveToPoseData instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToPoseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotJoints.Equals(IO.Swagger.Model.RobotJoints)">
             <summary>
             Returns true if RobotJoints instances are equal
             </summary>
             <param name="input">Instance of RobotJoints to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotJoints.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToPoseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotJoints.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf">
             <summary>
             UpdateProjectDescriptionRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.FunctionReturns">
             <summary>
             FunctionReturns(type: str, link: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FunctionReturns.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FunctionReturns" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FunctionReturns.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FunctionReturns" /> class.
>>>>>>> devel
             </summary>
             <param name="link">link (required).</param>
             <param name="type">type (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.#ctor(IO.Swagger.Model.UpdateProjectDescriptionRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.FunctionReturns.Link">
             <summary>
             Gets or Sets Link
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.FunctionReturns.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FunctionReturns.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.FunctionReturns.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.FunctionReturns.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.Equals(IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf)">
             <summary>
             Returns true if UpdateProjectDescriptionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectDescriptionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.FunctionReturns.Equals(IO.Swagger.Model.FunctionReturns)">
             <summary>
             Returns true if FunctionReturns instances are equal
             </summary>
             <param name="input">Instance of FunctionReturns to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FunctionReturns.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.FunctionReturns.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.BoxAllOf">
             <summary>
             BoxAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BoxAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BoxAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BoxAllOf.#ctor(System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BoxAllOf" /> class.
             </summary>
             <param name="sizeX">sizeX (required).</param>
             <param name="sizeY">sizeY (required).</param>
             <param name="sizeZ">sizeZ (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BoxAllOf.SizeX">
             <summary>
             Gets or Sets SizeX
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BoxAllOf.SizeY">
             <summary>
             Gets or Sets SizeY
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BoxAllOf.SizeZ">
             <summary>
             Gets or Sets SizeZ
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BoxAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.BoxAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.BoxAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BoxAllOf.Equals(IO.Swagger.Model.BoxAllOf)">
             <summary>
             Returns true if BoxAllOf instances are equal
             </summary>
             <param name="input">Instance of BoxAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BoxAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.BoxAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NewSceneRequestAllOf">
             <summary>
             NewSceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.#ctor(IO.Swagger.Model.NewSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneRequestAllOf.Args">
             <summary>
             Gets or Sets Args
=======
        <member name="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs">
             <summary>
             Args(action_point_id: str, robot: arcor2.data.rpc.common.RobotArg, name: str = 'default')
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.#ctor(System.String,System.String,IO.Swagger.Model.RobotArg)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="name">name (default to "default").</param>
             <param name="robot">robot (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewSceneRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.Robot">
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.Equals(IO.Swagger.Model.NewSceneRequestAllOf)">
             <summary>
             Returns true if NewSceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of NewSceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.Equals(IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs)">
             <summary>
             Returns true if AddActionPointOrientationUsingRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetRobotJointsRequestArgs">
             <summary>
             Args(robot_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequestArgs" /> class.
             </summary>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetRobotJointsRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.CopySceneRequestAllOf">
             <summary>
             CopySceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.#ctor(IO.Swagger.Model.CopySceneRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopySceneRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.Equals(IO.Swagger.Model.GetRobotJointsRequestArgs)">
             <summary>
             Returns true if GetRobotJointsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetRobotJointsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.Equals(IO.Swagger.Model.CopySceneRequestAllOf)">
             <summary>
             Returns true if CopySceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CopySceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CopySceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CameraColorParametersRequestAllOf">
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsResponse.Messages">
>>>>>>> devel
             <summary>
             CameraColorParametersRequestAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.#ctor">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsResponse.Response">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequestAllOf" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.#ctor(IO.Swagger.Model.CameraColorParametersRequestArgs)">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsResponse.Result">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CameraColorParametersRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.Equals(IO.Swagger.Model.CameraColorParametersRequestAllOf)">
             <summary>
             Returns true if CameraColorParametersRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CameraColorParametersRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.Equals(IO.Swagger.Model.UpdateActionPointJointsResponse)">
             <summary>
             Returns true if UpdateActionPointJointsResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetEndEffectorPoseRequestArgs">
             <summary>
             Args(robot_id: str, end_effector_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequestArgs" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.EndEffectorId">
=======
        <member name="T:IO.Swagger.Model.Parameter">
             <summary>
             Parameter(name: str, type: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Parameter.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Parameter" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.RobotId">
=======
        <member name="M:IO.Swagger.Model.Parameter.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Parameter" /> class.
             </summary>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
             <param name="value">value (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.Parameter.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Parameter.Type">
>>>>>>> devel
             <summary>
             Gets or Sets Type
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.Parameter.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Parameter.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.Parameter.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Parameter.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.Equals(IO.Swagger.Model.GetEndEffectorPoseRequestArgs)">
             <summary>
             Returns true if GetEndEffectorPoseRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorPoseRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Parameter.Equals(IO.Swagger.Model.Parameter)">
             <summary>
             Returns true if Parameter instances are equal
             </summary>
             <param name="input">Instance of Parameter to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Parameter.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Parameter.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.StopRobotRequestAllOf">
             <summary>
             StopRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.#ctor(IO.Swagger.Model.StopRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.StopRobotRequestAllOf.Args">
=======
        <member name="T:IO.Swagger.Model.CalibrateRobotRequestAllOf">
             <summary>
             CalibrateRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.#ctor(IO.Swagger.Model.CalibrateRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.Equals(IO.Swagger.Model.StopRobotRequestAllOf)">
             <summary>
             Returns true if StopRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of StopRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.Equals(IO.Swagger.Model.CalibrateRobotRequestAllOf)">
             <summary>
             Returns true if CalibrateRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of CalibrateRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StopRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientationData">
             <summary>
             Data(move_event_type: arcor2_arserver_data.events.robot.RobotMoveToData.MoveEventType, robot_id: str, end_effector_id: str, orientation_id: str, safe: bool, message: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventTypeEnum">
             <summary>
             Defines MoveEventType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventTypeEnum.Start">
             <summary>
             Enum Start for value: start
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventTypeEnum.End">
             <summary>
             Enum End for value: end
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventTypeEnum.Failed">
             <summary>
             Enum Failed for value: failed
=======
        <member name="T:IO.Swagger.Model.RemoveLogicItemRequestArgs">
             <summary>
             Args(logic_item_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <param name="logicItemId">logicItemId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventType">
             <summary>
             Gets or Sets MoveEventType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.#ctor(IO.Swagger.Model.RobotMoveToActionPointOrientationData.MoveEventTypeEnum,System.String,System.String,System.String,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationData" /> class.
             </summary>
             <param name="moveEventType">moveEventType (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="message">message.</param>
             <param name="orientationId">orientationId (required).</param>
             <param name="safe">safe (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationData.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.ToString">
=======
        <member name="P:IO.Swagger.Model.RemoveLogicItemRequestArgs.LogicItemId">
             <summary>
             Gets or Sets LogicItemId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.Equals(IO.Swagger.Model.RobotMoveToActionPointOrientationData)">
             <summary>
             Returns true if RobotMoveToActionPointOrientationData instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointOrientationData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.Equals(IO.Swagger.Model.RemoveLogicItemRequestArgs)">
             <summary>
             Returns true if RemoveLogicItemRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RemoveLogicItemRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf">
             <summary>
             UpdateSceneDescriptionRequestAllOf
=======
        <member name="T:IO.Swagger.Model.StopSceneRequest">
             <summary>
             Request(id: int, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneRequest.#ctor(System.Int32,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopSceneRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.#ctor(IO.Swagger.Model.UpdateSceneDescriptionRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.StopSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopSceneRequest.Request">
             <summary>
             Gets or Sets Request
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.StopSceneRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.StopSceneRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.StopSceneRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.Equals(IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf)">
             <summary>
             Returns true if UpdateSceneDescriptionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateSceneDescriptionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.StopSceneRequest.Equals(IO.Swagger.Model.StopSceneRequest)">
             <summary>
             Returns true if StopSceneRequest instances are equal
             </summary>
             <param name="input">Instance of StopSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.StopSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Model">
             <summary>
             Model(id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Model.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Model" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Model.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Model" /> class.
             </summary>
             <param name="id">id (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.Model.Id">
=======
        <member name="T:IO.Swagger.Model.PackageInfoData">
             <summary>
             Data(package_id: str, package_name: str, scene: arcor2.data.common.Scene, project: arcor2.data.common.Project, collision_models: arcor2.data.object_type.CollisionModels = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfoData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoData.#ctor(IO.Swagger.Model.CollisionModels,System.String,System.String,IO.Swagger.Model.Project,IO.Swagger.Model.Scene)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfoData" /> class.
             </summary>
             <param name="collisionModels">collisionModels.</param>
             <param name="packageId">packageId (required).</param>
             <param name="packageName">packageName (required).</param>
             <param name="project">project (required).</param>
             <param name="scene">scene (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfoData.CollisionModels">
>>>>>>> devel
             <summary>
             Gets or Sets CollisionModels
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Model.ToString">
=======
        <member name="P:IO.Swagger.Model.PackageInfoData.PackageId">
             <summary>
             Gets or Sets PackageId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfoData.PackageName">
             <summary>
             Gets or Sets PackageName
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfoData.Project">
             <summary>
             Gets or Sets Project
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageInfoData.Scene">
             <summary>
             Gets or Sets Scene
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Model.ToJson">
=======
        <member name="M:IO.Swagger.Model.PackageInfoData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Model.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PackageInfoData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Model.Equals(IO.Swagger.Model.Model)">
             <summary>
             Returns true if Model instances are equal
             </summary>
             <param name="input">Instance of Model to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Model.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PackageInfoData.Equals(IO.Swagger.Model.PackageInfoData)">
             <summary>
             Returns true if PackageInfoData instances are equal
             </summary>
             <param name="input">Instance of PackageInfoData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Model.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PackageInfoData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.FocusObjectRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.FocusObject.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.FocusObjectRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectRequest.Id">
=======
        <member name="T:IO.Swagger.Model.ListProjectsRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FocusObjectRequest.Request">
=======
        <member name="P:IO.Swagger.Model.ListProjectsRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FocusObjectRequest.Args">
=======
        <member name="P:IO.Swagger.Model.ListProjectsRequest.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.ListProjectsRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.ListProjectsRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ListProjectsRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequest.Equals(IO.Swagger.Model.FocusObjectRequest)">
             <summary>
             Returns true if FocusObjectRequest instances are equal
             </summary>
             <param name="input">Instance of FocusObjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ListProjectsRequest.Equals(IO.Swagger.Model.ListProjectsRequest)">
             <summary>
             Returns true if ListProjectsRequest instances are equal
             </summary>
             <param name="input">Instance of ListProjectsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ListProjectsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CalibrateRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.CalibrateRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CalibrateRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.ChangedObjectTypes">
             <summary>
             ChangedObjectTypes(data: List[arcor2_arserver_data.objects.ObjectTypeMeta])
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CalibrateRobotRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.ToString">
=======
        <member name="F:IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.ToJson">
=======
        <member name="F:IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum.Remove">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.Equals(System.Object)">
=======
        <member name="F:IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum.Updatebase">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.Equals(IO.Swagger.Model.CalibrateRobotRequest)">
             <summary>
             Returns true if CalibrateRobotRequest instances are equal
             </summary>
             <param name="input">Instance of CalibrateRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.GetHashCode">
=======
        <member name="P:IO.Swagger.Model.ChangedObjectTypes.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ChangedObjectTypes" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.#ctor(System.Nullable{IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum},System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.ObjectTypeMeta})">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ChangedObjectTypes" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.OpenSceneData">
             <summary>
             Data(scene: arcor2.data.common.Scene)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneData.#ctor(IO.Swagger.Model.Scene)">
=======
        <member name="P:IO.Swagger.Model.ChangedObjectTypes.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ChangedObjectTypes.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ChangedObjectTypes.Data">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenSceneData" /> class.
             </summary>
             <param name="scene">scene (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenSceneData.Scene">
             <summary>
             Gets or Sets Scene
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneData.ToString">
=======
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneData.ToJson">
=======
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneData.Equals(IO.Swagger.Model.OpenSceneData)">
             <summary>
             Returns true if OpenSceneData instances are equal
             </summary>
             <param name="input">Instance of OpenSceneData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenSceneData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.Equals(IO.Swagger.Model.ChangedObjectTypes)">
             <summary>
             Returns true if ChangedObjectTypes instances are equal
             </summary>
             <param name="input">Instance of ChangedObjectTypes to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OpenSceneData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeleteObjectTypeRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequest.Id">
=======
        <member name="T:IO.Swagger.Model.RemoveActionPointJointsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.Equals(IO.Swagger.Model.DeleteObjectTypeRequest)">
             <summary>
             Returns true if DeleteObjectTypeRequest instances are equal
             </summary>
             <param name="input">Instance of DeleteObjectTypeRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.Equals(IO.Swagger.Model.RemoveActionPointJointsResponse)">
             <summary>
             Returns true if RemoveActionPointJointsResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointJointsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ChangedObjectTypes">
             <summary>
             ChangedObjectTypes(data: List[arcor2_arserver_data.objects.ObjectTypeMeta])
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
=======
        <member name="T:IO.Swagger.Model.PositionAllOf">
             <summary>
             PositionAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PositionAllOf.#ctor(System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PositionAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="x">x (default to 0.0M).</param>
             <param name="y">y (default to 0.0M).</param>
             <param name="z">z (default to 0.0M).</param>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ChangedObjectTypes.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ChangedObjectTypes" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.#ctor(System.Nullable{IO.Swagger.Model.ChangedObjectTypes.ChangeTypeEnum},System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.ObjectTypeMeta})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ChangedObjectTypes" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ChangedObjectTypes.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ChangedObjectTypes.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ChangedObjectTypes.Data">
=======
        <member name="P:IO.Swagger.Model.PositionAllOf.X">
             <summary>
             Gets or Sets X
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PositionAllOf.Y">
             <summary>
             Gets or Sets Y
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PositionAllOf.Z">
>>>>>>> devel
             <summary>
             Gets or Sets Z
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.ToString">
=======
        <member name="M:IO.Swagger.Model.PositionAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.ToJson">
=======
        <member name="M:IO.Swagger.Model.PositionAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PositionAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.Equals(IO.Swagger.Model.ChangedObjectTypes)">
             <summary>
             Returns true if ChangedObjectTypes instances are equal
             </summary>
             <param name="input">Instance of ChangedObjectTypes to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PositionAllOf.Equals(IO.Swagger.Model.PositionAllOf)">
             <summary>
             Returns true if PositionAllOf instances are equal
             </summary>
             <param name="input">Instance of PositionAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PositionAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ChangedObjectTypes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PositionAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.LogicItemChangedAllOf">
             <summary>
             LogicItemChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItemChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.#ctor(IO.Swagger.Model.LogicItem)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.LogicItemChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.LogicItemChangedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.GetActionsRequestAllOf">
             <summary>
             GetActionsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.#ctor(IO.Swagger.Model.TypeArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.Equals(IO.Swagger.Model.LogicItemChangedAllOf)">
             <summary>
             Returns true if LogicItemChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of LogicItemChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.Equals(IO.Swagger.Model.GetActionsRequestAllOf)">
             <summary>
             Returns true if GetActionsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetActionsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.LogicItemChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf">
             <summary>
             UpdateActionPointOrientationRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointOrientationRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.DeleteSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteSceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointOrientationRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.Equals(IO.Swagger.Model.DeleteSceneResponse)">
             <summary>
             Returns true if DeleteSceneResponse instances are equal
             </summary>
             <param name="input">Instance of DeleteSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.DeleteSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointParentRequestArgs">
             <summary>
             Args(action_point_id: str, new_parent_id: str)
=======
        <member name="T:IO.Swagger.Model.CollisionModels">
             <summary>
             CollisionModels(boxes: List[arcor2.data.object_type.Box] = &lt;factory&gt;, spheres: List[arcor2.data.object_type.Sphere] = &lt;factory&gt;, cylinders: List[arcor2.data.object_type.Cylinder] = &lt;factory&gt;, meshes: List[arcor2.data.object_type.Mesh] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CollisionModels.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Box},System.Collections.Generic.List{IO.Swagger.Model.Cylinder},System.Collections.Generic.List{IO.Swagger.Model.Mesh},System.Collections.Generic.List{IO.Swagger.Model.Sphere})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CollisionModels" /> class.
             </summary>
             <param name="boxes">boxes.</param>
             <param name="cylinders">cylinders.</param>
             <param name="meshes">meshes.</param>
             <param name="spheres">spheres.</param>
            </member>
        <member name="P:IO.Swagger.Model.CollisionModels.Boxes">
             <summary>
             Gets or Sets Boxes
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CollisionModels.Cylinders">
             <summary>
             Gets or Sets Cylinders
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CollisionModels.Meshes">
             <summary>
             Gets or Sets Meshes
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CollisionModels.Spheres">
             <summary>
             Gets or Sets Spheres
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CollisionModels.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CollisionModels.ToJson">
             <summary>
             Returns the JSON string presentation of the object
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="newParentId">newParentId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
=======
        <member name="M:IO.Swagger.Model.CollisionModels.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CollisionModels.Equals(IO.Swagger.Model.CollisionModels)">
             <summary>
             Returns true if CollisionModels instances are equal
             </summary>
             <param name="input">Instance of CollisionModels to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CollisionModels.GetHashCode">
             <summary>
             Gets the hash code
>>>>>>> devel
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointParentRequestArgs.NewParentId">
             <summary>
             Gets or Sets NewParentId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.CollisionModels.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateConstantRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateConstant.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointParentRequestArgs)">
             <summary>
             Returns true if UpdateActionPointParentRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointParentRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.Equals(IO.Swagger.Model.UpdateConstantRequest)">
             <summary>
             Returns true if UpdateConstantRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateConstantRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointParentRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateConstantRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ListProjectsRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsRequest.#ctor">
=======
        <member name="T:IO.Swagger.Model.GetCameraPoseResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2.data.common.Pose, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetCameraPoseResponse.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsRequest" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsRequest.#ctor(System.Int32,System.String,System.String)">
=======
        <member name="P:IO.Swagger.Model.GetCameraPoseResponse.Messages">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsRequest.Id">
=======
        <member name="P:IO.Swagger.Model.GetCameraPoseResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsRequest.Request">
=======
        <member name="P:IO.Swagger.Model.GetCameraPoseResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ListProjectsRequest.Data">
=======
        <member name="P:IO.Swagger.Model.GetCameraPoseResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsRequest.Equals(IO.Swagger.Model.ListProjectsRequest)">
             <summary>
             Returns true if ListProjectsRequest instances are equal
             </summary>
             <param name="input">Instance of ListProjectsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.Equals(IO.Swagger.Model.GetCameraPoseResponse)">
             <summary>
             Returns true if GetCameraPoseResponse instances are equal
             </summary>
             <param name="input">Instance of GetCameraPoseResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ListProjectsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetCameraPoseResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectConstant">
             <summary>
             ProjectConstant(id: str, name: str, type: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstant.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstant" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstant.#ctor(System.String,System.String,System.String,System.String)">
=======
        <member name="T:IO.Swagger.Model.ProjectsWithSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectsWithSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectsWithSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectsWithSceneResponse.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstant" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
             <param name="value">value (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectConstant.Id">
=======
        <member name="P:IO.Swagger.Model.ProjectsWithSceneResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectConstant.Name">
=======
        <member name="P:IO.Swagger.Model.ProjectsWithSceneResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Name
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectConstant.Type">
=======
        <member name="P:IO.Swagger.Model.ProjectsWithSceneResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Type
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectConstant.Value">
=======
        <member name="P:IO.Swagger.Model.ProjectsWithSceneResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Value
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectConstant.ToString">
=======
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectConstant.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectConstant.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectConstant.Equals(IO.Swagger.Model.ProjectConstant)">
             <summary>
             Returns true if ProjectConstant instances are equal
             </summary>
             <param name="input">Instance of ProjectConstant to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstant.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.Equals(IO.Swagger.Model.ProjectsWithSceneResponse)">
             <summary>
             Returns true if ProjectsWithSceneResponse instances are equal
             </summary>
             <param name="input">Instance of ProjectsWithSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectConstant.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.InverseKinematicsRequestArgs">
             <summary>
             Args(robot_id: str, end_effector_id: str, pose: arcor2.data.common.Pose, start_joints: Union[List[arcor2.data.common.Joint], NoneType] = None, avoid_collisions: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.#ctor(System.Boolean,System.String,IO.Swagger.Model.Pose,System.String,System.Collections.Generic.List{IO.Swagger.Model.Joint})">
=======
        <member name="T:IO.Swagger.Model.Response">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Response.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Response" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Response.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Response" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
            </member>
        <member name="P:IO.Swagger.Model.Response.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsRequestArgs" /> class.
             </summary>
             <param name="avoidCollisions">avoidCollisions (default to true).</param>
             <param name="endEffectorId">endEffectorId (required).</param>
             <param name="pose">pose (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="startJoints">startJoints.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestArgs.AvoidCollisions">
=======
        <member name="P:IO.Swagger.Model.Response.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets AvoidCollisions
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestArgs.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestArgs.Pose">
=======
        <member name="P:IO.Swagger.Model.Response._Response">
             <summary>
             Gets or Sets _Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Response.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Pose
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsRequestArgs.StartJoints">
             <summary>
             Gets or Sets StartJoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.Response.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.Response.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Response.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.Equals(IO.Swagger.Model.InverseKinematicsRequestArgs)">
             <summary>
             Returns true if InverseKinematicsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of InverseKinematicsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Response.Equals(IO.Swagger.Model.Response)">
             <summary>
             Returns true if Response instances are equal
             </summary>
             <param name="input">Instance of Response to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Response.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Response.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.BuildProjectRequestArgs">
             <summary>
             Args(project_id: str, package_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.#ctor(System.String,System.String)">
=======
        <member name="T:IO.Swagger.Model.CopyProjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectResponse.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequestArgs" /> class.
             </summary>
             <param name="packageName">packageName (required).</param>
             <param name="projectId">projectId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BuildProjectRequestArgs.PackageName">
             <summary>
             Gets or Sets PackageName
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectRequestArgs.ProjectId">
             <summary>
             Gets or Sets ProjectId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.CopyProjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.CopyProjectResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CopyProjectResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.Equals(IO.Swagger.Model.BuildProjectRequestArgs)">
             <summary>
             Returns true if BuildProjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of BuildProjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CopyProjectResponse.Equals(IO.Swagger.Model.CopyProjectResponse)">
             <summary>
             Returns true if CopyProjectResponse instances are equal
             </summary>
             <param name="input">Instance of CopyProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BuildProjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CopyProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectPoseRequestAllOf">
             <summary>
             UpdateObjectPoseRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.#ctor(IO.Swagger.Model.UpdateObjectPoseRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.Position">
             <summary>
             Position(x: float = 0.0, y: float = 0.0, z: float = 0.0)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Position.#ctor(System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Position" /> class.
             </summary>
             <param name="x">x (default to 0.0M).</param>
             <param name="y">y (default to 0.0M).</param>
             <param name="z">z (default to 0.0M).</param>
            </member>
        <member name="P:IO.Swagger.Model.Position.X">
             <summary>
             Gets or Sets X
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Position.Y">
             <summary>
             Gets or Sets Y
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Position.Z">
             <summary>
             Gets or Sets Z
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Position.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.Position.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Position.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.Equals(IO.Swagger.Model.UpdateObjectPoseRequestAllOf)">
             <summary>
             Returns true if UpdateObjectPoseRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Position.Equals(IO.Swagger.Model.Position)">
             <summary>
             Returns true if Position instances are equal
             </summary>
             <param name="input">Instance of Position to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Position.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Position.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetRobotMetaResponseAllOf">
             <summary>
             GetRobotMetaResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.RobotMeta})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotMetaResponseAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs">
             <summary>
             Args(orientation_id: str, orientation: arcor2.data.common.Orientation)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs" /> class.
>>>>>>> devel
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetRobotMetaResponseAllOf.Data">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.#ctor(IO.Swagger.Model.Orientation,System.String)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs" /> class.
             </summary>
             <param name="orientation">orientation (required).</param>
             <param name="orientationId">orientationId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.Orientation">
             <summary>
             Gets or Sets Orientation
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.Equals(IO.Swagger.Model.GetRobotMetaResponseAllOf)">
             <summary>
             Returns true if GetRobotMetaResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of GetRobotMetaResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointOrientationRequestArgs)">
             <summary>
             Returns true if UpdateActionPointOrientationRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetRobotMetaResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneAllOf">
             <summary>
             SceneAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.SceneObject})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.ActionResultData">
             <summary>
             Data(action_id: str, results: Union[List[str], NoneType] = None, error: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResultData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultData.#ctor(System.String,System.String,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResultData" /> class.
             </summary>
             <param name="actionId">actionId (required).</param>
             <param name="error">error.</param>
             <param name="results">JSON-encoded results of the action..</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionResultData.ActionId">
             <summary>
             Gets or Sets ActionId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionResultData.Error">
             <summary>
             Gets or Sets Error
>>>>>>> devel
             </summary>
             <param name="objects">objects.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneAllOf.Objects">
             <summary>
             Gets or Sets Objects
=======
        <member name="P:IO.Swagger.Model.ActionResultData.Results">
             <summary>
             JSON-encoded results of the action.
>>>>>>> devel
             </summary>
             <value>JSON-encoded results of the action.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.ActionResultData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionResultData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionResultData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneAllOf.Equals(IO.Swagger.Model.SceneAllOf)">
             <summary>
             Returns true if SceneAllOf instances are equal
             </summary>
             <param name="input">Instance of SceneAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionResultData.Equals(IO.Swagger.Model.ActionResultData)">
             <summary>
             Returns true if ActionResultData instances are equal
             </summary>
             <param name="input">Instance of ActionResultData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionResultData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ProjectsWithSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectsWithSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectsWithSceneResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointPositionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectsWithSceneResponse.Id">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectsWithSceneResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectsWithSceneResponse.Response">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectsWithSceneResponse.Result">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ProjectsWithSceneResponse.Data">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.Equals(IO.Swagger.Model.ProjectsWithSceneResponse)">
             <summary>
             Returns true if ProjectsWithSceneResponse instances are equal
             </summary>
             <param name="input">Instance of ProjectsWithSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.Equals(IO.Swagger.Model.UpdateActionPointPositionResponse)">
             <summary>
             Returns true if UpdateActionPointPositionResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointPositionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ProjectsWithSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CameraColorParametersRequestArgs">
             <summary>
             Args(id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequestArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateObjectParametersResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectParametersResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectParametersResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectParametersResponse.Messages">
             <summary>
             Gets or Sets Messages
>>>>>>> devel
             </summary>
             <param name="id">Camera id. (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CameraColorParametersRequestArgs.Id">
             <summary>
             Camera id.
=======
        <member name="P:IO.Swagger.Model.UpdateObjectParametersResponse.Response">
             <summary>
             Gets or Sets Response
>>>>>>> devel
             </summary>
             <value>Camera id.</value>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateObjectParametersResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectParametersResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.Equals(IO.Swagger.Model.CameraColorParametersRequestArgs)">
             <summary>
             Returns true if CameraColorParametersRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CameraColorParametersRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.Equals(IO.Swagger.Model.UpdateObjectParametersResponse)">
             <summary>
             Returns true if UpdateObjectParametersResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectParametersResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CameraColorParametersRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateObjectParametersResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneChanged">
             <summary>
             SceneChanged(data: arcor2.data.common.BareScene)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneChanged.ChangeTypeEnum.Update">
=======
        <member name="T:IO.Swagger.Model.AddOverrideRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.AddOverride.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddOverrideRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddOverrideRequest.Id">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.SceneChanged.ChangeTypeEnum.Remove">
=======
        <member name="P:IO.Swagger.Model.AddOverrideRequest.Request">
>>>>>>> devel
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.SceneChanged.ChangeTypeEnum.Updatebase">
=======
        <member name="P:IO.Swagger.Model.AddOverrideRequest.Args">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneChanged.ChangeType">
=======
        <member name="P:IO.Swagger.Model.AddOverrideRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequest.ToString">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChanged.#ctor">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequest.ToJson">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneChanged" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChanged.#ctor(System.Nullable{IO.Swagger.Model.SceneChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.BareScene)">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneChanged.ParentId">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequest.Equals(IO.Swagger.Model.AddOverrideRequest)">
             <summary>
             Returns true if AddOverrideRequest instances are equal
             </summary>
             <param name="input">Instance of AddOverrideRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneChanged.Data">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChanged.ToString">
             <summary>
             Returns the string presentation of the object
=======
        <member name="T:IO.Swagger.Model.UpdateLogicItemRequestArgs">
             <summary>
             Args(logic_item_id: str, start: str, end: str, condition: Union[arcor2.data.common.ProjectLogicIf, NoneType] = None)
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChanged.ToJson">
             <summary>
             Returns the JSON string presentation of the object
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequestArgs" /> class.
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChanged.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneChanged.Equals(IO.Swagger.Model.SceneChanged)">
             <summary>
             Returns true if SceneChanged instances are equal
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.#ctor(IO.Swagger.Model.ProjectLogicIf,System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemRequestArgs" /> class.
             </summary>
             <param name="condition">condition.</param>
             <param name="end">end (required).</param>
             <param name="logicItemId">logicItemId (required).</param>
             <param name="start">start (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestArgs.Condition">
             <summary>
             Gets or Sets Condition
>>>>>>> devel
             </summary>
             <param name="input">Instance of SceneChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChanged.GetHashCode">
             <summary>
             Gets the hash code
=======
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestArgs.End">
             <summary>
             Gets or Sets End
>>>>>>> devel
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetActionsRequestAllOf">
             <summary>
             GetActionsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.#ctor(IO.Swagger.Model.TypeArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestArgs.LogicItemId">
>>>>>>> devel
             <summary>
             Gets or Sets LogicItemId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateLogicItemRequestArgs.Start">
             <summary>
             Gets or Sets Start
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.Equals(IO.Swagger.Model.GetActionsRequestAllOf)">
             <summary>
             Returns true if GetActionsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetActionsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.Equals(IO.Swagger.Model.UpdateLogicItemRequestArgs)">
             <summary>
             Returns true if UpdateLogicItemRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateLogicItemRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NewProjectResponse">
=======
        <member name="T:IO.Swagger.Model.CloseProjectResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewProjectResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.CloseProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewProjectResponse.Id">
=======
        <member name="P:IO.Swagger.Model.CloseProjectResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewProjectResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.CloseProjectResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewProjectResponse.Response">
=======
        <member name="P:IO.Swagger.Model.CloseProjectResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewProjectResponse.Result">
=======
        <member name="P:IO.Swagger.Model.CloseProjectResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewProjectResponse.Data">
=======
        <member name="P:IO.Swagger.Model.CloseProjectResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.CloseProjectResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.CloseProjectResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CloseProjectResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectResponse.Equals(IO.Swagger.Model.NewProjectResponse)">
             <summary>
             Returns true if NewProjectResponse instances are equal
             </summary>
             <param name="input">Instance of NewProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewProjectResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CloseProjectResponse.Equals(IO.Swagger.Model.CloseProjectResponse)">
             <summary>
             Returns true if CloseProjectResponse instances are equal
             </summary>
             <param name="input">Instance of CloseProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CloseProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MoveToJointsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsResponse.Id">
=======
        <member name="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddActionPointOrientationUsingRobot.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MoveToJointsResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MoveToJointsResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.Equals(IO.Swagger.Model.MoveToJointsResponse)">
             <summary>
             Returns true if MoveToJointsResponse instances are equal
             </summary>
             <param name="input">Instance of MoveToJointsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.Equals(IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest)">
             <summary>
             Returns true if AddActionPointOrientationUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MoveToJointsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PausePackageRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PausePackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PausePackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.PausePackageRequest.Id">
=======
        <member name="T:IO.Swagger.Model.RenameProjectRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RenameProject.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.PausePackageRequest.Request">
=======
        <member name="P:IO.Swagger.Model.RenameProjectRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.PausePackageRequest.Data">
=======
        <member name="P:IO.Swagger.Model.RenameProjectRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PausePackageRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.RenameProjectRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PausePackageRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PausePackageRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PausePackageRequest.Equals(IO.Swagger.Model.PausePackageRequest)">
             <summary>
             Returns true if PausePackageRequest instances are equal
             </summary>
             <param name="input">Instance of PausePackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequest.Equals(IO.Swagger.Model.RenameProjectRequest)">
             <summary>
             Returns true if RenameProjectRequest instances are equal
             </summary>
             <param name="input">Instance of RenameProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PausePackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetEndEffectorsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorsResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.Project">
             <summary>
             Project(id: str, name: str, scene_id: str, desc: str = &lt;factory&gt;, has_logic: bool = True, modified: Union[datetime.datetime, NoneType] = None, int_modified: Union[datetime.datetime, NoneType] = None, action_points: List[arcor2.data.common.ActionPoint] = &lt;factory&gt;, constants: List[arcor2.data.common.ProjectConstant] = &lt;factory&gt;, functions: List[arcor2.data.common.ProjectFunction] = &lt;factory&gt;, logic: List[arcor2.data.common.LogicItem] = &lt;factory&gt;, object_overrides: List[arcor2.data.common.SceneObjectOverride] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Project.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Project" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Project.#ctor(System.String,System.Boolean,System.String,System.DateTime,System.DateTime,System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.ActionPoint},System.Collections.Generic.List{IO.Swagger.Model.ProjectConstant},System.Collections.Generic.List{IO.Swagger.Model.ProjectFunction},System.Collections.Generic.List{IO.Swagger.Model.LogicItem},System.Collections.Generic.List{IO.Swagger.Model.SceneObjectOverride})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Project" /> class.
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="hasLogic">hasLogic (default to true).</param>
             <param name="id">id (required).</param>
             <param name="intModified">intModified.</param>
             <param name="modified">modified.</param>
             <param name="name">name (required).</param>
             <param name="sceneId">sceneId (required).</param>
             <param name="actionPoints">actionPoints.</param>
             <param name="constants">constants.</param>
             <param name="functions">functions.</param>
             <param name="logic">logic.</param>
             <param name="objectOverrides">objectOverrides.</param>
            </member>
        <member name="P:IO.Swagger.Model.Project.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.HasLogic">
             <summary>
             Gets or Sets HasLogic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.Id">
             <summary>
             Gets or Sets Id
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetEndEffectorsResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorsResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorsResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorsResponse.Data">
=======
        <member name="P:IO.Swagger.Model.Project.IntModified">
             <summary>
             Gets or Sets IntModified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.SceneId">
             <summary>
             Gets or Sets SceneId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.ActionPoints">
>>>>>>> devel
             <summary>
             Gets or Sets ActionPoints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.Constants">
             <summary>
             Gets or Sets Constants
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.Functions">
             <summary>
             Gets or Sets Functions
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.Logic">
             <summary>
             Gets or Sets Logic
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Project.ObjectOverrides">
             <summary>
             Gets or Sets ObjectOverrides
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.Project.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.Project.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Project.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.Equals(IO.Swagger.Model.GetEndEffectorsResponse)">
             <summary>
             Returns true if GetEndEffectorsResponse instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Project.Equals(IO.Swagger.Model.Project)">
             <summary>
             Returns true if Project instances are equal
             </summary>
             <param name="input">Instance of Project to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Project.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetEndEffectorsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Project.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Sphere">
             <summary>
             Sphere(id: str, radius: float)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Sphere.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Sphere" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Sphere.#ctor(System.String,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Sphere" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="radius">radius (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.Sphere.Id">
=======
        <member name="T:IO.Swagger.Model.GetRobotJointsRequestAllOf">
             <summary>
             GetRobotJointsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.#ctor(IO.Swagger.Model.GetRobotJointsRequestArgs)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetRobotJointsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Sphere.Radius">
             <summary>
             Gets or Sets Radius
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Sphere.ToString">
=======
        <member name="P:IO.Swagger.Model.GetRobotJointsRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Sphere.ToJson">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Sphere.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Sphere.Equals(IO.Swagger.Model.Sphere)">
             <summary>
             Returns true if Sphere instances are equal
             </summary>
             <param name="input">Instance of Sphere to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Sphere.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.Equals(IO.Swagger.Model.GetRobotJointsRequestAllOf)">
             <summary>
             Returns true if GetRobotJointsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetRobotJointsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Sphere.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.GetRobotJointsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.AddAction.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.AddActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequest.Id">
=======
        <member name="T:IO.Swagger.Model.SphereAllOf">
             <summary>
             SphereAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SphereAllOf.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SphereAllOf" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionRequest.Request">
=======
        <member name="M:IO.Swagger.Model.SphereAllOf.#ctor(System.Decimal)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SphereAllOf" /> class.
             </summary>
             <param name="radius">radius (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.SphereAllOf.Radius">
             <summary>
             Gets or Sets Radius
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SphereAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.SphereAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SphereAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequest.Equals(IO.Swagger.Model.AddActionRequest)">
             <summary>
             Returns true if AddActionRequest instances are equal
             </summary>
             <param name="input">Instance of AddActionRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SphereAllOf.Equals(IO.Swagger.Model.SphereAllOf)">
             <summary>
             Returns true if SphereAllOf instances are equal
             </summary>
             <param name="input">Instance of SphereAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SphereAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SphereAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenamePackageRequestAllOf">
             <summary>
             RenamePackageRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.#ctor(IO.Swagger.Model.RenamePackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenamePackageRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.PausePackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PausePackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PausePackageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.PausePackageResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PausePackageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PausePackageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PausePackageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PausePackageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.PausePackageResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.PausePackageResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.Equals(IO.Swagger.Model.RenamePackageRequestAllOf)">
             <summary>
             Returns true if RenamePackageRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenamePackageRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.PausePackageResponse.Equals(IO.Swagger.Model.PausePackageResponse)">
             <summary>
             Returns true if PausePackageResponse instances are equal
             </summary>
             <param name="input">Instance of PausePackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PausePackageResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.PausePackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf">
             <summary>
             AddActionPointJointsUsingRobotRequestAllOf
=======
        <member name="T:IO.Swagger.Model.ActionParameter">
             <summary>
             ActionParameter(name: str, type: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParameter.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParameter" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParameter.#ctor(System.String,System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParameter" /> class.
>>>>>>> devel
             </summary>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
             <param name="value">value (required).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.ActionParameter.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionParameter.Type">
             <summary>
             Gets or Sets Type
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.DryRun">
=======
        <member name="P:IO.Swagger.Model.ActionParameter.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionParameter.Data">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.ActionParameter.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionParameter.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionParameter.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.Equals(IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf)">
             <summary>
             Returns true if AddActionPointJointsUsingRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddActionPointJointsUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionParameter.Equals(IO.Swagger.Model.ActionParameter)">
             <summary>
             Returns true if ActionParameter instances are equal
             </summary>
             <param name="input">Instance of ActionParameter to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParameter.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionParameter.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenamePackageRequestArgs">
             <summary>
             Args(package_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenamePackageRequestArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.HandTeachingModeAllOf">
             <summary>
             HandTeachingModeAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="newName">newName (required).</param>
             <param name="packageId">packageId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenamePackageRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.#ctor(IO.Swagger.Model.HandTeachingModeData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenamePackageRequestArgs.PackageId">
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets PackageId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.Equals(IO.Swagger.Model.RenamePackageRequestArgs)">
             <summary>
             Returns true if RenamePackageRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenamePackageRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.Equals(IO.Swagger.Model.HandTeachingModeAllOf)">
             <summary>
             Returns true if HandTeachingModeAllOf instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenamePackageRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf">
             <summary>
             UpdateObjectPoseUsingRobotRequestArgsAllOf
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.PivotEnum">
             <summary>
             Defines Pivot
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.PivotEnum.Top">
             <summary>
             Enum Top for value: top
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.PivotEnum.Middle">
=======
        <member name="T:IO.Swagger.Model.AddOverrideRequestArgs">
             <summary>
             Args(id: str, override: arcor2.data.common.Parameter)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.#ctor(System.String,IO.Swagger.Model.Parameter)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddOverrideRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="_override">_override (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddOverrideRequestArgs.Id">
>>>>>>> devel
             <summary>
             Enum Middle for value: middle
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.PivotEnum.Bottom">
             <summary>
             Enum Bottom for value: bottom
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.Pivot">
             <summary>
             Gets or Sets Pivot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.#ctor(System.Nullable{IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.PivotEnum},IO.Swagger.Model.RobotArg)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf" /> class.
             </summary>
             <param name="pivot">pivot (default to PivotEnum.Middle).</param>
             <param name="robot">robot (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.Robot">
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.AddOverrideRequestArgs.Override">
             <summary>
             Gets or Sets Override
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.Equals(IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf)">
             <summary>
             Returns true if UpdateObjectPoseUsingRobotRequestArgsAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseUsingRobotRequestArgsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.Equals(IO.Swagger.Model.AddOverrideRequestArgs)">
             <summary>
             Returns true if AddOverrideRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddOverrideRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotRequestArgsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddOverrideRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ParameterMeta">
             <summary>
             ParameterMeta(name: str, type: str, dynamic_value: bool = False, dynamic_value_parents: Union[Set[str], NoneType] = None, description: Union[str, NoneType] = None, default_value: Union[str, NoneType] = None, extra: Union[str, NoneType] = None, children: List[ForwardRef('ParameterMeta')] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ParameterMeta.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ParameterMeta" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ParameterMeta.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ParameterMeta},System.String,System.String,System.Boolean,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ParameterMeta" /> class.
             </summary>
             <param name="children">children.</param>
             <param name="defaultValue">defaultValue.</param>
             <param name="description">description.</param>
             <param name="dynamicValue">dynamicValue (default to false).</param>
             <param name="dynamicValueParents">dynamicValueParents.</param>
             <param name="extra">extra.</param>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.Children">
             <summary>
             Gets or Sets Children
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.DefaultValue">
             <summary>
             Gets or Sets DefaultValue
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.DynamicValue">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJoints">
             <summary>
             RobotMoveToActionPointJoints(data: arcor2_arserver_data.events.robot.RobotMoveToActionPointJoints.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJoints" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.#ctor(System.Nullable{IO.Swagger.Model.RobotMoveToActionPointJoints.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotMoveToActionPointJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJoints" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJoints.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJoints.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJoints.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.ToString">
>>>>>>> devel
             <summary>
             Gets or Sets DynamicValue
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ParameterMeta.DynamicValueParents">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.ToJson">
>>>>>>> devel
             <summary>
             Gets or Sets DynamicValueParents
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ParameterMeta.Extra">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Gets or Sets Extra
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ParameterMeta.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ParameterMeta.Type">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.Equals(IO.Swagger.Model.RobotMoveToActionPointJoints)">
             <summary>
             Returns true if RobotMoveToActionPointJoints instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointJoints to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets Type
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ParameterMeta.ToString">
             <summary>
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJoints.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf">
             <summary>
             UpdateActionPointPositionRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointPositionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.ToString">
             <summary>
>>>>>>> devel
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ParameterMeta.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ParameterMeta.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ParameterMeta.Equals(IO.Swagger.Model.ParameterMeta)">
             <summary>
             Returns true if ParameterMeta instances are equal
             </summary>
             <param name="input">Instance of ParameterMeta to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ParameterMeta.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointPositionRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointPositionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointPositionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ParameterMeta.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.FocusObjectRequestAllOf">
             <summary>
             FocusObjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.AddLogicItemRequestAllOf">
             <summary>
             AddLogicItemRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.#ctor(IO.Swagger.Model.AddLogicItemRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.#ctor(IO.Swagger.Model.FocusObjectRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectRequestAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.AddLogicItemRequestAllOf.Args">
             <summary>
             Gets or Sets Args
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.FocusObjectRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.AddLogicItemRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.Equals(IO.Swagger.Model.FocusObjectRequestAllOf)">
             <summary>
             Returns true if FocusObjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of FocusObjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.Equals(IO.Swagger.Model.AddLogicItemRequestAllOf)">
             <summary>
             Returns true if AddLogicItemRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddLogicItemRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.FocusObjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddLogicItemRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeleteOverrideRequestArgs">
             <summary>
             Args(id: str, override: arcor2.data.common.Parameter)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.#ctor(System.String,IO.Swagger.Model.Parameter)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteOverrideRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="_override">_override (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteOverrideRequestArgs.Id">
=======
        <member name="T:IO.Swagger.Model.CameraColorImageResponseAllOf">
>>>>>>> devel
             <summary>
             CameraColorImageResponseAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteOverrideRequestArgs.Override">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageResponseAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Override
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.Equals(IO.Swagger.Model.DeleteOverrideRequestArgs)">
             <summary>
             Returns true if DeleteOverrideRequestArgs instances are equal
             </summary>
             <param name="input">Instance of DeleteOverrideRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.Equals(IO.Swagger.Model.CameraColorImageResponseAllOf)">
             <summary>
             Returns true if CameraColorImageResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of CameraColorImageResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteOverrideRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CameraColorImageResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddConstantResponse">
=======
        <member name="T:IO.Swagger.Model.MoveToPoseResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddConstantResponse.Id">
=======
        <member name="P:IO.Swagger.Model.MoveToPoseResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddConstantResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.MoveToPoseResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddConstantResponse.Response">
=======
        <member name="P:IO.Swagger.Model.MoveToPoseResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddConstantResponse.Result">
=======
        <member name="P:IO.Swagger.Model.MoveToPoseResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.AddConstantResponse.Data">
=======
        <member name="P:IO.Swagger.Model.MoveToPoseResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantResponse.Equals(IO.Swagger.Model.AddConstantResponse)">
             <summary>
             Returns true if AddConstantResponse instances are equal
             </summary>
             <param name="input">Instance of AddConstantResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.Equals(IO.Swagger.Model.MoveToPoseResponse)">
             <summary>
             Returns true if MoveToPoseResponse instances are equal
             </summary>
             <param name="input">Instance of MoveToPoseResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.StartSceneRequestAllOf">
             <summary>
             StartSceneRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.#ctor(System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StartSceneRequestAllOf" /> class.
             </summary>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneRequestAllOf.DryRun">
=======
        <member name="T:IO.Swagger.Model.TemporaryPackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TemporaryPackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TemporaryPackageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.TemporaryPackageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.TemporaryPackageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.Equals(IO.Swagger.Model.StartSceneRequestAllOf)">
             <summary>
             Returns true if StartSceneRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of StartSceneRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.Equals(IO.Swagger.Model.TemporaryPackageResponse)">
             <summary>
             Returns true if TemporaryPackageResponse instances are equal
             </summary>
             <param name="input">Instance of TemporaryPackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.StartSceneRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.TemporaryPackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.GetActionsResponseAllOf">
             <summary>
             GetActionsResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ObjectAction})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsResponseAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.AddActionPointOrientationRequestAllOf">
             <summary>
             AddActionPointOrientationRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.#ctor(IO.Swagger.Model.AddActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.Args">
             <summary>
             Gets or Sets Args
>>>>>>> devel
             </summary>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.GetActionsResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.Equals(IO.Swagger.Model.GetActionsResponseAllOf)">
             <summary>
             Returns true if GetActionsResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of GetActionsResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.Equals(IO.Swagger.Model.AddActionPointOrientationRequestAllOf)">
             <summary>
             Returns true if AddActionPointOrientationRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.GetActionsResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SystemInfoResponseData">
             <summary>
             Data(version: str, api_version: str, supported_parameter_types: Set[str] = &lt;factory&gt;, supported_rpc_requests: Set[str] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoResponseData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoResponseData" /> class.
             </summary>
             <param name="apiVersion">apiVersion (required).</param>
             <param name="supportedParameterTypes">supportedParameterTypes.</param>
             <param name="supportedRpcRequests">supportedRpcRequests.</param>
             <param name="version">version (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponseData.ApiVersion">
             <summary>
             Gets or Sets ApiVersion
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponseData.SupportedParameterTypes">
             <summary>
             Gets or Sets SupportedParameterTypes
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponseData.SupportedRpcRequests">
             <summary>
             Gets or Sets SupportedRpcRequests
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponseData.Version">
             <summary>
             Gets or Sets Version
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.ToString">
=======
        <member name="T:IO.Swagger.Model.ListScenesResponseAllOf">
             <summary>
             ListScenesResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ListScenesResponseData})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListScenesResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.ListScenesResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.ToJson">
=======
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.Equals(IO.Swagger.Model.SystemInfoResponseData)">
             <summary>
             Returns true if SystemInfoResponseData instances are equal
             </summary>
             <param name="input">Instance of SystemInfoResponseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.Equals(IO.Swagger.Model.ListScenesResponseAllOf)">
             <summary>
             Returns true if ListScenesResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of ListScenesResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoResponseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ListScenesResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ObjectModel">
             <summary>
             ObjectModel(type: arcor2.data.object_type.Model3dType, box: Union[arcor2.data.object_type.Box, NoneType] = None, cylinder: Union[arcor2.data.object_type.Cylinder, NoneType] = None, sphere: Union[arcor2.data.object_type.Sphere, NoneType] = None, mesh: Union[arcor2.data.object_type.Mesh, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ObjectModel.TypeEnum">
             <summary>
             Defines Type
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ObjectModel.TypeEnum.None">
             <summary>
             Enum None for value: None
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ObjectModel.TypeEnum.Box">
             <summary>
             Enum Box for value: Box
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ObjectModel.TypeEnum.Cylinder">
             <summary>
             Enum Cylinder for value: Cylinder
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ObjectModel.TypeEnum.Sphere">
=======
        <member name="T:IO.Swagger.Model.ProcessStateData">
             <summary>
             Data(id: str, state: arcor2_arserver_data.events.common.ProcessState.Data.StateEnum, message: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ProcessStateData.StateEnum">
             <summary>
             Defines State
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProcessStateData.StateEnum.Started">
             <summary>
             Enum Started for value: started
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProcessStateData.StateEnum.Finished">
             <summary>
             Enum Finished for value: finished
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProcessStateData.StateEnum.Failed">
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProcessStateData.State">
             <summary>
             Gets or Sets State
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessStateData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateData.#ctor(System.String,System.String,IO.Swagger.Model.ProcessStateData.StateEnum)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessStateData" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="message">message.</param>
             <param name="state">state (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProcessStateData.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProcessStateData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateData.ToString">
>>>>>>> devel
             <summary>
             Enum Sphere for value: Sphere
             </summary>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ObjectModel.TypeEnum.Mesh">
=======
        <member name="M:IO.Swagger.Model.ProcessStateData.ToJson">
>>>>>>> devel
             <summary>
             Enum Mesh for value: Mesh
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ObjectModel.Type">
=======
        <member name="M:IO.Swagger.Model.ProcessStateData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Gets or Sets Type
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ObjectModel.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectModel" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectModel.#ctor(IO.Swagger.Model.Box,IO.Swagger.Model.Cylinder,IO.Swagger.Model.Mesh,IO.Swagger.Model.Sphere,IO.Swagger.Model.ObjectModel.TypeEnum)">
=======
        <member name="M:IO.Swagger.Model.ProcessStateData.Equals(IO.Swagger.Model.ProcessStateData)">
             <summary>
             Returns true if ProcessStateData instances are equal
             </summary>
             <param name="input">Instance of ProcessStateData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProcessStateData.GetHashCode">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectModel" /> class.
             </summary>
             <param name="box">box.</param>
             <param name="cylinder">cylinder.</param>
             <param name="mesh">mesh.</param>
             <param name="sphere">sphere.</param>
             <param name="type">type (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ObjectModel.Box">
=======
        <member name="M:IO.Swagger.Model.ProcessStateData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Gets or Sets Box
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ObjectModel.Cylinder">
             <summary>
             Gets or Sets Cylinder
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectModel.Mesh">
             <summary>
             Gets or Sets Mesh
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectModel.Sphere">
             <summary>
             Gets or Sets Sphere
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectModel.ToString">
=======
        <member name="T:IO.Swagger.Model.CalibrateCameraRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.camera.CalibrateCamera.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CalibrateCameraRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ObjectModel.ToJson">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ObjectModel.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ObjectModel.Equals(IO.Swagger.Model.ObjectModel)">
             <summary>
             Returns true if ObjectModel instances are equal
             </summary>
             <param name="input">Instance of ObjectModel to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectModel.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.Equals(IO.Swagger.Model.CalibrateCameraRequest)">
             <summary>
             Returns true if CalibrateCameraRequest instances are equal
             </summary>
             <param name="input">Instance of CalibrateCameraRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ObjectModel.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CalibrateCameraRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="T:IO.Swagger.Model.MarkerCorners">
             <summary>
             MarkerCorners(marker_id: int, corners: List[arcor2_calibration_data.Corner])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkerCorners.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkerCorners" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkerCorners.#ctor(System.Collections.Generic.List{IO.Swagger.Model.Corner},System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkerCorners" /> class.
>>>>>>> devel
             </summary>
             <param name="corners">corners (required).</param>
             <param name="markerId">markerId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.MarkerCorners.Corners">
             <summary>
             Gets or Sets Corners
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MarkerCorners.MarkerId">
             <summary>
             Gets or Sets MarkerId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkerCorners.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.MarkerCorners.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MarkerCorners.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.Equals(IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse)">
             <summary>
             Returns true if UpdateObjectPoseUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateObjectPoseUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MarkerCorners.Equals(IO.Swagger.Model.MarkerCorners)">
             <summary>
             Returns true if MarkerCorners instances are equal
             </summary>
             <param name="input">Instance of MarkerCorners to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkerCorners.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateObjectPoseUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MarkerCorners.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameProjectRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RenameProject.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectRequest.Args">
=======
        <member name="T:IO.Swagger.Model.ProjectChangedAllOf">
             <summary>
             ProjectChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.#ctor(IO.Swagger.Model.BareProject)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameProjectRequest.DryRun">
=======
        <member name="P:IO.Swagger.Model.ProjectChangedAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameProjectRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameProjectRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameProjectRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameProjectRequest.Equals(IO.Swagger.Model.RenameProjectRequest)">
             <summary>
             Returns true if RenameProjectRequest instances are equal
             </summary>
             <param name="input">Instance of RenameProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.Equals(IO.Swagger.Model.ProjectChangedAllOf)">
             <summary>
             Returns true if ProjectChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of ProjectChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProjectChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SceneObjectUsageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[Set[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectUsageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectUsageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectUsageResponse.Id">
=======
        <member name="T:IO.Swagger.Model.NewObjectTypeRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.objects.ObjectTypeMeta, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.ObjectTypeMeta,System.Boolean)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneObjectUsageResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.NewObjectTypeRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneObjectUsageResponse.Response">
=======
        <member name="P:IO.Swagger.Model.NewObjectTypeRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneObjectUsageResponse.Result">
=======
        <member name="P:IO.Swagger.Model.NewObjectTypeRequest.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SceneObjectUsageResponse.Data">
=======
        <member name="P:IO.Swagger.Model.NewObjectTypeRequest.DryRun">
>>>>>>> devel
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.Equals(IO.Swagger.Model.SceneObjectUsageResponse)">
             <summary>
             Returns true if SceneObjectUsageResponse instances are equal
             </summary>
             <param name="input">Instance of SceneObjectUsageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.Equals(IO.Swagger.Model.NewObjectTypeRequest)">
             <summary>
             Returns true if NewObjectTypeRequest instances are equal
             </summary>
             <param name="input">Instance of NewObjectTypeRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SceneObjectUsageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.NewObjectTypeRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddActionPointResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointResponse.ToString">
=======
        <member name="T:IO.Swagger.Model.ActionMetadata">
             <summary>
             ActionMetadata(blocking: bool = False, composite: bool = False, blackbox: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionMetadata.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionMetadata" /> class.
             </summary>
             <param name="blackbox">blackbox (default to false).</param>
             <param name="blocking">blocking (default to false).</param>
             <param name="cancellable">cancellable (default to false).</param>
             <param name="composite">composite (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionMetadata.Blackbox">
             <summary>
             Gets or Sets Blackbox
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionMetadata.Blocking">
             <summary>
             Gets or Sets Blocking
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionMetadata.Cancellable">
             <summary>
             Gets or Sets Cancellable
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionMetadata.Composite">
             <summary>
             Gets or Sets Composite
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionMetadata.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionMetadata.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionMetadata.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointResponse.Equals(IO.Swagger.Model.AddActionPointResponse)">
             <summary>
             Returns true if AddActionPointResponse instances are equal
             </summary>
             <param name="input">Instance of AddActionPointResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionMetadata.Equals(IO.Swagger.Model.ActionMetadata)">
             <summary>
             Returns true if ActionMetadata instances are equal
             </summary>
             <param name="input">Instance of ActionMetadata to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionMetadata.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionMetadata.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CopySceneRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.CopyScene.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CopySceneRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopySceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CopySceneRequest.Id">
=======
        <member name="T:IO.Swagger.Model.SceneObjectChangedAllOf">
             <summary>
             SceneObjectChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectChangedAllOf" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopySceneRequest.Request">
=======
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.#ctor(IO.Swagger.Model.SceneObject)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CopySceneRequest.Args">
=======
        <member name="P:IO.Swagger.Model.SceneObjectChangedAllOf.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequest.Equals(IO.Swagger.Model.CopySceneRequest)">
             <summary>
             Returns true if CopySceneRequest instances are equal
             </summary>
             <param name="input">Instance of CopySceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopySceneRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.Equals(IO.Swagger.Model.SceneObjectChangedAllOf)">
             <summary>
             Returns true if SceneObjectChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of SceneObjectChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CopySceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.BareAction">
             <summary>
             BareAction(id: str, name: str, type: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareAction.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareAction" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareAction.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareAction" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BareAction.Id">
=======
        <member name="T:IO.Swagger.Model.RenameObjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.BareAction.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareAction.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareAction.ToString">
=======
        <member name="P:IO.Swagger.Model.RenameObjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BareAction.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameObjectResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BareAction.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameObjectResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BareAction.Equals(IO.Swagger.Model.BareAction)">
             <summary>
             Returns true if BareAction instances are equal
             </summary>
             <param name="input">Instance of BareAction to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareAction.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameObjectResponse.Equals(IO.Swagger.Model.RenameObjectResponse)">
             <summary>
             Returns true if RenameObjectResponse instances are equal
             </summary>
             <param name="input">Instance of RenameObjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.BareAction.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameObjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf">
             <summary>
             UpdateActionPointOrientationUsingRobotRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.ProcessState">
             <summary>
             ProcessState(data: arcor2_arserver_data.events.common.ProcessState.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ProcessState.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProcessState.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProcessState.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProcessState.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProcessState.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.Args">
=======
        <member name="P:IO.Swagger.Model.ProcessState.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessState.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessState" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProcessState.#ctor(System.Nullable{IO.Swagger.Model.ProcessState.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ProcessStateData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProcessState" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProcessState.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProcessState.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProcessState.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.ProcessState.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ProcessState.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ProcessState.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointOrientationUsingRobotRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationUsingRobotRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ProcessState.Equals(IO.Swagger.Model.ProcessState)">
             <summary>
             Returns true if ProcessState instances are equal
             </summary>
             <param name="input">Instance of ProcessState to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProcessState.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ProcessState.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.TypeArgs">
             <summary>
             TypeArgs(type: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TypeArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TypeArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TypeArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.TypeArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.RenameProjectRequestArgs">
             <summary>
             Args(project_id: str, new_name: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequestArgs" /> class.
             </summary>
             <param name="newName">newName (required).</param>
             <param name="projectId">projectId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectRequestArgs.NewName">
             <summary>
             Gets or Sets NewName
>>>>>>> devel
             </summary>
             <param name="type">type (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.TypeArgs.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.TypeArgs.ToString">
=======
        <member name="P:IO.Swagger.Model.RenameProjectRequestArgs.ProjectId">
             <summary>
             Gets or Sets ProjectId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TypeArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TypeArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TypeArgs.Equals(IO.Swagger.Model.TypeArgs)">
             <summary>
             Returns true if TypeArgs instances are equal
             </summary>
             <param name="input">Instance of TypeArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.TypeArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.Equals(IO.Swagger.Model.RenameProjectRequestArgs)">
             <summary>
             Returns true if RenameProjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RenameProjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.TypeArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RenameProjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionParamValuesRequestArgs">
             <summary>
             Args(id: str, param_id: str, parent_params: List[arcor2.data.common.IdValue] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.#ctor">
=======
        <member name="T:IO.Swagger.Model.GetEndEffectorPoseResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2.data.common.Pose, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.Equals(IO.Swagger.Model.GetEndEffectorPoseResponse)">
             <summary>
             Returns true if GetEndEffectorPoseResponse instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorPoseResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequestArgs" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.#ctor(System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.IdValue})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequestArgs" /> class.
=======
        <member name="T:IO.Swagger.Model.DeletePackageRequestAllOf">
             <summary>
             DeletePackageRequestAllOf
>>>>>>> devel
             </summary>
             <param name="id">Object or service id. (required).</param>
             <param name="paramId">paramId (required).</param>
             <param name="parentParams">parentParams.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionParamValuesRequestArgs.Id">
             <summary>
             Object or service id.
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <value>Object or service id.</value>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionParamValuesRequestArgs.ParamId">
             <summary>
             Gets or Sets ParamId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesRequestArgs.ParentParams">
             <summary>
             Gets or Sets ParentParams
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.#ctor(IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeletePackageRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.DeletePackageRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.Equals(IO.Swagger.Model.ActionParamValuesRequestArgs)">
             <summary>
             Returns true if ActionParamValuesRequestArgs instances are equal
             </summary>
             <param name="input">Instance of ActionParamValuesRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.Equals(IO.Swagger.Model.DeletePackageRequestAllOf)">
             <summary>
             Returns true if DeletePackageRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of DeletePackageRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.DeletePackageRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameObjectRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.RenameArgs, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameObjectRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectRequest.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointUsingRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointUsingRobotRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameObjectRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameObjectRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectRequest.Equals(IO.Swagger.Model.RenameObjectRequest)">
             <summary>
             Returns true if RenameObjectRequest instances are equal
             </summary>
             <param name="input">Instance of RenameObjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameObjectRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.Equals(IO.Swagger.Model.UpdateActionPointUsingRobotRequest)">
             <summary>
             Returns true if UpdateActionPointUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameObjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateActionPointUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddObjectToSceneRequestArgs">
             <summary>
             Args(name: str, type: str, pose: Union[arcor2.data.common.Pose, NoneType] = None, parameters: List[arcor2.data.common.Parameter] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Parameter},IO.Swagger.Model.Pose,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneRequestArgs" /> class.
             </summary>
             <param name="name">name (required).</param>
             <param name="parameters">parameters.</param>
             <param name="pose">pose.</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestArgs.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestArgs.Pose">
             <summary>
             Gets or Sets Pose
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneRequestArgs.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToPose">
             <summary>
             RobotMoveToPose(data: arcor2_arserver_data.events.robot.RobotMoveToPose.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum">
>>>>>>> devel
             <summary>
             Defines ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.ToJson">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum.Add">
>>>>>>> devel
             <summary>
             Enum Add for value: add
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.Equals(System.Object)">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Enum Update for value: update
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.Equals(IO.Swagger.Model.AddObjectToSceneRequestArgs)">
             <summary>
             Returns true if AddObjectToSceneRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddObjectToSceneRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.GetHashCode">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum.Updatebase">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddObjectToSceneRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToPose.ChangeType">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.AddConstantRequestAllOf">
             <summary>
             AddConstantRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequestAllOf" /> class.
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPose.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPose" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPose.#ctor(System.Nullable{IO.Swagger.Model.RobotMoveToPose.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotMoveToPoseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPose" /> class.
>>>>>>> devel
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.#ctor(IO.Swagger.Model.AddConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToPose.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPose.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPose.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPose.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPose.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPose.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.Equals(IO.Swagger.Model.AddConstantRequestAllOf)">
             <summary>
             Returns true if AddConstantRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of AddConstantRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPose.Equals(IO.Swagger.Model.RobotMoveToPose)">
             <summary>
             Returns true if RobotMoveToPose instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToPose to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPose.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddConstantRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToPose.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.MarkersCornersRequestArgs">
             <summary>
             Args(camera_parameters: arcor2.data.camera.CameraParameters, image: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.#ctor(IO.Swagger.Model.CameraParameters,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersRequestArgs" /> class.
             </summary>
             <param name="cameraParameters">cameraParameters (required).</param>
             <param name="image">Base64 encoded image. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MarkersCornersRequestArgs.CameraParameters">
=======
        <member name="T:IO.Swagger.Model.MoveToPoseRequestAllOf">
             <summary>
             MoveToPoseRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.#ctor(IO.Swagger.Model.MoveToPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets CameraParameters
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.MarkersCornersRequestArgs.Image">
             <summary>
             Base64 encoded image.
             </summary>
             <value>Base64 encoded image.</value>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.Equals(IO.Swagger.Model.MarkersCornersRequestArgs)">
             <summary>
             Returns true if MarkersCornersRequestArgs instances are equal
             </summary>
             <param name="input">Instance of MarkersCornersRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.Equals(IO.Swagger.Model.MoveToPoseRequestAllOf)">
             <summary>
             Returns true if MoveToPoseRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of MoveToPoseRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.MarkersCornersRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.NewSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewSceneResponse.Messages">
=======
        <member name="T:IO.Swagger.Model.RemoveActionPointJointsRequestArgs">
>>>>>>> devel
             <summary>
             Args(joints_id: str)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewSceneResponse.Response">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequestArgs" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewSceneResponse.Result">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.#ctor(System.String)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointJointsRequestArgs" /> class.
             </summary>
             <param name="jointsId">jointsId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.NewSceneResponse.Data">
=======
        <member name="P:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.JointsId">
>>>>>>> devel
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneResponse.Equals(IO.Swagger.Model.NewSceneResponse)">
             <summary>
             Returns true if NewSceneResponse instances are equal
             </summary>
             <param name="input">Instance of NewSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewSceneResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.Equals(IO.Swagger.Model.RemoveActionPointJointsRequestArgs)">
             <summary>
             Returns true if RemoveActionPointJointsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointJointsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.NewSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveActionPointJointsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PackageInfoAllOf">
             <summary>
             PackageInfoAllOf
=======
        <member name="T:IO.Swagger.Model.RobotMoveToJointsDataAllOf">
             <summary>
             RobotMoveToJointsDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsDataAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.#ctor(System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.Joint})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsDataAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
             <param name="targetJoints">targetJoints (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfoAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.#ctor(IO.Swagger.Model.PackageInfoData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageInfoAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.RobotMoveToJointsDataAllOf.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJointsDataAllOf.Safe">
             <summary>
             Gets or Sets Safe
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.PackageInfoAllOf.Data">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToJointsDataAllOf.TargetJoints">
>>>>>>> devel
             <summary>
             Gets or Sets TargetJoints
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.ToString">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.Equals(IO.Swagger.Model.PackageInfoAllOf)">
             <summary>
             Returns true if PackageInfoAllOf instances are equal
             </summary>
             <param name="input">Instance of PackageInfoAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.Equals(IO.Swagger.Model.RobotMoveToJointsDataAllOf)">
             <summary>
             Returns true if RobotMoveToJointsDataAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToJointsDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageInfoAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJointsDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Notification">
             <summary>
             Notification(data: Union[arcor2.data.events.Notification.Data, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.Notification.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Notification.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Notification.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Notification.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Notification.ChangeTypeEnum.Updatebase">
=======
        <member name="T:IO.Swagger.Model.UpdateActionRequestAllOf">
             <summary>
             UpdateActionRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Notification.ChangeType">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Notification.#ctor">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Notification" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Notification.#ctor(System.Nullable{IO.Swagger.Model.Notification.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.NotificationData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Notification" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.Notification.Event">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.Equals(IO.Swagger.Model.UpdateActionRequestAllOf)">
             <summary>
             Returns true if UpdateActionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets or Sets Event
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Notification.ParentId">
=======
        <member name="M:IO.Swagger.Model.UpdateActionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Notification.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Notification.ToString">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToJoints">
             <summary>
             RobotMoveToJoints(data: arcor2_arserver_data.events.robot.RobotMoveToJoints.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Notification.ToJson">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum.Add">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Notification.Equals(System.Object)">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum.Update">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Notification.Equals(IO.Swagger.Model.Notification)">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum.Remove">
>>>>>>> devel
             <summary>
             Returns true if Notification instances are equal
             </summary>
             <param name="input">Instance of Notification to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Notification.GetHashCode">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum.Updatebase">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Notification.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToJoints.ChangeType">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.IdDesc">
             <summary>
             IdDesc(id: str, name: str, desc: Union[str, NoneType])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdDesc.#ctor">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJoints" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.#ctor(System.Nullable{IO.Swagger.Model.RobotMoveToJoints.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotMoveToJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJoints" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToJoints.Event">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdDesc" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdDesc.#ctor(System.String,System.String,System.String)">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToJoints.ParentId">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.IdDesc" /> class.
             </summary>
             <param name="desc">desc.</param>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.IdDesc.Desc">
=======
        <member name="P:IO.Swagger.Model.RobotMoveToJoints.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.IdDesc.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.IdDesc.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.IdDesc.ToString">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdDesc.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdDesc.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdDesc.Equals(IO.Swagger.Model.IdDesc)">
             <summary>
             Returns true if IdDesc instances are equal
             </summary>
             <param name="input">Instance of IdDesc to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.IdDesc.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.Equals(IO.Swagger.Model.RobotMoveToJoints)">
             <summary>
             Returns true if RobotMoveToJoints instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToJoints to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.IdDesc.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToJoints.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionParamValuesRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.objects.ActionParamValues.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.ActionParamValuesRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionParamValuesRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.ForwardKinematicsRequestAllOf">
             <summary>
             ForwardKinematicsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.#ctor(IO.Swagger.Model.ForwardKinematicsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForwardKinematicsRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="args">args (required).</param>
<<<<<<< HEAD
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionParamValuesRequest.Args">
=======
            </member>
        <member name="P:IO.Swagger.Model.ForwardKinematicsRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Args
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.Equals(IO.Swagger.Model.ActionParamValuesRequest)">
             <summary>
             Returns true if ActionParamValuesRequest instances are equal
             </summary>
             <param name="input">Instance of ActionParamValuesRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.Equals(IO.Swagger.Model.ForwardKinematicsRequestAllOf)">
             <summary>
             Returns true if ForwardKinematicsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of ForwardKinematicsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionParamValuesRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ForwardKinematicsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeleteProjectResponse">
=======
        <member name="T:IO.Swagger.Model.RemoveConstantResponse">
>>>>>>> devel
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteProjectResponse" /> class.
=======
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveConstantResponse" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteProjectResponse.Id">
=======
        <member name="P:IO.Swagger.Model.RemoveConstantResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteProjectResponse.Messages">
=======
        <member name="P:IO.Swagger.Model.RemoveConstantResponse.Messages">
>>>>>>> devel
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteProjectResponse.Response">
=======
        <member name="P:IO.Swagger.Model.RemoveConstantResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets Response
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteProjectResponse.Result">
=======
        <member name="P:IO.Swagger.Model.RemoveConstantResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets Result
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.DeleteProjectResponse.Data">
=======
        <member name="P:IO.Swagger.Model.RemoveConstantResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.Equals(IO.Swagger.Model.DeleteProjectResponse)">
             <summary>
             Returns true if DeleteProjectResponse instances are equal
             </summary>
             <param name="input">Instance of DeleteProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.Equals(IO.Swagger.Model.RemoveConstantResponse)">
             <summary>
             Returns true if RemoveConstantResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveConstantResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RemoveConstantResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionExecutionData">
             <summary>
             Data(action_id: str = '')
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionData.#ctor(System.String)">
=======
        <member name="T:IO.Swagger.Model.BuildProjectRequestAllOf">
             <summary>
             BuildProjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.#ctor(IO.Swagger.Model.BuildProjectRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BuildProjectRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BuildProjectRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionExecutionData" /> class.
             </summary>
             <param name="actionId">actionId (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.ActionExecutionData.ActionId">
             <summary>
             Gets or Sets ActionId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionData.ToString">
=======
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecutionData.ToJson">
=======
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecutionData.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecutionData.Equals(IO.Swagger.Model.ActionExecutionData)">
             <summary>
             Returns true if ActionExecutionData instances are equal
             </summary>
             <param name="input">Instance of ActionExecutionData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionExecutionData.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.Equals(IO.Swagger.Model.BuildProjectRequestAllOf)">
             <summary>
             Returns true if BuildProjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of BuildProjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionExecutionData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.BuildProjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToJointsAllOf">
             <summary>
             RobotMoveToJointsAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.#ctor(IO.Swagger.Model.RobotMoveToJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToJointsAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.OpenProjectData">
             <summary>
             Data(scene: arcor2.data.common.Scene, project: arcor2.data.common.Project)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectData.#ctor(IO.Swagger.Model.Project,IO.Swagger.Model.Scene)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OpenProjectData" /> class.
             </summary>
             <param name="project">project (required).</param>
             <param name="scene">scene (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OpenProjectData.Project">
             <summary>
             Gets or Sets Project
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToJointsAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.OpenProjectData.Scene">
             <summary>
             Gets or Sets Scene
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.OpenProjectData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.OpenProjectData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.Equals(IO.Swagger.Model.RobotMoveToJointsAllOf)">
             <summary>
             Returns true if RobotMoveToJointsAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToJointsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.OpenProjectData.Equals(IO.Swagger.Model.OpenProjectData)">
             <summary>
             Returns true if OpenProjectData instances are equal
             </summary>
             <param name="input">Instance of OpenProjectData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OpenProjectData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToJointsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.OpenProjectData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointOrientation.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointOrientationRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.ToString">
=======
        <member name="T:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs">
             <summary>
             Args(project_id: str, new_description: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs" /> class.
             </summary>
             <param name="newDescription">newDescription (required).</param>
             <param name="projectId">projectId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.NewDescription">
             <summary>
             Gets or Sets NewDescription
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.ProjectId">
             <summary>
             Gets or Sets ProjectId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.Equals(IO.Swagger.Model.UpdateActionPointOrientationRequest)">
             <summary>
             Returns true if UpdateActionPointOrientationRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.Equals(IO.Swagger.Model.UpdateProjectDescriptionRequestArgs)">
             <summary>
             Returns true if UpdateProjectDescriptionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectDescriptionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectDescriptionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.Action">
             <summary>
             Action(id: str, name: str, type: str, parameters: List[arcor2.data.common.ActionParameter] = &lt;factory&gt;, flows: List[arcor2.data.common.Flow] = &lt;factory&gt;)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Action.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Action" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Action.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.Flow},System.Collections.Generic.List{IO.Swagger.Model.ActionParameter})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Action" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
             <param name="flows">flows.</param>
             <param name="parameters">parameters.</param>
            </member>
        <member name="P:IO.Swagger.Model.Action.Id">
=======
        <member name="T:IO.Swagger.Model.RobotEefData">
>>>>>>> devel
             <summary>
             Data(robot_id: str, end_effectors: List[arcor2_arserver_data.events.robot.RobotEef.Data.EefPose] = &lt;factory&gt;)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Action.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Action.Type">
             <summary>
             Gets or Sets Type
=======
        <member name="M:IO.Swagger.Model.RobotEefData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefData.#ctor(System.Collections.Generic.List{IO.Swagger.Model.RobotEefDataEefPose},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotEefData" /> class.
>>>>>>> devel
             </summary>
             <param name="endEffectors">endEffectors.</param>
             <param name="robotId">robotId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.Action.Flows">
             <summary>
             Gets or Sets Flows
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Action.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Action.ToString">
=======
        <member name="P:IO.Swagger.Model.RobotEefData.EndEffectors">
             <summary>
             Gets or Sets EndEffectors
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotEefData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Action.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotEefData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Action.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotEefData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Action.Equals(IO.Swagger.Model.Action)">
             <summary>
             Returns true if Action instances are equal
             </summary>
             <param name="input">Instance of Action to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Action.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotEefData.Equals(IO.Swagger.Model.RobotEefData)">
             <summary>
             Returns true if RobotEefData instances are equal
             </summary>
             <param name="input">Instance of RobotEefData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotEefData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.Action.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotEefData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeleteObjectTypeRequestAllOf">
             <summary>
             DeleteObjectTypeRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.#ctor(IO.Swagger.Model.IdArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteObjectTypeRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.ToString">
=======
        <member name="T:IO.Swagger.Model.ActionResult">
             <summary>
             Used to notify result of the action execution triggered while editing a     project.
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ActionResult.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionResult.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionResult.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionResult.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionResult.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionResult.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResult.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResult" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResult.#ctor(System.Nullable{IO.Swagger.Model.ActionResult.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ActionResultData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResult" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionResult.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionResult.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionResult.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResult.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionResult.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionResult.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.Equals(IO.Swagger.Model.DeleteObjectTypeRequestAllOf)">
             <summary>
             Returns true if DeleteObjectTypeRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of DeleteObjectTypeRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionResult.Equals(IO.Swagger.Model.ActionResult)">
             <summary>
             Returns true if ActionResult instances are equal
             </summary>
             <param name="input">Instance of ActionResult to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionResult.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.DeleteObjectTypeRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionResult.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameActionPointJointsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsResponse.Messages">
             <summary>
             Gets or Sets Messages
=======
        <member name="T:IO.Swagger.Model.CalibrateRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.CalibrateRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CalibrateRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionPointJointsResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.CalibrateRobotRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateRobotRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.Equals(IO.Swagger.Model.RenameActionPointJointsResponse)">
             <summary>
             Returns true if RenameActionPointJointsResponse instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointJointsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.Equals(IO.Swagger.Model.CalibrateRobotRequest)">
             <summary>
             Returns true if CalibrateRobotRequest instances are equal
             </summary>
             <param name="input">Instance of CalibrateRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.CalibrateRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RenameActionPointJointsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RenameActionPointJoints.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameActionPointJointsRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequest.Args">
=======
        <member name="T:IO.Swagger.Model.BareActionPoint">
             <summary>
             BareActionPoint(id: str, name: str, position: arcor2.data.common.Position, parent: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareActionPoint.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareActionPoint" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareActionPoint.#ctor(System.String,System.String,System.String,IO.Swagger.Model.Position)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareActionPoint" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="parent">parent.</param>
             <param name="position">position (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BareActionPoint.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareActionPoint.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareActionPoint.Parent">
             <summary>
             Gets or Sets Parent
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareActionPoint.Position">
>>>>>>> devel
             <summary>
             Gets or Sets Position
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.BareActionPoint.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.BareActionPoint.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.BareActionPoint.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.Equals(IO.Swagger.Model.RenameActionPointJointsRequest)">
             <summary>
             Returns true if RenameActionPointJointsRequest instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointJointsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.BareActionPoint.Equals(IO.Swagger.Model.BareActionPoint)">
             <summary>
             Returns true if BareActionPoint instances are equal
             </summary>
             <param name="input">Instance of BareActionPoint to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareActionPoint.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.BareActionPoint.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.ActionStateBefore">
             <summary>
             ActionStateBefore(data: arcor2.data.events.ActionStateBefore.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
=======
        <member name="T:IO.Swagger.Model.Joint">
             <summary>
             Joint(name: str, value: float)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Joint.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Joint" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Joint.#ctor(System.String,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Joint" /> class.
>>>>>>> devel
             </summary>
             <param name="name">name (required).</param>
             <param name="value">value (required).</param>
            </member>
<<<<<<< HEAD
        <member name="F:IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateBefore.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBefore.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBefore" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBefore.#ctor(System.Nullable{IO.Swagger.Model.ActionStateBefore.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ActionStateBeforeData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBefore" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateBefore.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateBefore.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateBefore.Data">
=======
        <member name="P:IO.Swagger.Model.Joint.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Joint.Value">
>>>>>>> devel
             <summary>
             Gets or Sets Value
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateBefore.ToString">
=======
        <member name="M:IO.Swagger.Model.Joint.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateBefore.ToJson">
=======
        <member name="M:IO.Swagger.Model.Joint.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateBefore.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.Joint.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateBefore.Equals(IO.Swagger.Model.ActionStateBefore)">
             <summary>
             Returns true if ActionStateBefore instances are equal
             </summary>
             <param name="input">Instance of ActionStateBefore to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBefore.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.Joint.Equals(IO.Swagger.Model.Joint)">
             <summary>
             Returns true if Joint instances are equal
             </summary>
             <param name="input">Instance of Joint to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Joint.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.ActionStateBefore.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.Joint.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs">
             <summary>
             Args(scene_id: str, new_description: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs" /> class.
             </summary>
             <param name="newDescription">newDescription (required).</param>
             <param name="sceneId">sceneId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.NewDescription">
             <summary>
             Gets or Sets NewDescription
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.SceneId">
             <summary>
             Gets or Sets SceneId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.ToString">
=======
        <member name="T:IO.Swagger.Model.SceneStateData">
             <summary>
             Data(state: arcor2_arserver_data.events.scene.SceneState.Data.StateEnum, message: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneStateData.StateEnum">
             <summary>
             Defines State
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneStateData.StateEnum.Stopped">
             <summary>
             Enum Stopped for value: stopped
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneStateData.StateEnum.Starting">
             <summary>
             Enum Starting for value: starting
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneStateData.StateEnum.Started">
             <summary>
             Enum Started for value: started
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneStateData.StateEnum.Stopping">
             <summary>
             Enum Stopping for value: stopping
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneStateData.State">
             <summary>
             Gets or Sets State
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneStateData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.#ctor(System.String,IO.Swagger.Model.SceneStateData.StateEnum)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneStateData" /> class.
             </summary>
             <param name="message">message.</param>
             <param name="state">state (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneStateData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.SceneStateData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SceneStateData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.Equals(IO.Swagger.Model.UpdateSceneDescriptionRequestArgs)">
             <summary>
             Returns true if UpdateSceneDescriptionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateSceneDescriptionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SceneStateData.Equals(IO.Swagger.Model.SceneStateData)">
             <summary>
             Returns true if SceneStateData instances are equal
             </summary>
             <param name="input">Instance of SceneStateData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SceneStateData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.InverseKinematicsResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[List[arcor2.data.common.Joint], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.Joint})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.InverseKinematicsResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsResponse.Id">
=======
        <member name="T:IO.Swagger.Model.MarkersCornersResponseAllOf">
>>>>>>> devel
             <summary>
             MarkersCornersResponseAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.InverseKinematicsResponse.Messages">
             <summary>
             Gets or Sets Messages
=======
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.#ctor(System.Collections.Generic.List{IO.Swagger.Model.MarkerCorners})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MarkersCornersResponseAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="data">data.</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.InverseKinematicsResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.InverseKinematicsResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.ToString">
=======
        <member name="P:IO.Swagger.Model.MarkersCornersResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.Equals(IO.Swagger.Model.InverseKinematicsResponse)">
             <summary>
             Returns true if InverseKinematicsResponse instances are equal
             </summary>
             <param name="input">Instance of InverseKinematicsResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.Equals(IO.Swagger.Model.MarkersCornersResponseAllOf)">
             <summary>
             Returns true if MarkersCornersResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of MarkersCornersResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.InverseKinematicsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.MarkersCornersResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UploadPackageRequest">
             <summary>
             Request(id: int, args: arcor2_execution_data.rpc.UploadPackage.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UploadPackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageRequest.Id">
=======
        <member name="T:IO.Swagger.Model.UploadPackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageResponse.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UploadPackageRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequest.ToString">
=======
        <member name="P:IO.Swagger.Model.UploadPackageResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UploadPackageRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.UploadPackageResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UploadPackageRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UploadPackageResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UploadPackageRequest.Equals(IO.Swagger.Model.UploadPackageRequest)">
             <summary>
             Returns true if UploadPackageRequest instances are equal
             </summary>
             <param name="input">Instance of UploadPackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UploadPackageResponse.Equals(IO.Swagger.Model.UploadPackageResponse)">
             <summary>
             Returns true if UploadPackageResponse instances are equal
             </summary>
             <param name="input">Instance of UploadPackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UploadPackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UploadPackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SystemInfoRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoRequest" /> class.
=======
        <member name="T:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf">
             <summary>
             UpdateProjectHasLogicRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.#ctor(IO.Swagger.Model.UpdateProjectHasLogicRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SystemInfoRequest.Id">
=======
        <member name="P:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.Args">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SystemInfoRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoRequest.Equals(IO.Swagger.Model.SystemInfoRequest)">
             <summary>
             Returns true if SystemInfoRequest instances are equal
             </summary>
             <param name="input">Instance of SystemInfoRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.Equals(IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf)">
             <summary>
             Returns true if UpdateProjectHasLogicRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateProjectHasLogicRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SystemInfoRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateProjectHasLogicRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UpdateSceneDescriptionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateSceneDescriptionResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionResponse.Id">
=======
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJointsData">
             <summary>
             Data(move_event_type: arcor2_arserver_data.events.robot.RobotMoveToData.MoveEventType, robot_id: str, joints_id: str, safe: bool, message: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventTypeEnum">
             <summary>
             Defines MoveEventType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventTypeEnum.Start">
             <summary>
             Enum Start for value: start
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventTypeEnum.End">
>>>>>>> devel
             <summary>
             Enum End for value: end
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateSceneDescriptionResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.ToString">
=======
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventTypeEnum.Failed">
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventType">
             <summary>
             Gets or Sets MoveEventType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.#ctor(IO.Swagger.Model.RobotMoveToActionPointJointsData.MoveEventTypeEnum,System.String,System.String,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsData" /> class.
             </summary>
             <param name="moveEventType">moveEventType (required).</param>
             <param name="robotId">robotId (required).</param>
             <param name="jointsId">jointsId (required).</param>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsData.JointsId">
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsData.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.Equals(IO.Swagger.Model.UpdateSceneDescriptionResponse)">
             <summary>
             Returns true if UpdateSceneDescriptionResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateSceneDescriptionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.Equals(IO.Swagger.Model.RobotMoveToActionPointJointsData)">
             <summary>
             Returns true if RobotMoveToActionPointJointsData instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointJointsData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UpdateSceneDescriptionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf">
             <summary>
             RobotMoveToActionPointOrientationAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.HandTeachingModeData">
             <summary>
             Data(robot_id: str, enabled: bool)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.#ctor(System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeData" /> class.
>>>>>>> devel
             </summary>
             <param name="enabled">enabled (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.#ctor(IO.Swagger.Model.RobotMoveToActionPointOrientationData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf" /> class.
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeData.Enabled">
             <summary>
             Gets or Sets Enabled
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.ToString">
=======
        <member name="P:IO.Swagger.Model.HandTeachingModeData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeData.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeData.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.Equals(IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf)">
             <summary>
             Returns true if RobotMoveToActionPointOrientationAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointOrientationAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeData.Equals(IO.Swagger.Model.HandTeachingModeData)">
             <summary>
             Returns true if HandTeachingModeData instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientationAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.HandTeachingModeData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.CalibrateRobotRequestArgs">
             <summary>
             Args(robot_id: str, camera_id: Union[str, NoneType] = None, move_to_calibration_pose: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.#ctor">
=======
        <member name="T:IO.Swagger.Model.UpdateLogicItemResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemResponse.Id">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequestArgs" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.#ctor(System.String,System.Boolean,System.String)">
=======
        <member name="P:IO.Swagger.Model.UpdateLogicItemResponse.Messages">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateRobotRequestArgs" /> class.
             </summary>
             <param name="cameraId">cameraId.</param>
             <param name="moveToCalibrationPose">moveToCalibrationPose (default to true).</param>
             <param name="robotId">robotId (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CalibrateRobotRequestArgs.CameraId">
=======
        <member name="P:IO.Swagger.Model.UpdateLogicItemResponse.Response">
>>>>>>> devel
             <summary>
             Gets or Sets CameraId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CalibrateRobotRequestArgs.MoveToCalibrationPose">
=======
        <member name="P:IO.Swagger.Model.UpdateLogicItemResponse.Result">
>>>>>>> devel
             <summary>
             Gets or Sets MoveToCalibrationPose
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.CalibrateRobotRequestArgs.RobotId">
=======
        <member name="P:IO.Swagger.Model.UpdateLogicItemResponse.Data">
>>>>>>> devel
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.ToString">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.ToJson">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.Equals(IO.Swagger.Model.CalibrateRobotRequestArgs)">
             <summary>
             Returns true if CalibrateRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CalibrateRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.Equals(IO.Swagger.Model.UpdateLogicItemResponse)">
             <summary>
             Returns true if UpdateLogicItemResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateLogicItemResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.CalibrateRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.SaveProjectRequest">
=======
        <member name="T:IO.Swagger.Model.SaveSceneRequest">
>>>>>>> devel
             <summary>
             Request(id: int)
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveProjectRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveProjectRequest" /> class.
=======
        <member name="M:IO.Swagger.Model.SaveSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SaveSceneRequest" /> class.
>>>>>>> devel
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SaveProjectRequest.Id">
=======
        <member name="P:IO.Swagger.Model.SaveSceneRequest.Id">
>>>>>>> devel
             <summary>
             Gets or Sets Id
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SaveProjectRequest.Request">
=======
        <member name="P:IO.Swagger.Model.SaveSceneRequest.Request">
>>>>>>> devel
             <summary>
             Gets or Sets Request
             </summary>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.SaveProjectRequest.Data">
=======
        <member name="P:IO.Swagger.Model.SaveSceneRequest.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveProjectRequest.ToString">
=======
        <member name="M:IO.Swagger.Model.SaveSceneRequest.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveProjectRequest.ToJson">
=======
        <member name="M:IO.Swagger.Model.SaveSceneRequest.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveProjectRequest.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.SaveSceneRequest.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveProjectRequest.Equals(IO.Swagger.Model.SaveProjectRequest)">
             <summary>
             Returns true if SaveProjectRequest instances are equal
             </summary>
             <param name="input">Instance of SaveProjectRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SaveProjectRequest.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.SaveSceneRequest.Equals(IO.Swagger.Model.SaveSceneRequest)">
             <summary>
             Returns true if SaveSceneRequest instances are equal
             </summary>
             <param name="input">Instance of SaveSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SaveSceneRequest.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.SaveProjectRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.SaveSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.PackageChangedAllOf">
             <summary>
             PackageChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.#ctor(IO.Swagger.Model.PackageSummary)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageChangedAllOf" /> class.
=======
        <member name="T:IO.Swagger.Model.ActionChanged">
             <summary>
             ActionChanged(data: arcor2.data.common.BareAction)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ActionChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionChanged.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
>>>>>>> devel
             </summary>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.PackageChangedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.ToString">
=======
        <member name="F:IO.Swagger.Model.ActionChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionChanged.ChangeType">
>>>>>>> devel
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionChanged.#ctor">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionChanged" /> class.
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionChanged.#ctor(System.Nullable{IO.Swagger.Model.ActionChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.BareAction)">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.Equals(IO.Swagger.Model.PackageChangedAllOf)">
             <summary>
             Returns true if PackageChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of PackageChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.GetHashCode">
=======
        <member name="P:IO.Swagger.Model.ActionChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionChanged.ParentId">
>>>>>>> devel
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.PackageChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="P:IO.Swagger.Model.ActionChanged.Data">
>>>>>>> devel
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionChanged.ToString">
             <summary>
<<<<<<< HEAD
             Robot meta that could be extracted without creating an instance.
=======
             Returns the string presentation of the object
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChanged.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChanged.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChanged.Equals(IO.Swagger.Model.ActionChanged)">
             <summary>
             Returns true if ActionChanged instances are equal
             </summary>
             <param name="input">Instance of ActionChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChanged.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CameraColorParametersRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.camera.CameraColorParameters.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CameraColorParametersRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.Equals(IO.Swagger.Model.CameraColorParametersRequest)">
             <summary>
             Returns true if CameraColorParametersRequest instances are equal
             </summary>
             <param name="input">Instance of CameraColorParametersRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.UploadPackageResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageResponse" /> class.
=======
        <member name="T:IO.Swagger.Model.Orientation">
             <summary>
             Orientation(x: float = 0.0, y: float = 0.0, z: float = 0.0, w: float = 1.0)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Orientation.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Orientation" /> class.
             </summary>
             <param name="w">w (default to 1.0M).</param>
             <param name="x">x (default to 0.0M).</param>
             <param name="y">y (default to 0.0M).</param>
             <param name="z">z (default to 0.0M).</param>
            </member>
        <member name="P:IO.Swagger.Model.Orientation.W">
             <summary>
             Gets or Sets W
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Orientation.X">
             <summary>
             Gets or Sets X
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Orientation.Y">
             <summary>
             Gets or Sets Y
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Orientation.Z">
             <summary>
             Gets or Sets Z
>>>>>>> devel
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UploadPackageResponse.Id">
             <summary>
             Gets or Sets Id
=======
        <member name="M:IO.Swagger.Model.Orientation.ToString">
             <summary>
             Returns the string presentation of the object
>>>>>>> devel
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UploadPackageResponse.Messages">
             <summary>
             Gets or Sets Messages
=======
        <member name="M:IO.Swagger.Model.Orientation.ToJson">
             <summary>
             Returns the JSON string presentation of the object
>>>>>>> devel
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UploadPackageResponse.Response">
             <summary>
             Gets or Sets Response
=======
        <member name="M:IO.Swagger.Model.Orientation.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
>>>>>>> devel
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UploadPackageResponse.Result">
             <summary>
             Gets or Sets Result
=======
        <member name="M:IO.Swagger.Model.Orientation.Equals(IO.Swagger.Model.Orientation)">
             <summary>
             Returns true if Orientation instances are equal
>>>>>>> devel
             </summary>
             <param name="input">Instance of Orientation to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="P:IO.Swagger.Model.UploadPackageResponse.Data">
             <summary>
             Gets or Sets Data
=======
        <member name="M:IO.Swagger.Model.Orientation.GetHashCode">
             <summary>
             Gets the hash code
>>>>>>> devel
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UploadPackageResponse.ToString">
=======
        <member name="M:IO.Swagger.Model.Orientation.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ActionStateAfterAllOf">
             <summary>
             ActionStateAfterAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfterAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.#ctor(IO.Swagger.Model.ActionStateAfterData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateAfterAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateAfterAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.ToString">
>>>>>>> devel
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UploadPackageResponse.ToJson">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.ToJson">
>>>>>>> devel
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UploadPackageResponse.Equals(System.Object)">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.Equals(System.Object)">
>>>>>>> devel
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UploadPackageResponse.Equals(IO.Swagger.Model.UploadPackageResponse)">
             <summary>
             Returns true if UploadPackageResponse instances are equal
             </summary>
             <param name="input">Instance of UploadPackageResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageResponse.GetHashCode">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.Equals(IO.Swagger.Model.ActionStateAfterAllOf)">
             <summary>
             Returns true if ActionStateAfterAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionStateAfterAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.GetHashCode">
>>>>>>> devel
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.UploadPackageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
=======
        <member name="M:IO.Swagger.Model.ActionStateAfterAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
>>>>>>> devel
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
<<<<<<< HEAD
        <member name="T:IO.Swagger.Model.DeleteProjectRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteProjectRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.DeleteProjectRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.DeleteProjectRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
=======
        <member name="T:IO.Swagger.Client.GlobalConfiguration">
>>>>>>> devel
             <summary>
             <see cref="T:IO.Swagger.Client.GlobalConfiguration" /> provides a compile-time extension point for globally configuring
             API Clients.
             </summary>
             <remarks>
             A customized implementation via partial class may reside in another file and may
             be excluded from automatic generation via a .openapi-generator-ignore file.
             </remarks>
            </member>
        <member name="T:IO.Swagger.Client.ExceptionFactory">
             <summary>
             A delegate to ExceptionFactory method
             </summary>
             <param name="methodName">Method name</param>
             <param name="response">Response</param>
             <returns>Exceptions</returns>
            </member>
        <member name="T:IO.Swagger.Client.ApiException">
             <summary>
             API Exception
             </summary>
            </member>
        <member name="P:IO.Swagger.Client.ApiException.ErrorCode">
             <summary>
             Gets or sets the error code (HTTP status code)
             </summary>
             <value>The error code (HTTP status code).</value>
            </member>
        <member name="P:IO.Swagger.Client.ApiException.ErrorContent">
             <summary>
             Gets or sets the error content (body json object)
             </summary>
             <value>The error content (Http response body).</value>
            </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException" /> class.
             </summary>
             <param name="errorCode">HTTP status code.</param>
             <param name="message">Error message.</param>
            </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String,System.dynamic)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException" /> class.
             </summary>
             <param name="errorCode">HTTP status code.</param>
             <param name="message">Error message.</param>
             <param name="errorContent">Error content.</param>
            </member>
        <member name="T:IO.Swagger.Client.OpenAPIDateConverter">
             <summary>
             Formatter for 'date' openapi formats ss defined by full-date - RFC3339
             see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#data-types
             </summary>
            </member>
        <member name="M:IO.Swagger.Client.OpenAPIDateConverter.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.OpenAPIDateConverter" /> class.
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf">
             <summary>
             RobotMoveToActionPointJointsAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.#ctor(IO.Swagger.Model.RobotMoveToActionPointJointsData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.Equals(IO.Swagger.Model.RobotMoveToActionPointJointsAllOf)">
             <summary>
             Returns true if RobotMoveToActionPointJointsAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointJointsAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CylinderAllOf">
             <summary>
             CylinderAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CylinderAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.#ctor(System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CylinderAllOf" /> class.
             </summary>
             <param name="height">height (required).</param>
             <param name="radius">radius (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CylinderAllOf.Height">
             <summary>
             Gets or Sets Height
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CylinderAllOf.Radius">
             <summary>
             Gets or Sets Radius
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.Equals(IO.Swagger.Model.CylinderAllOf)">
             <summary>
             Returns true if CylinderAllOf instances are equal
             </summary>
             <param name="input">Instance of CylinderAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CylinderAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetEndEffectorPoseRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.GetEndEffectorPose.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.GetEndEffectorPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.Equals(IO.Swagger.Model.GetEndEffectorPoseRequest)">
             <summary>
             Returns true if GetEndEffectorPoseRequest instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorPoseRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetEndEffectorPoseResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2.data.common.Pose, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.Pose)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.Equals(IO.Swagger.Model.GetEndEffectorPoseResponse)">
             <summary>
             Returns true if GetEndEffectorPoseResponse instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorPoseResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.MoveToActionPointRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.robot.MoveToActionPoint.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.MoveToActionPointRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.Equals(IO.Swagger.Model.MoveToActionPointRequest)">
             <summary>
             Returns true if MoveToActionPointRequest instances are equal
             </summary>
             <param name="input">Instance of MoveToActionPointRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ShowMainScreenData">
             <summary>
             Data(what: arcor2_arserver_data.events.common.ShowMainScreen.Data.WhatEnum, highlight: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ShowMainScreenData.WhatEnum">
             <summary>
             Defines What
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ShowMainScreenData.WhatEnum.ScenesList">
             <summary>
             Enum ScenesList for value: ScenesList
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ShowMainScreenData.WhatEnum.ProjectsList">
             <summary>
             Enum ProjectsList for value: ProjectsList
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ShowMainScreenData.WhatEnum.PackagesList">
             <summary>
             Enum PackagesList for value: PackagesList
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ShowMainScreenData.What">
             <summary>
             Gets or Sets What
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreenData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenData.#ctor(System.String,IO.Swagger.Model.ShowMainScreenData.WhatEnum)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreenData" /> class.
             </summary>
             <param name="highlight">highlight.</param>
             <param name="what">what (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ShowMainScreenData.Highlight">
             <summary>
             Gets or Sets Highlight
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenData.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenData.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenData.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenData.Equals(IO.Swagger.Model.ShowMainScreenData)">
             <summary>
             Returns true if ShowMainScreenData instances are equal
             </summary>
             <param name="input">Instance of ShowMainScreenData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenData.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreenData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UploadPackageRequestArgs">
             <summary>
             Args(id: str, data: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequestArgs" /> class.
             </summary>
             <param name="data">Base64 encoded content of the zip file. (required).</param>
             <param name="id">Id of the execution package. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageRequestArgs.Data">
             <summary>
             Base64 encoded content of the zip file.
             </summary>
             <value>Base64 encoded content of the zip file.</value>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageRequestArgs.Id">
             <summary>
             Id of the execution package.
             </summary>
             <value>Id of the execution package.</value>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.Equals(IO.Swagger.Model.UploadPackageRequestArgs)">
             <summary>
             Returns true if UploadPackageRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UploadPackageRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.SystemInfoResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None, data: Union[arcor2_arserver_data.rpc.common.SystemInfo.Response.Data, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,IO.Swagger.Model.SystemInfoResponseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SystemInfoResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SystemInfoResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponse.Equals(IO.Swagger.Model.SystemInfoResponse)">
             <summary>
             Returns true if SystemInfoResponse instances are equal
             </summary>
             <param name="input">Instance of SystemInfoResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.SystemInfoResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameActionPointJointsRequestAllOf">
             <summary>
             RenameActionPointJointsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.#ctor(IO.Swagger.Model.RenameActionPointJointsRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointJointsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.Equals(IO.Swagger.Model.RenameActionPointJointsRequestAllOf)">
             <summary>
             Returns true if RenameActionPointJointsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointJointsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointJointsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.PackageChanged">
             <summary>
             PackageChanged(data: arcor2_execution_data.common.PackageSummary)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.PackageChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageChanged.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.PackageChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.#ctor(System.Nullable{IO.Swagger.Model.PackageChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.PackageSummary)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageChanged.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.Equals(IO.Swagger.Model.PackageChanged)">
             <summary>
             Returns true if PackageChanged instances are equal
             </summary>
             <param name="input">Instance of PackageChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddLogicItemRequestArgs">
             <summary>
             Args(start: str, end: str, condition: Union[arcor2.data.common.ProjectLogicIf, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.#ctor(IO.Swagger.Model.ProjectLogicIf,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddLogicItemRequestArgs" /> class.
             </summary>
             <param name="condition">condition.</param>
             <param name="end">end (required).</param>
             <param name="start">start (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequestArgs.Condition">
             <summary>
             Gets or Sets Condition
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequestArgs.End">
             <summary>
             Gets or Sets End
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddLogicItemRequestArgs.Start">
             <summary>
             Gets or Sets Start
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.Equals(IO.Swagger.Model.AddLogicItemRequestArgs)">
             <summary>
             Returns true if AddLogicItemRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddLogicItemRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddLogicItemRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateLogicItemResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateLogicItemResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateLogicItemResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.Equals(IO.Swagger.Model.UpdateLogicItemResponse)">
             <summary>
             Returns true if UpdateLogicItemResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateLogicItemResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateLogicItemResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetGrippersRequestArgs">
             <summary>
             Args(robot_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetGrippersRequestArgs" /> class.
             </summary>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetGrippersRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.Equals(IO.Swagger.Model.GetGrippersRequestArgs)">
             <summary>
             Returns true if GetGrippersRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetGrippersRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetGrippersRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.MoveToPoseRequestAllOf">
             <summary>
             MoveToPoseRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.#ctor(IO.Swagger.Model.MoveToPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToPoseRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToPoseRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.Equals(IO.Swagger.Model.MoveToPoseRequestAllOf)">
             <summary>
             Returns true if MoveToPoseRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of MoveToPoseRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToPoseRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf">
             <summary>
             GetEndEffectorPoseRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.#ctor(IO.Swagger.Model.GetEndEffectorPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.Equals(IO.Swagger.Model.GetEndEffectorPoseRequestAllOf)">
             <summary>
             Returns true if GetEndEffectorPoseRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetEndEffectorPoseRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetEndEffectorPoseRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointOrientationUsingRobot.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.Equals(IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest)">
             <summary>
             Returns true if UpdateActionPointOrientationUsingRobotRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationUsingRobotRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToPoseAllOf">
             <summary>
             RobotMoveToPoseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.#ctor(IO.Swagger.Model.RobotMoveToPoseData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToPoseAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToPoseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.Equals(IO.Swagger.Model.RobotMoveToPoseAllOf)">
             <summary>
             Returns true if RobotMoveToPoseAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToPoseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToPoseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateConstantRequestAllOf">
             <summary>
             UpdateConstantRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.#ctor(IO.Swagger.Model.UpdateConstantRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateConstantRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateConstantRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.Equals(IO.Swagger.Model.UpdateConstantRequestAllOf)">
             <summary>
             Returns true if UpdateConstantRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateConstantRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateConstantRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameSceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.Equals(IO.Swagger.Model.RenameSceneResponse)">
             <summary>
             Returns true if RenameSceneResponse instances are equal
             </summary>
             <param name="input">Instance of RenameSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.StopSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.StopSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StopSceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneResponse.Equals(IO.Swagger.Model.StopSceneResponse)">
             <summary>
             Returns true if StopSceneResponse instances are equal
             </summary>
             <param name="input">Instance of StopSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionRequestArgs">
             <summary>
             Args(action_id: str, parameters: Union[List[arcor2.data.common.ActionParameter], NoneType] = None, flows: Union[List[arcor2.data.common.Flow], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.#ctor(System.String,System.Collections.Generic.List{IO.Swagger.Model.Flow},System.Collections.Generic.List{IO.Swagger.Model.ActionParameter})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionRequestArgs" /> class.
             </summary>
             <param name="actionId">actionId (required).</param>
             <param name="flows">flows.</param>
             <param name="parameters">parameters.</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionRequestArgs.ActionId">
             <summary>
             Gets or Sets ActionId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionRequestArgs.Flows">
             <summary>
             Gets or Sets Flows
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionRequestArgs.Parameters">
             <summary>
             Gets or Sets Parameters
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.Equals(IO.Swagger.Model.UpdateActionRequestArgs)">
             <summary>
             Returns true if UpdateActionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UploadPackageRequestAllOf">
             <summary>
             UploadPackageRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.#ctor(IO.Swagger.Model.UploadPackageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UploadPackageRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UploadPackageRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.Equals(IO.Swagger.Model.UploadPackageRequestAllOf)">
             <summary>
             Returns true if UploadPackageRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UploadPackageRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UploadPackageRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointPositionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.Equals(IO.Swagger.Model.UpdateActionPointPositionResponse)">
             <summary>
             Returns true if UpdateActionPointPositionResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointPositionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RunPackageRequestArgs">
             <summary>
             Args(id: str, cleanup_after_run: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.#ctor(System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RunPackageRequestArgs" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="cleanupAfterRun">cleanupAfterRun (default to true).</param>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageRequestArgs.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RunPackageRequestArgs.CleanupAfterRun">
             <summary>
             Gets or Sets CleanupAfterRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.Equals(IO.Swagger.Model.RunPackageRequestArgs)">
             <summary>
             Returns true if RunPackageRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RunPackageRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RunPackageRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.StopRobotRequestArgs">
             <summary>
             Args(robot_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StopRobotRequestArgs" /> class.
             </summary>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.StopRobotRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.Equals(IO.Swagger.Model.StopRobotRequestArgs)">
             <summary>
             Returns true if StopRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of StopRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.StopRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetCameraPoseRequestArgs">
             <summary>
             Args(camera_parameters: arcor2.data.camera.CameraParameters, image: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.#ctor(IO.Swagger.Model.CameraParameters,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequestArgs" /> class.
             </summary>
             <param name="cameraParameters">cameraParameters (required).</param>
             <param name="image">Base64 encoded image. (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetCameraPoseRequestArgs.CameraParameters">
             <summary>
             Gets or Sets CameraParameters
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetCameraPoseRequestArgs.Image">
             <summary>
             Base64 encoded image.
             </summary>
             <value>Base64 encoded image.</value>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.Equals(IO.Swagger.Model.GetCameraPoseRequestArgs)">
             <summary>
             Returns true if GetCameraPoseRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetCameraPoseRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ObjectTypeMeta">
             <summary>
             Metadata about object type, as it is used in server API.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectTypeMeta" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.#ctor(System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,IO.Swagger.Model.ObjectModel,System.String,System.Collections.Generic.List{IO.Swagger.Model.ParameterMeta},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ObjectTypeMeta" /> class.
             </summary>
             <param name="_abstract">_abstract (default to false).</param>
             <param name="_base">_base (default to "").</param>
             <param name="builtIn">builtIn (default to false).</param>
             <param name="description">description (default to "").</param>
             <param name="disabled">disabled (default to false).</param>
             <param name="hasPose">hasPose (default to false).</param>
             <param name="needsParentType">needsParentType.</param>
             <param name="objectModel">objectModel.</param>
             <param name="problem">problem.</param>
             <param name="settings">settings.</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Abstract">
             <summary>
             Gets or Sets Abstract
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Base">
             <summary>
             Gets or Sets Base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.BuiltIn">
             <summary>
             Gets or Sets BuiltIn
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Disabled">
             <summary>
             Gets or Sets Disabled
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.HasPose">
             <summary>
             Gets or Sets HasPose
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.NeedsParentType">
             <summary>
             Gets or Sets NeedsParentType
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.ObjectModel">
             <summary>
             Gets or Sets ObjectModel
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Problem">
             <summary>
             Gets or Sets Problem
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Settings">
             <summary>
             Gets or Sets Settings
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ObjectTypeMeta.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.Equals(IO.Swagger.Model.ObjectTypeMeta)">
             <summary>
             Returns true if ObjectTypeMeta instances are equal
             </summary>
             <param name="input">Instance of ObjectTypeMeta to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ObjectTypeMeta.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.OrientationChangedAllOf">
             <summary>
             OrientationChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OrientationChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.#ctor(IO.Swagger.Model.NamedOrientation)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OrientationChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OrientationChangedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.Equals(IO.Swagger.Model.OrientationChangedAllOf)">
             <summary>
             Returns true if OrientationChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of OrientationChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.OrientationChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddObjectToSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddObjectToSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddObjectToSceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.Equals(IO.Swagger.Model.AddObjectToSceneResponse)">
             <summary>
             Returns true if AddObjectToSceneResponse instances are equal
             </summary>
             <param name="input">Instance of AddObjectToSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddObjectToSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.HandTeachingModeRequestArgs">
             <summary>
             Args(robot_id: str, enable: bool)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.#ctor(System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeRequestArgs" /> class.
             </summary>
             <param name="enable">enable (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeRequestArgs.Enable">
             <summary>
             Gets or Sets Enable
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.Equals(IO.Swagger.Model.HandTeachingModeRequestArgs)">
             <summary>
             Returns true if HandTeachingModeRequestArgs instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.FocusObjectDoneRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.IdArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectDoneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.IdArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectDoneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectDoneRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.Equals(IO.Swagger.Model.FocusObjectDoneRequest)">
             <summary>
             Returns true if FocusObjectDoneRequest instances are equal
             </summary>
             <param name="input">Instance of FocusObjectDoneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectDoneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetActionsRequest">
             <summary>
             Request(id: int, args: arcor2.data.rpc.common.TypeArgs)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.TypeArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetActionsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.GetActionsRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.Equals(IO.Swagger.Model.GetActionsRequest)">
             <summary>
             Returns true if GetActionsRequest instances are equal
             </summary>
             <param name="input">Instance of GetActionsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetActionsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RemoveLogicItemRequestArgs">
             <summary>
             Args(logic_item_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveLogicItemRequestArgs" /> class.
             </summary>
             <param name="logicItemId">logicItemId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveLogicItemRequestArgs.LogicItemId">
             <summary>
             Gets or Sets LogicItemId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.Equals(IO.Swagger.Model.RemoveLogicItemRequestArgs)">
             <summary>
             Returns true if RemoveLogicItemRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RemoveLogicItemRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveLogicItemRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.StartSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StartSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.StartSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.StartSceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.Equals(IO.Swagger.Model.StartSceneResponse)">
             <summary>
             Returns true if StartSceneResponse instances are equal
             </summary>
             <param name="input">Instance of StartSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.StartSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CalibrateCameraResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CalibrateCameraResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CalibrateCameraResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.Equals(IO.Swagger.Model.CalibrateCameraResponse)">
             <summary>
             Returns true if CalibrateCameraResponse instances are equal
             </summary>
             <param name="input">Instance of CalibrateCameraResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CalibrateCameraResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddActionPointOrientationRequestArgs">
             <summary>
             Args(action_point_id: str, orientation: arcor2.data.common.Orientation, name: str = 'default')
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.#ctor(System.String,System.String,IO.Swagger.Model.Orientation)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="name">name (default to "default").</param>
             <param name="orientation">orientation (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationRequestArgs.Orientation">
             <summary>
             Gets or Sets Orientation
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.Equals(IO.Swagger.Model.AddActionPointOrientationRequestArgs)">
             <summary>
             Returns true if AddActionPointOrientationRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CloseSceneResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseSceneResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CloseSceneResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.Equals(IO.Swagger.Model.CloseSceneResponse)">
             <summary>
             Returns true if CloseSceneResponse instances are equal
             </summary>
             <param name="input">Instance of CloseSceneResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseSceneResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CloseProjectRequestArgs">
             <summary>
             Args(force: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.#ctor(System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CloseProjectRequestArgs" /> class.
             </summary>
             <param name="force">force (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.CloseProjectRequestArgs.Force">
             <summary>
             Gets or Sets Force
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.Equals(IO.Swagger.Model.CloseProjectRequestArgs)">
             <summary>
             Returns true if CloseProjectRequestArgs instances are equal
             </summary>
             <param name="input">Instance of CloseProjectRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CloseProjectRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ActionStateBeforeAllOf">
             <summary>
             ActionStateBeforeAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBeforeAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.#ctor(IO.Swagger.Model.ActionStateBeforeData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionStateBeforeAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionStateBeforeAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.Equals(IO.Swagger.Model.ActionStateBeforeAllOf)">
             <summary>
             Returns true if ActionStateBeforeAllOf instances are equal
             </summary>
             <param name="input">Instance of ActionStateBeforeAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionStateBeforeAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.PackageMeta">
             <summary>
             PackageMeta(name: str, built: datetime.datetime, executed: Union[datetime.datetime, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageMeta" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.#ctor(System.DateTime,System.DateTime,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.PackageMeta" /> class.
             </summary>
             <param name="built">built (required).</param>
             <param name="executed">executed.</param>
             <param name="name">name (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.PackageMeta.Built">
             <summary>
             Gets or Sets Built
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageMeta.Executed">
             <summary>
             Gets or Sets Executed
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.PackageMeta.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.Equals(IO.Swagger.Model.PackageMeta)">
             <summary>
             Returns true if PackageMeta instances are equal
             </summary>
             <param name="input">Instance of PackageMeta to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.PackageMeta.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ActionResultData">
             <summary>
             Data(action_id: str, results: Union[List[str], NoneType] = None, error: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResultData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultData.#ctor(System.String,System.String,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionResultData" /> class.
             </summary>
             <param name="actionId">actionId (required).</param>
             <param name="error">error.</param>
             <param name="results">JSON-encoded results of the action..</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionResultData.ActionId">
             <summary>
             Gets or Sets ActionId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionResultData.Error">
             <summary>
             Gets or Sets Error
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionResultData.Results">
             <summary>
             JSON-encoded results of the action.
             </summary>
             <value>JSON-encoded results of the action.</value>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultData.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultData.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultData.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultData.Equals(IO.Swagger.Model.ActionResultData)">
             <summary>
             Returns true if ActionResultData instances are equal
             </summary>
             <param name="input">Instance of ActionResultData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultData.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionResultData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf">
             <summary>
             RobotMoveToActionPointJointsDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.#ctor(System.String,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf" /> class.
             </summary>
             <param name="jointsId">jointsId (required).</param>
             <param name="message">message.</param>
             <param name="safe">safe (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.JointsId">
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.Equals(IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf)">
             <summary>
             Returns true if RobotMoveToActionPointJointsDataAllOf instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointJointsDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointJointsDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CameraColorParametersResponseAllOf">
             <summary>
             CameraColorParametersResponseAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.#ctor(IO.Swagger.Model.CameraParameters)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorParametersResponseAllOf" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorParametersResponseAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.Equals(IO.Swagger.Model.CameraColorParametersResponseAllOf)">
             <summary>
             Returns true if CameraColorParametersResponseAllOf instances are equal
             </summary>
             <param name="input">Instance of CameraColorParametersResponseAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorParametersResponseAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.MoveToJointsRequestAllOf">
             <summary>
             MoveToJointsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.#ctor(IO.Swagger.Model.MoveToJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToJointsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToJointsRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.Equals(IO.Swagger.Model.MoveToJointsRequestAllOf)">
             <summary>
             Returns true if MoveToJointsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of MoveToJointsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToJointsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RegisterForRobotEventRequestArgs">
             <summary>
             Args(robot_id: str, what: arcor2_arserver_data.rpc.robot.RegisterForRobotEvent.Request.Args.RegisterEnum, send: bool)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RegisterForRobotEventRequestArgs.WhatEnum">
             <summary>
             Defines What
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RegisterForRobotEventRequestArgs.WhatEnum.Eefpose">
             <summary>
             Enum Eefpose for value: eef_pose
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RegisterForRobotEventRequestArgs.WhatEnum.Joints">
             <summary>
             Enum Joints for value: joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequestArgs.What">
             <summary>
             Gets or Sets What
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.#ctor(System.String,System.Boolean,IO.Swagger.Model.RegisterForRobotEventRequestArgs.WhatEnum)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequestArgs" /> class.
             </summary>
             <param name="robotId">robotId (required).</param>
             <param name="send">send (required).</param>
             <param name="what">what (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequestArgs.Send">
             <summary>
             Gets or Sets Send
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.Equals(IO.Swagger.Model.RegisterForRobotEventRequestArgs)">
             <summary>
             Returns true if RegisterForRobotEventRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RegisterForRobotEventRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddActionPointRequestArgs">
             <summary>
             Args(name: str, position: arcor2.data.common.Position, parent: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.#ctor(System.String,System.String,IO.Swagger.Model.Position)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointRequestArgs" /> class.
             </summary>
             <param name="name">name (required).</param>
             <param name="parent">parent.</param>
             <param name="position">position (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointRequestArgs.Parent">
             <summary>
             Gets or Sets Parent
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointRequestArgs.Position">
             <summary>
             Gets or Sets Position
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.Equals(IO.Swagger.Model.AddActionPointRequestArgs)">
             <summary>
             Returns true if AddActionPointRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddActionPointRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf">
             <summary>
             RenameActionPointOrientationRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.#ctor(IO.Swagger.Model.RenameActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.Equals(IO.Swagger.Model.RenameActionPointOrientationRequestAllOf)">
             <summary>
             Returns true if RenameActionPointOrientationRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointOrientationRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.SceneStateData">
             <summary>
             Data(state: arcor2_arserver_data.events.scene.SceneState.Data.StateEnum, message: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.SceneStateData.StateEnum">
             <summary>
             Defines State
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneStateData.StateEnum.Stopped">
             <summary>
             Enum Stopped for value: stopped
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneStateData.StateEnum.Starting">
             <summary>
             Enum Starting for value: starting
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneStateData.StateEnum.Started">
             <summary>
             Enum Started for value: started
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.SceneStateData.StateEnum.Stopping">
             <summary>
             Enum Stopping for value: stopping
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.SceneStateData.State">
             <summary>
             Gets or Sets State
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneStateData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.#ctor(System.String,IO.Swagger.Model.SceneStateData.StateEnum)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneStateData" /> class.
             </summary>
             <param name="message">message.</param>
             <param name="state">state (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneStateData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.Equals(IO.Swagger.Model.SceneStateData)">
             <summary>
             Returns true if SceneStateData instances are equal
             </summary>
             <param name="input">Instance of SceneStateData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneStateData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.Orientation">
             <summary>
             Orientation(x: float = 0.0, y: float = 0.0, z: float = 0.0, w: float = 1.0)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Orientation.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Orientation" /> class.
             </summary>
             <param name="w">w (default to 1.0M).</param>
             <param name="x">x (default to 0.0M).</param>
             <param name="y">y (default to 0.0M).</param>
             <param name="z">z (default to 0.0M).</param>
            </member>
        <member name="P:IO.Swagger.Model.Orientation.W">
             <summary>
             Gets or Sets W
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Orientation.X">
             <summary>
             Gets or Sets X
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Orientation.Y">
             <summary>
             Gets or Sets Y
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Orientation.Z">
             <summary>
             Gets or Sets Z
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Orientation.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.Orientation.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.Orientation.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Orientation.Equals(IO.Swagger.Model.Orientation)">
             <summary>
             Returns true if Orientation instances are equal
             </summary>
             <param name="input">Instance of Orientation to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Orientation.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.Orientation.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.MoveToActionPointRequestArgs">
             <summary>
             Args(robot_id: str, speed: float, end_effector_id: Union[str, NoneType] = None, orientation_id: Union[str, NoneType] = None, joints_id: Union[str, NoneType] = None, safe: bool = True)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequestArgs" /> class.
             </summary>
             <param name="endEffectorId">endEffectorId.</param>
             <param name="jointsId">jointsId.</param>
             <param name="orientationId">orientationId.</param>
             <param name="robotId">robotId (required).</param>
             <param name="safe">safe (default to true).</param>
             <param name="speed">speed (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.EndEffectorId">
             <summary>
             Gets or Sets EndEffectorId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.JointsId">
             <summary>
             Gets or Sets JointsId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.Safe">
             <summary>
             Gets or Sets Safe
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestArgs.Speed">
             <summary>
             Gets or Sets Speed
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.Equals(IO.Swagger.Model.MoveToActionPointRequestArgs)">
             <summary>
             Returns true if MoveToActionPointRequestArgs instances are equal
             </summary>
             <param name="input">Instance of MoveToActionPointRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameProjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.Equals(IO.Swagger.Model.RenameProjectResponse)">
             <summary>
             Returns true if RenameProjectResponse instances are equal
             </summary>
             <param name="input">Instance of RenameProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameProjectRequestAllOf">
             <summary>
             RenameProjectRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.#ctor(IO.Swagger.Model.RenameProjectRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameProjectRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameProjectRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.Equals(IO.Swagger.Model.RenameProjectRequestAllOf)">
             <summary>
             Returns true if RenameProjectRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameProjectRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameProjectRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetCameraPoseRequestAllOf">
             <summary>
             GetCameraPoseRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.#ctor(IO.Swagger.Model.GetCameraPoseRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetCameraPoseRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetCameraPoseRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.Equals(IO.Swagger.Model.GetCameraPoseRequestAllOf)">
             <summary>
             Returns true if GetCameraPoseRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of GetCameraPoseRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetCameraPoseRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.UpdateActionPointJoints.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.UpdateActionPointJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequest.Equals(IO.Swagger.Model.UpdateActionPointJointsRequest)">
             <summary>
             Returns true if UpdateActionPointJointsRequest instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ShowMainScreen">
             <summary>
             ShowMainScreen(data: arcor2_arserver_data.events.common.ShowMainScreen.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ShowMainScreen.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreen.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreen" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreen.#ctor(System.Nullable{IO.Swagger.Model.ShowMainScreen.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ShowMainScreenData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShowMainScreen" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ShowMainScreen.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ShowMainScreen.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ShowMainScreen.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreen.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreen.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreen.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreen.Equals(IO.Swagger.Model.ShowMainScreen)">
             <summary>
             Returns true if ShowMainScreen instances are equal
             </summary>
             <param name="input">Instance of ShowMainScreen to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreen.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ShowMainScreen.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ProjectExceptionData">
             <summary>
             Data(message: str, type: str, handled: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectExceptionData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.#ctor(System.Boolean,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectExceptionData" /> class.
             </summary>
             <param name="handled">handled (default to false).</param>
             <param name="message">message (required).</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectExceptionData.Handled">
             <summary>
             Gets or Sets Handled
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectExceptionData.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectExceptionData.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.Equals(IO.Swagger.Model.ProjectExceptionData)">
             <summary>
             Returns true if ProjectExceptionData instances are equal
             </summary>
             <param name="input">Instance of ProjectExceptionData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectExceptionData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs">
             <summary>
             Args(orientation_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs" /> class.
             </summary>
             <param name="orientationId">orientationId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.OrientationId">
             <summary>
             Gets or Sets OrientationId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.Equals(IO.Swagger.Model.RemoveActionPointOrientationRequestArgs)">
             <summary>
             Returns true if RemoveActionPointOrientationRequestArgs instances are equal
             </summary>
             <param name="input">Instance of RemoveActionPointOrientationRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionPointOrientationRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.Event">
             <summary>
             Event()
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.Event.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Event.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Event.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Event.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.Event.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Event.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Event.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Event" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Event.#ctor(System.Nullable{IO.Swagger.Model.Event.ChangeTypeEnum},System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.Event" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
            </member>
        <member name="P:IO.Swagger.Model.Event._Event">
             <summary>
             Gets or Sets _Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Event.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Event.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.Event.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.Event.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Event.Equals(IO.Swagger.Model.Event)">
             <summary>
             Returns true if Event instances are equal
             </summary>
             <param name="input">Instance of Event to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.Event.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.Event.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.Equals(IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse)">
             <summary>
             Returns true if UpdateActionPointOrientationUsingRobotResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointOrientationUsingRobotResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointOrientationUsingRobotResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.FocusObjectResponseData">
             <summary>
             Data(finished_indexes: List[int])
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectResponseData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.#ctor(System.Collections.Generic.List{System.Int32})">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.FocusObjectResponseData" /> class.
             </summary>
             <param name="finishedIndexes">finishedIndexes (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.FocusObjectResponseData.FinishedIndexes">
             <summary>
             Gets or Sets FinishedIndexes
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.Equals(IO.Swagger.Model.FocusObjectResponseData)">
             <summary>
             Returns true if FocusObjectResponseData instances are equal
             </summary>
             <param name="input">Instance of FocusObjectResponseData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.FocusObjectResponseData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ActionCancelled">
             <summary>
             Used to notify that the action execution was cancelled.
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ActionCancelled.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionCancelled.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionCancelled.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionCancelled.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ActionCancelled.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionCancelled.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelled.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionCancelled" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelled.#ctor(System.Nullable{IO.Swagger.Model.ActionCancelled.ChangeTypeEnum},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ActionCancelled" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ActionCancelled.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionCancelled.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ActionCancelled.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelled.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelled.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelled.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelled.Equals(IO.Swagger.Model.ActionCancelled)">
             <summary>
             Returns true if ActionCancelled instances are equal
             </summary>
             <param name="input">Instance of ActionCancelled to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelled.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ActionCancelled.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RemoveActionResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveActionResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveActionResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.Equals(IO.Swagger.Model.RemoveActionResponse)">
             <summary>
             Returns true if RemoveActionResponse instances are equal
             </summary>
             <param name="input">Instance of RemoveActionResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveActionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ResumePackageRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResumePackageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResumePackageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ResumePackageRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ResumePackageRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ResumePackageRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.Equals(IO.Swagger.Model.ResumePackageRequest)">
             <summary>
             Returns true if ResumePackageRequest instances are equal
             </summary>
             <param name="input">Instance of ResumePackageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ResumePackageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CameraColorImageRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.camera.CameraColorImage.Request.Args)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.CameraColorImageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CameraColorImageRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CameraColorImageRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.Equals(IO.Swagger.Model.CameraColorImageRequest)">
             <summary>
             Returns true if CameraColorImageRequest instances are equal
             </summary>
             <param name="input">Instance of CameraColorImageRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CameraColorImageRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointParentResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointParentResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointParentResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.Equals(IO.Swagger.Model.UpdateActionPointParentResponse)">
             <summary>
             Returns true if UpdateActionPointParentResponse instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointParentResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointParentResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RemoveFromSceneRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.scene.RemoveFromScene.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RemoveFromSceneRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RemoveFromSceneRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RemoveFromSceneRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.Equals(IO.Swagger.Model.RemoveFromSceneRequest)">
             <summary>
             Returns true if RemoveFromSceneRequest instances are equal
             </summary>
             <param name="input">Instance of RemoveFromSceneRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RemoveFromSceneRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ProjectConstantChanged">
             <summary>
             ProjectConstantChanged(data: arcor2.data.common.ProjectConstant)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstantChanged.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstantChanged" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.#ctor(System.Nullable{IO.Swagger.Model.ProjectConstantChanged.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.ProjectConstant)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectConstantChanged" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstantChanged.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstantChanged.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectConstantChanged.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.Equals(IO.Swagger.Model.ProjectConstantChanged)">
             <summary>
             Returns true if ProjectConstantChanged instances are equal
             </summary>
             <param name="input">Instance of ProjectConstantChanged to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectConstantChanged.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.NewObjectTypeRequestAllOf">
             <summary>
             NewObjectTypeRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.#ctor(IO.Swagger.Model.ObjectTypeMeta,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.NewObjectTypeRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.NewObjectTypeRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.Equals(IO.Swagger.Model.NewObjectTypeRequestAllOf)">
             <summary>
             Returns true if NewObjectTypeRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of NewObjectTypeRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.NewObjectTypeRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.CopyProjectResponse">
             <summary>
             Response(id: int = 0, result: bool = True, messages: Union[List[str], NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectResponse" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.#ctor(System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.CopyProjectResponse" /> class.
             </summary>
             <param name="id">id (default to 0).</param>
             <param name="messages">messages.</param>
             <param name="response">response (required).</param>
             <param name="result">result (default to true).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectResponse.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectResponse.Messages">
             <summary>
             Gets or Sets Messages
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectResponse.Response">
             <summary>
             Gets or Sets Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectResponse.Result">
             <summary>
             Gets or Sets Result
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.CopyProjectResponse.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.Equals(IO.Swagger.Model.CopyProjectResponse)">
             <summary>
             Returns true if CopyProjectResponse instances are equal
             </summary>
             <param name="input">Instance of CopyProjectResponse to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.CopyProjectResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointPositionRequestArgs">
             <summary>
             Args(action_point_id: str, new_position: arcor2.data.common.Position)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.#ctor(System.String,IO.Swagger.Model.Position)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointPositionRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="newPosition">newPosition (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.NewPosition">
             <summary>
             Gets or Sets NewPosition
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.Equals(IO.Swagger.Model.UpdateActionPointPositionRequestArgs)">
             <summary>
             Returns true if UpdateActionPointPositionRequestArgs instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointPositionRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointPositionRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddConstantRequestArgs">
             <summary>
             Args(name: str, type: str, value: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddConstantRequestArgs" /> class.
             </summary>
             <param name="name">name (required).</param>
             <param name="type">type (required).</param>
             <param name="value">value (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantRequestArgs.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddConstantRequestArgs.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.Equals(IO.Swagger.Model.AddConstantRequestArgs)">
             <summary>
             Returns true if AddConstantRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddConstantRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddConstantRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RegisterForRobotEventRequestAllOf">
             <summary>
             RegisterForRobotEventRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.#ctor(IO.Swagger.Model.RegisterForRobotEventRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RegisterForRobotEventRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.Equals(IO.Swagger.Model.RegisterForRobotEventRequestAllOf)">
             <summary>
             Returns true if RegisterForRobotEventRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RegisterForRobotEventRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RegisterForRobotEventRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.HandTeachingModeData">
             <summary>
             Data(robot_id: str, enabled: bool)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeData" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.#ctor(System.Boolean,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.HandTeachingModeData" /> class.
             </summary>
             <param name="enabled">enabled (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeData.Enabled">
             <summary>
             Gets or Sets Enabled
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.HandTeachingModeData.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.Equals(IO.Swagger.Model.HandTeachingModeData)">
             <summary>
             Returns true if HandTeachingModeData instances are equal
             </summary>
             <param name="input">Instance of HandTeachingModeData to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.HandTeachingModeData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ListPackagesRequest">
             <summary>
             Request(id: int)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListPackagesRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.#ctor(System.Int32,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListPackagesRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="data">data (default to "").</param>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListPackagesRequest.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.Equals(IO.Swagger.Model.ListPackagesRequest)">
             <summary>
             Returns true if ListPackagesRequest instances are equal
             </summary>
             <param name="input">Instance of ListPackagesRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListPackagesRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientation">
             <summary>
             RobotMoveToActionPointOrientation(data: arcor2_arserver_data.events.robot.RobotMoveToActionPointOrientation.Data)
             </summary>
            </member>
        <member name="T:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum">
             <summary>
             Defines ChangeType
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum.Add">
             <summary>
             Enum Add for value: add
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum.Update">
             <summary>
             Enum Update for value: update
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum.Remove">
             <summary>
             Enum Remove for value: remove
             </summary>
            </member>
        <member name="F:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum.Updatebase">
             <summary>
             Enum Updatebase for value: update_base
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeType">
             <summary>
             Gets or Sets ChangeType
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientation" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.#ctor(System.Nullable{IO.Swagger.Model.RobotMoveToActionPointOrientation.ChangeTypeEnum},System.String,System.String,IO.Swagger.Model.RobotMoveToActionPointOrientationData)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RobotMoveToActionPointOrientation" /> class.
             </summary>
             <param name="changeType">changeType.</param>
             <param name="_event">_event (required).</param>
             <param name="parentId">parentId.</param>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientation.Event">
             <summary>
             Gets or Sets Event
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientation.ParentId">
             <summary>
             Gets or Sets ParentId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RobotMoveToActionPointOrientation.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.Equals(IO.Swagger.Model.RobotMoveToActionPointOrientation)">
             <summary>
             Returns true if RobotMoveToActionPointOrientation instances are equal
             </summary>
             <param name="input">Instance of RobotMoveToActionPointOrientation to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RobotMoveToActionPointOrientation.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ProjectRobotJoints">
             <summary>
             ProjectRobotJoints(id: str, name: str, robot_id: str, joints: List[arcor2.data.common.Joint], is_valid: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectRobotJoints" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.#ctor(System.String,System.Boolean,System.Collections.Generic.List{IO.Swagger.Model.Joint},System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ProjectRobotJoints" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="isValid">isValid (default to false).</param>
             <param name="joints">joints (required).</param>
             <param name="name">name (required).</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.ProjectRobotJoints.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectRobotJoints.IsValid">
             <summary>
             Gets or Sets IsValid
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectRobotJoints.Joints">
             <summary>
             Gets or Sets Joints
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectRobotJoints.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ProjectRobotJoints.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.Equals(IO.Swagger.Model.ProjectRobotJoints)">
             <summary>
             Returns true if ProjectRobotJoints instances are equal
             </summary>
             <param name="input">Instance of ProjectRobotJoints to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ProjectRobotJoints.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameActionPointOrientationRequest">
             <summary>
             Request(id: int, args: arcor2_arserver_data.rpc.project.RenameActionPointOrientation.Request.Args, dry_run: bool = False)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequest" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.#ctor(System.Int32,System.String,IO.Swagger.Model.RenameActionPointOrientationRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionPointOrientationRequest" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="request">request (required).</param>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequest.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequest.Request">
             <summary>
             Gets or Sets Request
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequest.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionPointOrientationRequest.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.Equals(IO.Swagger.Model.RenameActionPointOrientationRequest)">
             <summary>
             Returns true if RenameActionPointOrientationRequest instances are equal
             </summary>
             <param name="input">Instance of RenameActionPointOrientationRequest to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionPointOrientationRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.GetSuctionsRequestArgs">
             <summary>
             Args(robot_id: str)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.GetSuctionsRequestArgs" /> class.
             </summary>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.GetSuctionsRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.Equals(IO.Swagger.Model.GetSuctionsRequestArgs)">
             <summary>
             Returns true if GetSuctionsRequestArgs instances are equal
             </summary>
             <param name="input">Instance of GetSuctionsRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.GetSuctionsRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.SceneObjectChangedAllOf">
             <summary>
             SceneObjectChangedAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectChangedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.#ctor(IO.Swagger.Model.SceneObject)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.SceneObjectChangedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.SceneObjectChangedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.Equals(IO.Swagger.Model.SceneObjectChangedAllOf)">
             <summary>
             Returns true if SceneObjectChangedAllOf instances are equal
             </summary>
             <param name="input">Instance of SceneObjectChangedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.SceneObjectChangedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf">
             <summary>
             UpdateActionPointJointsRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.#ctor(IO.Swagger.Model.UpdateActionPointJointsRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.Equals(IO.Swagger.Model.UpdateActionPointJointsRequestAllOf)">
             <summary>
             Returns true if UpdateActionPointJointsRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of UpdateActionPointJointsRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.UpdateActionPointJointsRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.MoveToActionPointRequestAllOf">
             <summary>
             MoveToActionPointRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.#ctor(IO.Swagger.Model.MoveToActionPointRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.MoveToActionPointRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.MoveToActionPointRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.Equals(IO.Swagger.Model.MoveToActionPointRequestAllOf)">
             <summary>
             Returns true if MoveToActionPointRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of MoveToActionPointRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.MoveToActionPointRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.RenameActionRequestAllOf">
             <summary>
             RenameActionRequestAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequestAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.#ctor(IO.Swagger.Model.RenameActionRequestArgs,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.RenameActionRequestAllOf" /> class.
             </summary>
             <param name="args">args (required).</param>
             <param name="dryRun">dryRun (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionRequestAllOf.Args">
             <summary>
             Gets or Sets Args
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.RenameActionRequestAllOf.DryRun">
             <summary>
             Gets or Sets DryRun
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.Equals(IO.Swagger.Model.RenameActionRequestAllOf)">
             <summary>
             Returns true if RenameActionRequestAllOf instances are equal
             </summary>
             <param name="input">Instance of RenameActionRequestAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.RenameActionRequestAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.OverrideUpdatedAllOf">
             <summary>
             OverrideUpdatedAllOf
             </summary>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.#ctor">
=======
        <member name="T:IO.Swagger.Client.IApiAccessor">
             <summary>
             Represents configuration aspects required to interact with the API endpoints.
             </summary>
            </member>
        <member name="P:IO.Swagger.Client.IApiAccessor.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="M:IO.Swagger.Client.IApiAccessor.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:IO.Swagger.Client.IApiAccessor.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="T:IO.Swagger.Client.IReadableConfiguration">
             <summary>
             Represents a readable-only configuration contract.
             </summary>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.AccessToken">
             <summary>
             Gets the access token.
             </summary>
             <value>Access token.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.ApiKey">
             <summary>
             Gets the API key.
             </summary>
             <value>API key.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.ApiKeyPrefix">
             <summary>
             Gets the API key prefix.
             </summary>
             <value>API key prefix.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.BasePath">
             <summary>
             Gets the base path.
             </summary>
             <value>Base path.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.DateTimeFormat">
             <summary>
             Gets the date time format.
             </summary>
             <value>Date time foramt.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <value>Default header.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.TempFolderPath">
             <summary>
             Gets the temp folder path.
             </summary>
             <value>Temp folder path.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Timeout">
             <summary>
             Gets the HTTP connection timeout (in milliseconds)
             </summary>
             <value>HTTP connection timeout.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.UserAgent">
             <summary>
             Gets the user agent.
             </summary>
             <value>User agent.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Username">
             <summary>
             Gets the username.
             </summary>
             <value>Username.</value>
            </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Password">
             <summary>
             Gets the password.
             </summary>
             <value>Password.</value>
            </member>
        <member name="M:IO.Swagger.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
             <summary>
             Gets the API key with prefix.
             </summary>
             <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
             <returns>API key with prefix.</returns>
            </member>
        <member name="T:IO.Swagger.Client.ApiResponse`1">
             <summary>
             API Response
             </summary>
            </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.StatusCode">
             <summary>
             Gets or sets the status code (HTTP status code)
             </summary>
             <value>The status code.</value>
            </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.Headers">
             <summary>
             Gets or sets the HTTP headers
             </summary>
             <value>HTTP headers</value>
            </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.Data">
             <summary>
             Gets or sets the data (parsed HTTP body)
             </summary>
             <value>The data.</value>
            </member>
        <member name="M:IO.Swagger.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiResponse`1" /> class.
             </summary>
             <param name="statusCode">HTTP status code.</param>
             <param name="headers">HTTP headers.</param>
             <param name="data">Data (parsed HTTP body)</param>
            </member>
        <member name="T:IO.Swagger.Client.Configuration">
>>>>>>> devel
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OverrideUpdatedAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.#ctor(IO.Swagger.Model.Parameter)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.OverrideUpdatedAllOf" /> class.
             </summary>
             <param name="data">data (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.OverrideUpdatedAllOf.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.Equals(IO.Swagger.Model.OverrideUpdatedAllOf)">
             <summary>
             Returns true if OverrideUpdatedAllOf instances are equal
             </summary>
             <param name="input">Instance of OverrideUpdatedAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.OverrideUpdatedAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs">
             <summary>
             Args(action_point_id: str, robot: arcor2.data.rpc.common.RobotArg, name: str = 'default')
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.#ctor(System.String,System.String,IO.Swagger.Model.RobotArg)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="name">name (default to "default").</param>
             <param name="robot">robot (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.Robot">
             <summary>
             Gets or Sets Robot
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.Equals(IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs)">
             <summary>
             Returns true if AddActionPointOrientationUsingRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddActionPointOrientationUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointOrientationUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs">
             <summary>
             Args(action_point_id: str, robot_id: str, name: str = 'default')
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs" /> class.
             </summary>
             <param name="actionPointId">actionPointId (required).</param>
             <param name="name">name (default to "default").</param>
             <param name="robotId">robotId (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.ActionPointId">
             <summary>
             Gets or Sets ActionPointId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.RobotId">
             <summary>
             Gets or Sets RobotId
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
<<<<<<< HEAD
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.Equals(IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs)">
             <summary>
             Returns true if AddActionPointJointsUsingRobotRequestArgs instances are equal
             </summary>
             <param name="input">Instance of AddActionPointJointsUsingRobotRequestArgs to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.AddActionPointJointsUsingRobotRequestArgs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.ListProjectsResponseDataAllOf">
             <summary>
             ListProjectsResponseDataAllOf
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponseDataAllOf" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.#ctor(System.Boolean,System.DateTime,System.Collections.Generic.List{System.String},System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.ListProjectsResponseDataAllOf" /> class.
             </summary>
             <param name="executable">Logic is defined and valid. (default to false).</param>
             <param name="modified">modified.</param>
             <param name="problems">problems.</param>
             <param name="sceneId">sceneId (required).</param>
             <param name="valid">Objects and their actions exists. (default to false).</param>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseDataAllOf.Executable">
             <summary>
             Logic is defined and valid.
             </summary>
             <value>Logic is defined and valid.</value>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseDataAllOf.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseDataAllOf.Problems">
             <summary>
             Gets or Sets Problems
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseDataAllOf.SceneId">
             <summary>
             Gets or Sets SceneId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ListProjectsResponseDataAllOf.Valid">
             <summary>
             Objects and their actions exists.
             </summary>
             <value>Objects and their actions exists.</value>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.Equals(IO.Swagger.Model.ListProjectsResponseDataAllOf)">
             <summary>
             Returns true if ListProjectsResponseDataAllOf instances are equal
             </summary>
             <param name="input">Instance of ListProjectsResponseDataAllOf to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.ListProjectsResponseDataAllOf.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.BareActionPoint">
             <summary>
             BareActionPoint(id: str, name: str, position: arcor2.data.common.Position, parent: Union[str, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareActionPoint.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareActionPoint" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareActionPoint.#ctor(System.String,System.String,System.String,IO.Swagger.Model.Position)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareActionPoint" /> class.
             </summary>
             <param name="id">id (required).</param>
             <param name="name">name (required).</param>
             <param name="parent">parent.</param>
             <param name="position">position (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BareActionPoint.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareActionPoint.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareActionPoint.Parent">
             <summary>
             Gets or Sets Parent
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareActionPoint.Position">
             <summary>
             Gets or Sets Position
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareActionPoint.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareActionPoint.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareActionPoint.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareActionPoint.Equals(IO.Swagger.Model.BareActionPoint)">
             <summary>
             Returns true if BareActionPoint instances are equal
             </summary>
             <param name="input">Instance of BareActionPoint to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareActionPoint.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareActionPoint.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:IO.Swagger.Model.BareScene">
             <summary>
             BareScene(id: str, name: str, desc: str = &lt;factory&gt;, modified: Union[datetime.datetime, NoneType] = None, int_modified: Union[datetime.datetime, NoneType] = None)
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareScene" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Model.BareScene" /> class.
             </summary>
             <param name="desc">desc (default to "").</param>
             <param name="id">id (required).</param>
             <param name="intModified">intModified.</param>
             <param name="modified">modified.</param>
             <param name="name">name (required).</param>
            </member>
        <member name="P:IO.Swagger.Model.BareScene.Desc">
             <summary>
             Gets or Sets Desc
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareScene.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareScene.IntModified">
             <summary>
             Gets or Sets IntModified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareScene.Modified">
             <summary>
             Gets or Sets Modified
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.BareScene.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.Equals(IO.Swagger.Model.BareScene)">
             <summary>
             Returns true if BareScene instances are equal
             </summary>
             <param name="input">Instance of BareScene to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:IO.Swagger.Model.BareScene.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
=======
>>>>>>> devel
    </members>
</doc>
